var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"1.0.0","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["10480","16","256","3.10.3","abov","aka","android","api","app","auto","below","build","build.dev","build.doc","build.prodrun","chang","code","command","compo","compodoc","construct","content","continu","coverag","current","default","depend","descriptor","dev","deve","develop","differ","doc","document","don't","e2","each","emfil","end","eni","error","execut","fail","fast","file","g","game","gener","get","global","here","higher","https://yarnpkg.com","index","inspir","instal","instanc","integr","interact","io","istanbul","karma","learn","licens","limit","livereload","make","manag","mani","match","maximum","mode","more","n","nativescript","nb","node","note","npm","open","os","prerequisit","prod","project'","protractor","puzzl","rais","report","result","run","serve.compodoc","serve.coverag","shell","site","small","spec","start","start.dev","sure","tabl","test","test.watch","three","typescripthow","ulimit","under","us","v6.5.0","version","via","view","watch","webdriv","well","window","yarn"],"overview.html":["1","19","23","26","7","8","analyticsmodul","appcompon","bootstrap","class","cluster_coremodul","cluster_coremodule_import","cluster_puzzlemodul","cluster_puzzlemodule_import","cluster_samplemodul","cluster_samplemodule_export","cluster_webmodul","cluster_webmodule_bootstrap","cluster_webmodule_import","compon","coremodul","declar","depend","direct","export","inject","interfac","legend","match","modul","multilingualmodul","out","overview","provid","puzzlemodul","reset","result","samplemodul","sharedmodul","webmodul","zoom"],"license.html":["2017","abov","action","and/or","aris","associ","author","bradi","c","charg","claim","condit","connect","contract","copi","copyright","damag","deal","distribut","document","event","express","file","fit","follow","free","furnish","get","grant","herebi","holder","houseknecht","impli","includ","kind","liabil","liabl","licens","limit","match","merchant","merg","mit","modifi","noninfring","notic","obtain","otherwis","out","particular","permiss","permit","person","portion","provid","publish","purpos","restrict","result","right","sell","shall","softwar","start","subject","sublicens","substanti","tort","us","warranti","whether","without"],"modules.html":["analyticsmodul","avail","brows","browser","coremodul","graph","match","modul","multilingualmodul","puzzlemodul","result","samplemodul","sharedmodul","support","svg","webmodul"],"modules/AnalyticsModule.html":["analytics_provid","analyticsmodul","angular/cor","angulartics2","angulartics2modul","angulartics2module.forroot","angulartics2seg","class","export","file","import","info","match","modul","ngmodul","provid","result","services/index","sourc","src/client/app/modules/analytics/analytics.module.t"],"modules/CoreModule.html":["alreadi","angular/common","angular/cor","angular/form","angular/http","angular/rout","array","bootstrap","class","cluster_coremodul","cluster_coremodule_import","commonmodul","config","configur","configuredprovid","consol","consoleservic","constructor(@opt","core_direct","core_provid","coremodul","declar","depend","directives/index","error('coremodul","export","file","formsmodul","forroot(configuredprovid","httpmodul","icoremoduleopt","import","info","interfac","legend","load","match","modul","modulewithprovid","new","ngmodul","option","out","parentmodul","per","platform","provid","requir","reset","result","return","root","routermodul","services/index","shared/index","sharedmodul","skipself","sourc","src/client/app/modules/core/core.module.t","static","throw","utils/index","window","windowservic","zoom"],"modules/MultilingualModule.html":["abov","alreadi","angular/common","angular/cor","angular/form","angular/http","array","assets/i18n","class","commonmodul","components/index","config","config.is_mobile_n","configuredprovid","constructor(@opt","core/index","custom_elements_schema","declar","dep","error('multilingualmodul","export","file","formsmodul","forroot(configuredprovid","function","http","httpmodul","ideal","import","info","json","load","loader","match","modul","modulewithprovid","moment","multilang_compon","multilang_provid","multilingualmodul","new","ngmodul","ngx","no_errors_schema","option","overrid","parentmodul","provid","requir","result","return","root","schema","services/index","skipself","sourc","src/client/app/modules/i18n/multilingual.module.t","static","throw","translate/cor","translate/http","translatehttpload","translatehttploader(http","translateload","translateloaderfactori","translateloaderfactory(http","translatemodul","translatemodule.forroot","us","usag","usefactori"],"modules/PuzzleModule.html":["action_provid","actions/index","alreadi","angular/common","angular/cor","angular/form","angular/http","angular/rout","bootstrap","class","cluster_puzzlemodul","cluster_puzzlemodule_import","commonmodul","components/index","constructor(@opt","custom_elements_schema","declar","depend","error('puzzlemodul","export","file","formsmodul","httpmodul","i18n/multilingual.modul","import","info","legend","load","match","modul","multilingualmodul","new","ngmodul","no_errors_schema","option","out","parentmodul","provid","puzzle_compon","puzzle_provid","puzzlemodul","reset","result","root","routermodul","schema","services/index","skipself","sourc","src/client/app/modules/puzzle/puzzle.module.t","throw","zoom"],"modules/SampleModule.html":["alreadi","angular/common","angular/cor","angular/form","angular/http","angular/rout","bootstrap","class","cluster_samplemodul","cluster_samplemodule_export","cluster_samplemodule_import","commonmodul","constructor(@opt","custom_elements_schema","declar","depend","error('samplemodul","export","file","formsmodul","httpmodul","i18n/multilingual.modul","import","info","legend","load","match","modul","multilingualmodul","new","ngmodul","no_errors_schema","option","out","parentmodul","provid","reset","result","root","routermodul","sample_provid","samplemodul","schema","services/index","shared/index","sharedmodul","skipself","sourc","src/client/app/modules/sample/sample.module.t","throw","zoom"],"modules/SharedModule.html":["angular/common","angular/cor","angular/form","angular/http","angular/rout","class","commonmodul","compon","components/index","const","custom_elements_schema","declar","descript","direct","export","faq.html#!#what","file","formsmodul","here","httpmodul","https://angular.io/docs/ts/latest/cookbook/ngmodul","i18n/index","import","info","kind","match","modul","multilingualmodul","ngmodul","no_errors_schema","pipe","provid","result","routermodul","s","schema","share","shared_compon","shared_modul","sharedmodul","sourc","specifi","src/client/app/modules/shared/shared.module.t","us"],"modules/WebModule.html":["analyticsmodul","angular/common","angular/cor","angular/http","angular/platform","angular/rout","app","app/components/app.rout","app/components/index","app/modules/analytics/index","app/modules/core/index","app/modules/core/services/index","app/modules/i18n/index","app/modules/ngrx/index","app/modules/sample/index","app_base_href","app_compon","appcompon","appreduc","bootstrap","browser","browsermodul","class","cluster_webmodul","cluster_webmodule_bootstrap","cluster_webmodule_import","con","config","config.debug.level_4","config.get_supported_languag","config.platform_target","config.platforms.desktop","config.platforms.web","configur","consol","consolelogtarget","consolelogtarget(consoleservic","consoleservic","consoletarget","consoletarget(consoleservic","coremodul","coremodule.forroot","createconsoletarget","declar","dep","depend","dev","dev_import","devtool","effectsmodul","effectsmodule.run(multilingualeffect","effectsmodule.run(sampleeffect","environ","export","file","function","hashlocationstrategi","http","import","info","languag","legend","localstorag","locationstrategi","loglevel","loglevel.debug","logtarget","match","minloglevel","modul","multi","multilingualeffect","multilingualmodul","multilingualmodule.forroot","new","ngmodul","ngrx/effect","ngrx/store","ngx","out","overrid","provid","provideconsoletarget","reset","result","return","rout","routermodul","routermodule.forroot(rout","sampleeffect","samplemodul","sourc","src/client/web.module.t","state","storag","storageservic","storedevtoolsmodul","storedevtoolsmodule.instrumentonlywithextens","storemodul","storemodule.providestore(appreduc","string","support","translate/cor","translateload","translateloaderfactori","true","useclass","usefactori","usehash","usevalu","var","webmodul","win","window","windowservic","zoom"],"components/AboutComponent.html":["16","2","48","64","_calcheight","_page","about'},{'nam","about.component.css","about.component.html","about_content_1","aboutcompon","actual_compon","angular/cor","app'},{'nam","appcompon","class","compon","component_templ","config","config.pageclass","constructor","constructor(injector","constructor(priv","decor","defin","descript","direct","document","document.titl","dom","el","element","elementref","event","exampl","export","file","handl","height","here","home'},{'nam","homecompon","html","implement","import","index","info","injector","lang","langswitchercompon","legend","match","metadata","method","module.id","moduleid","modules/core/index","n","name","navbar'},{'nam","navbarcompon","ngoninit","number","object","on","oninit","onwindowres","onwindowresize(ev","option","page","paramet","platform","platformdirect","privat","properti","puzzle'},{'nam","puzzlecompon","puzzle{{'about_content_2","puzzle{{\\'about_content_2","pz","result","return","sd","selector","share","sourc","src/client/app/components/about/about.component.t","src/client/app/components/about/about.component.ts:14","src/client/app/components/about/about.component.ts:15","src/client/app/components/about/about.component.ts:16","src/client/app/components/about/about.component.ts:21","src/client/app/components/about/about.component.ts:22","src/client/app/components/about/about.component.ts:30","src/client/app/components/about/about.component.ts:39","src/client/app/components/about/about.component.ts:46","src/client/app/components/about/about.component.ts:55","styleurl","switcher'},{'nam","templat","templateurl","this._calcheight","this._pag","this.el.nativeelement.offsetparent.offsetheight","this.height","this.injector.get(config.pageclass","this.pag","this.page.actionbarhidden","this.timeout","timeout","toolbar","toolbar'},{'nam","toolbarcompon","translat","translate}}eni","tree","true","type","typeof","ui/pag","var","viewchild","viewchild('el","void","way","window.cleartimeout(this.timeout","window.settimeout"],"components/AppComponent.html":["about'},{'nam","aboutcompon","actual_compon","analyt","analyticsservic","angular/cor","app","app'},{'nam","app.component.html","appcompon","applic","appservic","class","compon","component_templ","config","config.environment().env","constructor","constructor(analyt","defin","descript","direct","dom","element","env","export","file","home'},{'nam","homecompon","html","import","index","info","lang","langswitchercompon","legend","lib","log","log.debug(`config","logservic","main","match","metadata","module.id","moduleid","modules/analytics/services/index","modules/core/services/index","modules/core/utils/index","name","navbar'},{'nam","navbarcompon","oninit","oper","option","paramet","platform","platformdirect","privat","properti","public","puzzle'},{'nam","puzzlecompon","pz","repres","result","sd","selector","sourc","src/client/app/components/app.component.t","src/client/app/components/app.component.ts:20","src/client/app/components/app.component.ts:22","src/client/app/components/app.component.ts:23","switcher'},{'nam","templat","templateurl","toolbar","toolbar'},{'nam","toolbarcompon","tree","type","var"],"components/HomeComponent.html":["2","48","64","_calcheight","about'},{'nam","aboutcompon","actual_compon","angular/cor","app'},{'nam","app_stor","appcompon","class","compon","component_templ","constructor","constructor(publ","constructor(routerext","decor","defin","descript","direct","document","document.titl","dom","el","element","elementref","event","export","file","google_play","height","home","home'},{'nam","home.component.css","home.component.html","homecompon","html","implement","import","index","info","lang","langswitchercompon","legend","match","metadata","method","module.id","moduleid","modules/core/services/index","name","navbar'},{'nam","navbarcompon","ngoninit","number","object","oninit","onwindowres","onwindowresize(ev","option","paramet","platform","platformdirect","play","privat","properti","public","puzzle'},{'nam","puzzlecompon","pz","result","return","routerext","routerextens","sd","selector","sourc","src/client/app/components/home/home.component.t","src/client/app/components/home/home.component.ts:15","src/client/app/components/home/home.component.ts:16","src/client/app/components/home/home.component.ts:17","src/client/app/components/home/home.component.ts:19","src/client/app/components/home/home.component.ts:22","src/client/app/components/home/home.component.ts:32","src/client/app/components/home/home.component.ts:41","styleurl","switcher'},{'nam","templat","templateurl","this._calcheight","this.el.nativeelement.offsetparent.offsetheight","this.height","this.timeout","timeout","toolbar","toolbar'},{'nam","toolbarcompon","translat","tree","type","typeof","var","viewchild","viewchild('el","void","window.cleartimeout(this.timeout","window.settimeout"],"components/LangSwitcherComponent.html":["3.0","about'},{'nam","aboutcompon","actions/index","actual_compon","allow","angular/cor","app'},{'nam","appcompon","array","bind","case","chang","change_languag","changelang","changelang(","class","compon","component_templ","config","config.is_desktop","config.is_mobile_n","constructor","constructor(stor","core/index","default","defin","descript","direct","dom","dont","e","e.detail.valu","e.target","e.target.valu","electron","electron/index","electroneventservic","electroneventservice.on('changelang').subscribe((","element","en","ensur","export","fallback","file","home'},{'nam","homecompon","html","i18n","iappstat","ilang","import","index","info","inject","inject(languag","inject(languageviewhelp","item","l.titl","lang","langswitchercompon","languag","languageviewhelp","legend","log","logservic","match","menu","metadata","method","module.id","moduleid","multilingu","multilingual.changeaction(lang","multilingualservic","n","name","navbar'},{'nam","navbarcompon","ngoninit","ngrx/index","ngrx/store","option","paramet","platform","platformdirect","privat","properti","public","puzzle'},{'nam","puzzlecompon","pz","requir","result","return","s","s.18n","s.i18n","s.i18n.lang","sd","segmentedbar","segmentedbaritem","selector","services/index","sourc","src/client/app/modules/i18n/components/lang","state","store","store.take(1).subscribe((","string","styleurl","supportedlanguag","switcher","switcher'},{'nam","switcher.component.css","switcher.component.html","switcher.component.t","switcher.component.ts:20","switcher.component.ts:21","switcher.component.ts:42","switcher.component.ts:56","talk","target","templat","templateurl","test","this.changelang","this.lang","this.languag","this.log.debug(`languag","this.store.dispatch(new","this.supportedlanguag","this.supportedlanguages[0].cod","this.supportedlanguages[e.newindex].cod","this.viewhelp","toolbar","toolbar'},{'nam","toolbarcompon","translat","translate}}:&nbsp;&nbsp","tree","type","us","valu","var","viewhelp","void","work"],"components/NavbarComponent.html":["about'},{'nam","aboutcompon","actual_compon","angular/cor","app'},{'nam","appcompon","class","compon","component_templ","direct","dom","element","export","file","home","home'},{'nam","homecompon","html","import","info","lang","langswitchercompon","legend","match","metadata","module.id","moduleid","name","navbar","navbar'},{'nam","navbar.component.css","navbar.component.html","navbarcompon","platform","platformdirect","puzzl","puzzle'},{'nam","puzzlecompon","pz","result","sd","selector","sourc","src/client/app/modules/shared/components/navbar/navbar.component.t","styleurl","switcher'},{'nam","templat","templateurl","toolbar","toolbar'},{'nam","toolbarcompon","translat","tree","var"],"components/PuzzleComponent.html":["1","2","64","66","8","_actionservic","_boardservic","_boardservice.init(_gamestateservic","_gamestateservic","a.isempti","about'},{'nam","aboutcompon","actionservic","actionsservic","actual_compon","angular/cor","app'},{'nam","appcompon","arg","args.deltax","args.stat","args[key","array","b","board","board(8","boardservic","boolean","break","case","class","clearsubscript","cleartimeout(this.tnsdelayedtask","compon","component_templ","console.log('onsquarepan","console.log('onsquaretap","console.log(board.tostr","constructor","constructor(injector","constructor(priv","databas","databaseservic","databaseservice.exists(id","databaseservice.pull(id","databaseserviceinterfac","defin","descript","direct","document","document.titl","dom","dragoversquar","element","event","event.datatransfer.dropeffect","export","fals","fiddletitl","file","home'},{'nam","homecompon","html","id","if(this.startdragsquar","implement","import","index","info","injector","isback","istoolbarpersist","istoolbarpersisted(id","isubscript","json.stringify(squar","key","lang","langswitchercompon","legend","localstorageservic","match","math.abs(this.startdragsquare.col","metadata","method","module.id","moduleid","modules/puzzle/index","move","name","navbar'},{'nam","navbarcompon","new","ngondestroy","ngoninit","null","number","object","onboardchang","onboardchange(board","ondestroy","onhorizontaldragend","onhorizontaldragend($ev","oninit","onsquareclick","onsquareclick($ev","onsquaredragend","onsquaredragend($ev","onsquaredragov","onsquaredragover($ev","onsquaredragstart","onsquaredragstart($ev","onsquarepan","onsquarepan(arg","onsquareswip","onsquareswipe(arg","onsquaretap","onsquaretap(arg","onverticaldragend","onverticaldragend($ev","option","paramet","platform","platformdirect","play","privat","properti","protect","provid","puzzl","puzzle'},{'nam","puzzle.component.css","puzzle.component.html","puzzlecompon","puzzleconfig","puzzleconfig.titl","puzzlestateservic","pz","repx","restoretoolbarst","restoretoolbarstate(id","result","return","rxjs/subscript","sd","selector","settimeout","sourc","squar","square.cssclass","src/client/app/components/puzzle/puzzle.component.t","src/client/app/components/puzzle/puzzle.component.ts:106","src/client/app/components/puzzle/puzzle.component.ts:114","src/client/app/components/puzzle/puzzle.component.ts:134","src/client/app/components/puzzle/puzzle.component.ts:141","src/client/app/components/puzzle/puzzle.component.ts:145","src/client/app/components/puzzle/puzzle.component.ts:153","src/client/app/components/puzzle/puzzle.component.ts:163","src/client/app/components/puzzle/puzzle.component.ts:168","src/client/app/components/puzzle/puzzle.component.ts:182","src/client/app/components/puzzle/puzzle.component.ts:207","src/client/app/components/puzzle/puzzle.component.ts:25","src/client/app/components/puzzle/puzzle.component.ts:26","src/client/app/components/puzzle/puzzle.component.ts:27","src/client/app/components/puzzle/puzzle.component.ts:28","src/client/app/components/puzzle/puzzle.component.ts:29","src/client/app/components/puzzle/puzzle.component.ts:30","src/client/app/components/puzzle/puzzle.component.ts:31","src/client/app/components/puzzle/puzzle.component.ts:59","src/client/app/components/puzzle/puzzle.component.ts:64","src/client/app/components/puzzle/puzzle.component.ts:68","src/client/app/components/puzzle/puzzle.component.ts:81","src/client/app/components/puzzle/puzzle.component.ts:88","src/client/app/components/puzzle/puzzle.component.ts:93","startdragsquar","state","state.servic","stateservic","string","styleurl","subscript","subscription.unsubscrib","switch(args.direct","switcher'},{'nam","templat","templateurl","this._boardservice.emptysquar","this._boardservice.persist(a","this._boardservice.persist(b","this._boardservice.shiftx(fals","this._boardservice.shiftx(tru","this._gamestateservice.databaseservic","this.board","this.clearsubscript","this.databas","this.dragoversquar","this.dragoversquare.col","this.dragoversquare.row","this.fiddletitl","this.istoolbarpersisted('pz","this.onboardchange(board","this.onhorizontaldragend($ev","this.onverticaldragend($ev","this.restoretoolbarstate('pz","this.startdragsquar","this.startdragsquare.col","this.startdragsquare.row","this.subscript","this.subscriptions.map((subscript","this.subscriptions.push(_boardservice.boardchange$.subscrib","this.tnsdelayedtask","this.toolbaropt","tnsdelayedtask","toggletext","toolbar","toolbar'},{'nam","toolbarcompon","toolbaropt","toolbaroptionsinterfac","toolbarst","tree","true","type","typeof","util","utils.isvalidmove(a","utils.swap(a","var","void"],"components/ToolbarComponent.html":["0","about'},{'nam","aboutcompon","action","actionsenum","actionsenum.play","actionsenum.solv","actual_compon","angular/cor","app'},{'nam","appcompon","base.compon","basecompon","boolean","break","case","chang","class","clearstat","clearstate(id","compon","component_templ","constructor","databas","databaseservic","databaseservice.delete(id","databaseservice.exists(id","databaseservice.pull(id","databaseservice.push(options.id","databaseserviceinterfac","default","defin","descript","direct","dom","element","event","eventemitt","export","extend","fals","file","game","home'},{'nam","homecompon","html","id","implement","import","index","info","input","istoolbarpersist","istoolbarpersisted(id","lang","langswitchercompon","legend","match","metadata","method","module.id","moduleid","name","navbar'},{'nam","navbarcompon","new","ngonchang","ngonchanges(chang","null","onaboutclick","onactionchang","onactionchange(act","onchang","ontoggleclick","option","options.actionservic","options.interfac","options.st","options.toggletext","options.toggletitl","output","paramet","persist","persist(opt","platform","platformdirect","play","privat","properti","puzzl","puzzle'},{'nam","puzzlecompon","pz","restoretoolbaropt","restoretoolbaroptions(id","result","return","sd","selector","simplechang","solv","sourc","src/client/app/modules/puzzle/components/toolbar/toolbar.component.t","src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:111","src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:119","src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:128","src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:135","src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:17","src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:18","src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:19","src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:27","src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:33","src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:39","src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:57","src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:61","src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:80","state","stateservic","stateservice.databaseservic","stateserviceinterfac","string","styleurl","subscrib","super","switch","switcher'},{'nam","templat","templateurl","this.about","this.about.emit(thi","this.databas","this.istoolbarpersisted(options.id","this.onactionchange(act","this.opt","this.options.actionservic","this.options.actionservice.act","this.options.hasownproperty('stateservic","this.options.st","this.options.stateservic","this.persist(this.opt","this.restoretoolbaroptions(options.id","this.subscriptions.length","this.subscriptions.push(options.actionservice.actionchang","this.toggl","this.toggle.emit(thi","this.transform(this.opt","toggl","toolbar","toolbar'},{'nam","toolbar.component.css","toolbar.component.html","toolbar.interfac","toolbarcompon","toolbarinterfac","toolbaroptionsinterfac","transform","transform(opt","tree","type","var","void"],"directives/PlatformDirective.html":["1","agent","agent.indexof('electron","agent.indexof('nativescript","angular/cor","class","constructor","constructor(el","constructor(priv","defin","descript","desktop","direct","el","elementref","export","file","import","info","match","metadata","name","nativescript","option","paramet","platform","platformclass","platformdirect","privat","render","renderer.setelementclass(el.nativeel","result","selector","services/window.servic","sourc","src/client/app/modules/core/directives/platform.directive.t","src/client/app/modules/core/directives/platform.directive.ts:10","true","type","web","win","win.navigator.useragent.tolowercas","windowservic"],"injectables/ActionsService.html":["_action","_actionobserv","action","action(valu","actionchang","actionobserv","actionobserver(valu","actions.enum","actionsenum","actionsenum.start","actionsservic","actionsserviceinterfac","angular/cor","class","constructor","defin","export","file","implement","import","index","info","inject","match","new","null","observ","privat","properti","result","return","rxjs/add/operator/map","rxjs/add/operator/shar","rxjs/observ","service.interfac","set","share","sourc","src/client/app/modules/puzzle/actions/actions.service.t","src/client/app/modules/puzzle/actions/actions.service.ts:12","src/client/app/modules/puzzle/actions/actions.service.ts:14","src/client/app/modules/puzzle/actions/actions.service.ts:15","src/client/app/modules/puzzle/actions/actions.service.ts:18","src/client/app/modules/puzzle/actions/actions.service.ts:26","src/client/app/modules/puzzle/actions/actions.service.ts:38","this._act","this._actionobserv","this.actionchang","this.actionobserv","this.actionobserver.next(valu","type","valu"],"injectables/AnalyticsService.html":["2","_","_.extend(properti","action","analyt","analyticsservic","angular","angular/cor","angulartics2","angulartics2seg","anyth","array","authent","automat","base","boolean","call","categor","categori","class","constructor","constructor(@inject(analyticsservic","constructor(angulartics2","constructor(priv","control","default","defin","descript","dev","devmod","devmode(en","enabl","etc","event","everyth","export","fals","file","https://github.com/angulartics/angulartics2/blob/master/src/core/angulartics2.ts#l90","ianalyt","ianalyticsproperti","identifi","identify(properti","implement","import","index","info","inject","interfac","l104","label","lib","locat","lodash","manual","match","method","mode","name","number","option","pagetrack","pagetrack(path","paramet","path","privat","properti","public","result","return","rout","segment","sourc","src/client/app/modules/analytics/services/analytics.service.t","src/client/app/modules/analytics/services/analytics.service.ts:22","src/client/app/modules/analytics/services/analytics.service.ts:38","src/client/app/modules/analytics/services/analytics.service.ts:48","src/client/app/modules/analytics/services/analytics.service.ts:57","src/client/app/modules/analytics/services/analytics.service.ts:68","standard","string","sub","therefor","this.analytics.track(act","this.angulartics2.developermode(en","this.angulartics2.settings.developermod","this.categori","this.devmod","this.devmode(fals","this.segment.eventtrack(act","this.segment.pagetrack(path","this.segment.setuserproperties(properti","tics2.excluderoutes(rout","tics2.firstpageview(valu","tics2.virtualpageviews(valu","tics2.withbase(valu","track","track(act","true","turn","type","typeof","undefin","us","user","valu","void","whether","wrapper"],"injectables/AppService.html":["analyt","analyticsservic","angular/cor","appservic","class","config","config.environment().env","constructor","constructor(analyt","constructor(publ","defin","descript","env","export","file","import","index","info","inject","log","logging/log.servic","logservic","match","modules/analytics/services/analytics.servic","name","option","paramet","properti","public","result","sourc","src/client/app/modules/core/services/app.service.t","src/client/app/modules/core/services/app.service.ts:10","src/client/app/modules/core/services/app.service.ts:9","this.log.debug(`appservic","type","utils/config"],"injectables/BoardService.html":["0","1","8","_board","_boardobserv","_emptysquar","angular/cor","board","board(board","board(model.rowcount","board.model","board.squar","board.tostr","boardchang","boardservic","boolean","class","col","colclass","common/utils.common","console.log('emptysquar","console.log(json.stringify(this.emptysquar","constructor","cssclass","databas","database/databas","databaseservic","databaseservice.exists(id","databaseservice.pull(id","databaseservice.push(options.id","databaseservice.zero('row","databaseserviceinterfac","defin","descript","emptysquar","emptysquare(valu","emptysquareindic","emptysquareindices.length","emptysquares.length","emptysquares[0","expect","expectedseq","expectedsubseq","expectedvalu","export","fals","file","id","import","index","info","init","init(stateservic","inject","isempti","islast","issolv","issquarepersist","issquarepersisted(id","left","match","max","method","min","model","model.colcount","model.expectedsequ","model.expectedsequence.length","model.issolv","model.rowcount","model.sequ","model.sequence.length","name","new","null","number","observ","option","paramet","persist","persist(opt","po","privat","properti","rep","restoresquareopt","restoresquareoptions(id","result","return","row","row.expectedseq","row.expectedseq.length","row.model","row.seq","row.seq.foreach((num","row.seq.length","rxjs/add/operator/map","rxjs/add/operator/shar","rxjs/observ","s.row","seq","sequenc","sequence(model","service.interfac","set","share","shiftx","shiftx(left","slide","slide(left","sourc","squar","square.isempti","square.model","square.row","squareclass","squarecol","squareid","squareindices.filter((indic","squareindices.length","squareindices.push(index","squareisempti","squarerow","squares.filter((squar","squares.push(squareopt","squarest","squarevalu","src/client/app/modules/puzzle/services/board/board.service.t","src/client/app/modules/puzzle/services/board/board.service.ts:123","src/client/app/modules/puzzle/services/board/board.service.ts:168","src/client/app/modules/puzzle/services/board/board.service.ts:176","src/client/app/modules/puzzle/services/board/board.service.ts:185","src/client/app/modules/puzzle/services/board/board.service.ts:19","src/client/app/modules/puzzle/services/board/board.service.ts:193","src/client/app/modules/puzzle/services/board/board.service.ts:20","src/client/app/modules/puzzle/services/board/board.service.ts:208","src/client/app/modules/puzzle/services/board/board.service.ts:214","src/client/app/modules/puzzle/services/board/board.service.ts:22","src/client/app/modules/puzzle/services/board/board.service.ts:23","src/client/app/modules/puzzle/services/board/board.service.ts:24","src/client/app/modules/puzzle/services/board/board.service.ts:36","src/client/app/modules/puzzle/services/board/board.service.ts:40","src/client/app/modules/puzzle/services/board/board.service.ts:46","src/client/app/modules/puzzle/services/board/board.service.ts:56","src/client/app/modules/puzzle/services/board/board.service.ts:69","src/client/app/modules/puzzle/services/board/board.service.ts:88","state/st","stateservic","stateservice.databaseservic","stateserviceinterfac","store","store.foreach((row","string","string(i","string(squareexpectedvalu","subseq","this._board","this._board.tostr","this._boardobserv","this._boardobserver.next(board","this._emptysquar","this.board","this.board.squar","this.board.squares.foreach((squar","this.board.squares[emptysquareindices[0","this.board.squares[indice].isempti","this.board.squares[squareindices[0","this.board.squares[squareindices[1","this.board.squares[squareindices[2","this.board.squares[squareindices[3","this.board.squares[squareindices[4","this.board.squares[squareindices[5","this.board.squares[squareindices[6","this.board.squares[squareindices[7","this.boardchang","this.databas","this.emptysquar","this.persist","this.persist(squar","this.sequence(model","this.transform(board","this.transformstore(stor","transform","transform(model","transformstor","transformstore(stor","true","type","unpersist","util","utils.generatesequence(min","utils.generatesequentialsequence(min","utils.mapcolclass(num","utils.swap(this.board.squares[squareindices[0","utils.swap(this.board.squares[squareindices[1","utils.swap(this.board.squares[squareindices[2","utils.swap(this.board.squares[squareindices[3","utils.swap(this.board.squares[squareindices[4","utils.swap(this.board.squares[squareindices[5","utils.swap(this.board.squares[squareindices[6","utils.swap(this.board.squares[squareindices[7","valu","var","void"],"injectables/ConsoleService.html":["angular/cor","class","consoleservic","debug","debug(m","defin","descript","error","error(m","export","file","iconsol","implement","import","index","info","info(m","inject","interfaces/iconsol","log","log(m","m","match","method","name","option","paramet","public","result","return","sourc","src/client/app/modules/core/services/console.service.t","src/client/app/modules/core/services/console.service.ts:10","src/client/app/modules/core/services/console.service.ts:11","src/client/app/modules/core/services/console.service.ts:12","src/client/app/modules/core/services/console.service.ts:13","src/client/app/modules/core/services/console.service.ts:14","type","void","warn","warn(m"],"injectables/ConsoleTarget.html":["angular/cor","break","c","case","class","consol","console.servic","consoleservic","consoletarget","consoletarget(c","consoletarget(consoleservic","constructor","constructor(consol","constructor(priv","createconsoletarget(level","defin","dep","descript","event","event.level","export","extend","file","function","import","index","info","inject","level","log.target","logev","loglevel","loglevel.debug","loglevel.error","loglevel.info","loglevel.warn","logtarget","logtargetbas","logtargetopt","match","method","minloglevel","multi","name","new","option","paramet","promise.resolv","provid","provideconsoletarget(loglevel","result","return","sourc","src/client/app/modules/core/services/logging/console.target.t","src/client/app/modules/core/services/logging/console.target.ts:11","src/client/app/modules/core/services/logging/console.target.ts:6","super(opt","switch","this.console.error(event.messag","this.console.info(event.messag","this.console.log(event.messag","this.console.warn(event.messag","true","type","usefactori","writetolog","writetolog(ev"],"injectables/LocalStorageService.html":["1","angular/cor","boolean","catch","class","connect","core/services/storage.servic","criteria","databas","databaseserviceinterfac","defin","delet","delete(t","descript","e","exist","exists(t","exists(table:str","export","fals","file","implement","import","index","info","inject","json.parse(localstorage[t","json.stringify(valu","localstorag","localstorage.hasownproperty(t","localstorage.removeitem(t","localstorage[t","localstorageservic","match","method","name","null","option","paramet","properti","pull","pull(tabl","push","push(tabl","result","return","service.interfac","sourc","src/client/app/modules/puzzle/services/database/loc","storage.service.t","storage.service.ts:18","storage.service.ts:22","storage.service.ts:26","storage.service.ts:40","storage.service.ts:52","storage.service.ts:59","storage.service.ts:8","storageservic","string","string):ani","tabl","table.indexof(criteria","tables.foreach((table:str","tables.length","tables.push(t","this.connect","this.delete(t","this.push(t","this.tabl","tri","true","type","valu","void","zero","zero(criteria"],"injectables/LogService.html":["_","angular/cor","app","class","config","config.debug.level_1","config.debug.level_2","config.debug.level_3","config.debug.level_4","console.debug","console.servic","consoleservic","constructor","constructor(target","debug","debug(...msg","defin","descript","err","error","error(...err","export","file","forwardref","import","index","info","info(...err","inject","inject(logtarget","level","lodash","log","log.target","logev","logevent(target","logger","loglevel","loglevel.debug","loglevel.error","loglevel.info","loglevel.warn","logservic","logtarget","match","messag","method","msg","n","name","object","option","output","paramet","privat","promise.all(_.map(this.target","promise.resolv","public","result","return","sourc","src/client/app/modules/core/services/logging/log.service.t","src/client/app/modules/core/services/logging/log.service.ts:10","src/client/app/modules/core/services/logging/log.service.ts:16","src/client/app/modules/core/services/logging/log.service.ts:25","src/client/app/modules/core/services/logging/log.service.ts:33","src/client/app/modules/core/services/logging/log.service.ts:41","src/client/app/modules/core/services/logging/log.service.ts:48","standard","string","target","target.log","this.logevent(logg","type","us","utils/config","warn","warn(...err","work"],"injectables/MockLocationStrategy.html":["0","1","_subject","allow","angular/common","angular/cor","back","boolean","class","constructor","constructor(publ","ctx","default","defin","descript","event","eventemitt","exampl","export","extend","externalurl","fals","file","fire","fn","forward","function","getbasehref","implement","import","includehash","index","info","inject","intern","internal).startswith","internal.substring(1","internalbasehref","internalpath","internaltitl","link","locat","locationstrategi","match","method","mock","mocklocationstrategi","mockpopstateev","mockpopstateevent(this.path","name","new","newurl","nexturl","onpopst","onpopstate(fn","option","paramet","path","path(includehash","pop","popstat","prepareexternalurl","prepareexternalurl(intern","properti","pushstat","pushstate(ctx","queri","query.length","replacest","replacestate(ctx","result","return","simul","simulatepopst","simulatepopstate(url","sourc","src/client/app/modules/core/testing/mocks/mock","stabl","strategy.t","strategy.ts:16","strategy.ts:17","strategy.ts:18","strategy.ts:19","strategy.ts:21","strategy.ts:24","strategy.ts:29","strategy.ts:31","strategy.ts:38","strategy.ts:48","strategy.ts:58","strategy.ts:60","strategy.ts:62","strategy.ts:70","string","super","test","this._subject.emit(new","this._subject.subscribe({next","this.internalbasehref","this.internalbasehref).endswith","this.internalpath","this.internaltitl","this.prepareexternalurl(url","this.simulatepopstate(nexturl","this.urlchanges.length","this.urlchanges.pop","this.urlchanges.push('replac","this.urlchanges.push(externalurl","this.urlchanges[this.urlchanges.length","throw","titl","true","type","url","urlchang","valu","var","void"],"injectables/MultilingualEffects.html":["action","action.payload","actions/multilingual.act","analyt","angular/cor","chang","class","code","constructor","constructor(stor","decor","defin","descript","effect","exampl","export","file","here","import","includ","includes(map(this.languag","index","info","inject","inject(languag","label","lang","langchangedact","langchangedaction.payload","languag","lib","lodash","map","map(act","match","multilangservic","multilingu","multilingual.langchangedaction(lang","multilingual.langunsupportedaction(lang","multilingualeffect","multilingualservic","name","new","ngrx/effect","ngrx/store","observ","oftype(multilingual.actiontypes.chang","option","paramet","privat","properti","result","return","rxjs/add/operator/map","rxjs/observ","services/multilingual.servic","sourc","src/client/app/modules/i18n/effects/multilingual.effect.t","src/client/app/modules/i18n/effects/multilingual.effect.ts:18","src/client/app/modules/i18n/effects/multilingual.effect.ts:32","state","store","support","this.act","this.multilangservice.track(langchangedaction.typ","track","type"],"injectables/MultilingualService.html":["0","actions/index","analyt","analytics/index","analyticsservic","angular/cor","avail","bind","browser/platform","categori","caus","chang","changeact","changeaction(userlang","class","common/category.common","const","constructor","constructor(analyt","core/index","core/services/window.servic","current","defin","descript","export","extend","fallback","file","found","handl","helper","iappstat","ilang","import","imultilingualst","index","info","init","initialst","inject","injectiontoken","injectiontoken('languag","injectiontoken('languageviewhelp","isn't","lang","languag","languageprovid","languageviewhelp","lib","match","multilingualservic","n","name","new","ng2","ngrx/index","ngrx/store","ngx","null","occur","option","paramet","privat","properti","provid","public","result","runtim","s.i18n).subscribe((st","segmentedbar","servic","sourc","specif","src/client/app/modules/i18n/services/multilingual.service.t","src/client/app/modules/i18n/services/multilingual.service.ts:31","src/client/app/modules/i18n/services/multilingual.service.ts:34","states/index","store","store.select(","subscrib","super(analyt","support","this.categori","this.store.dispatch(new","this.translate.use(state.lang","translat","translate.setdefaultlang(initialstate.lang","translate/cor","translatepip","translateservic","type","updat","us","userlang","usevalu","view","wherev","win","win.navigator.language.split","windowservic"],"injectables/NameListService.html":["actions/index","analyt","analytics/index","analyticsservic","angular/cor","angular/http","assets/data.json","class","config","constructor","constructor(analyt","core/index","defin","descript","export","extend","file","getnam","http","import","index","info","inject","lib","list.service.t","list.service.ts:16","list.service.ts:19","list.service.ts:26","map(r","match","method","name","namelist","namelist.categori","namelistservic","observ","option","paramet","privat","properti","public","res.json","result","return","rxjs/observ","sourc","src/client/app/modules/sample/services/nam","super(analyt","this.categori","this.http.get(`${config.is_mobile_n","type"],"injectables/PuzzleStateService.html":["angular/cor","class","constructor","constructor(databaseservic","databaseservic","defin","descript","export","extend","file","import","info","inject","localstorageservic","match","modules/puzzle/index","name","option","paramet","puzzlestateservic","result","rxjs/add/operator/shar","sourc","src/client/app/components/puzzle/puzzl","state.service.t","state.service.ts:9","stateservic","super(databaseservic","type"],"injectables/RouterExtensions.html":["angular/common","angular/cor","angular/rout","anim","array","back","boolean","class","clearhistori","command","constructor","constructor(publ","constructor(rout","curv","defin","descript","durat","end","export","extend","extendednavigationextra","extensions.service.t","extensions.service.ts:26","extensions.service.ts:28","extensions.service.ts:30","extensions.service.ts:34","extensions.service.ts:38","extra","file","https://docs.nativescript.org/api","implement","import","index","info","inject","instanc","interfac","irouterextens","locationstrategi","match","method","name","nativescript","navig","navigate(command","navigatebyurl","navigatebyurl(url","navigationextra","number","option","paramet","privat","promis","properti","public","reference/interfaces/_ui_frame_.navigationtransition.html","result","return","router","routerextens","see","sourc","src/client/app/modules/core/services/rout","string","this.locationstrategy.back","this.router.navigate(command","this.router.navigatebyurl(url","transit","true","type","url","urltre","void"],"injectables/RouterExtensionsMock.html":["angular/cor","angular/rout","array","back","class","command","defin","descript","export","extendednavigationextra","extensions.mock.t","extensions.mock.ts:10","extensions.mock.ts:14","extensions.mock.ts:18","extra","file","implement","import","index","info","inject","irouterextens","match","method","name","navig","navigate(command","navigatebyurl","navigatebyurl(url","option","paramet","promis","promise.resolve(tru","result","return","routerextensionsmock","servic","sourc","src/client/app/modules/core/testing/mocks/rout","string","true","type","url","urltre","void"],"injectables/SampleEffects.html":["action","action.payload","actions/index","add","analyt","angular/cor","catch","class","constructor","constructor(stor","decor","defin","descript","effect","exampl","export","failur","file","here","immedi","import","index","info","init","inject","label","lib","list.servic","make","map(act","map(payload","match","moment","name","namelist","namelist.initact","namelist.initfailedact","namelist.initializedaction(nam","namelist.nameaddedaction(nam","namelistservic","new","ngrx/effect","ngrx/store","noth","observ","observable.of(new","oftype(namelist.actiontypes.add","oftype(namelist.actiontypes.init","oper","option","paramet","payload","privat","properti","react","result","return","rxjs/observ","sampleeffect","services/nam","sourc","src/client/app/modules/sample/effects/sample.effect.t","src/client/app/modules/sample/effects/sample.effect.ts:20","src/client/app/modules/sample/effects/sample.effect.ts:31","src/client/app/modules/sample/effects/sample.effect.ts:38","startup","startwith","startwith(new","store","switchmap","this.act","this.namelistservice.getnam","this.namelistservice.track(namelist.actiontypes.name_ad","trigger","type","us","want"],"injectables/StateService.html":["_stateev","_stateeventobserv","angular/cor","class","constructor","constructor(databaseservic","constructor(publ","database/loc","databaseservic","defin","descript","export","file","implement","import","index","info","init","inject","localstorageservic","match","name","new","observ","observer:ani","option","paramet","privat","properti","public","result","return","rxjs/add/operator/shar","rxjs/observ","service.interfac","set","share","sourc","src/client/app/modules/puzzle/services/state/state.service.t","src/client/app/modules/puzzle/services/state/state.service.ts:12","src/client/app/modules/puzzle/services/state/state.service.ts:14","src/client/app/modules/puzzle/services/state/state.service.ts:15","src/client/app/modules/puzzle/services/state/state.service.ts:17","src/client/app/modules/puzzle/services/state/state.service.ts:27","state","stateev","stateevent(valu","stateeventchang","stateservic","stateserviceinterfac","storage.servic","string","this._stateev","this._stateeventobserv","this._stateeventobserver.next(valu","this.stateev","this.stateeventchang","type","valu"],"injectables/StorageService.html":["angular/cor","class","const","defin","descript","export","file","getitem","getitem(key","implement","import","index","info","inject","interfaces/istorag","istorag","json.parse(valu","json.stringify(valu","key","localstorage.getitem","localstorage.removeitem","localstorage.setitem","match","method","name","null","option","paramet","removeitem","removeitem(key","result","return","setitem","setitem(key","sourc","src/client/app/modules/core/services/storage.service.t","src/client/app/modules/core/services/storage.service.ts:10","src/client/app/modules/core/services/storage.service.ts:14","src/client/app/modules/core/services/storage.service.ts:19","storagekey","storageservic","type","valu","void"],"injectables/WindowService.html":["alert","alert(msg","angular/cor","class","confirm","confirm(msg","defin","descript","export","file","implement","import","index","info","inject","interfaces/iwindow","iwindow","locat","match","method","msg","name","navig","option","paramet","properti","public","result","return","sourc","src/client/app/modules/core/services/window.service.t","src/client/app/modules/core/services/window.service.ts:10","src/client/app/modules/core/services/window.service.ts:11","src/client/app/modules/core/services/window.service.ts:12","src/client/app/modules/core/services/window.service.ts:13","string","type","void","windowservic"],"classes/Analytics.html":["2","_","_.extend(properti","action","analyt","analyticsservic","angular","angular/cor","angulartics2","angulartics2seg","anyth","array","authent","automat","base","boolean","call","categor","categori","class","constructor","constructor(@inject(analyticsservic","constructor(analyt","constructor(priv","control","decor","default","defin","descript","dev","devmode(en","enabl","etc","event","everyth","export","fals","file","https://github.com/angulartics/angulartics2/blob/master/src/core/angulartics2.ts#l90","ianalyt","ianalyticsproperti","identifi","identify(properti","implement","import","index","info","inject","interfac","l104","label","lib","locat","lodash","manual","match","method","mode","name","number","option","pagetrack(path","paramet","privat","properti","public","result","return","rout","segment","sourc","src/client/app/modules/analytics/services/analytics.service.t","src/client/app/modules/analytics/services/analytics.service.ts:82","src/client/app/modules/analytics/services/analytics.service.ts:84","src/client/app/modules/analytics/services/analytics.service.ts:91","standard","string","sub","therefor","this.analytics.track(act","this.angulartics2.developermode(en","this.angulartics2.settings.developermod","this.categori","this.devmod","this.devmode(fals","this.segment.eventtrack(act","this.segment.pagetrack(path","this.segment.setuserproperties(properti","tics2.excluderoutes(rout","tics2.firstpageview(valu","tics2.virtualpageviews(valu","tics2.withbase(valu","track","track(act","true","turn","type","typeof","undefin","us","user","valu","void","whether","wrapper"],"classes/BaseComponent.html":["angular/cor","array","basecompon","class","clearsubscript","common/index","console.log(tag","consolelogmsg","consolelogmsg(tag","constructor","defin","descript","error","export","file","handleerror","handleerrors(error","implement","import","index","info","isubscript","match","method","msg","name","ngondestroy","ondestroy","option","paramet","properti","protect","puzzleconfig","puzzleconfig.isdev","result","return","rxjs/subscript","sourc","src/client/app/modules/puzzle/components/base.component.t","src/client/app/modules/puzzle/components/base.component.ts:14","src/client/app/modules/puzzle/components/base.component.ts:18","src/client/app/modules/puzzle/components/base.component.ts:25","src/client/app/modules/puzzle/components/base.component.ts:29","src/client/app/modules/puzzle/components/base.component.ts:8","string","subscript","subscription.unsubscrib","tag","this.clearsubscript","this.consolelogmsg('error","this.subscript","this.subscriptions.map((subscript","true","type","void"],"classes/BaseService.html":["angular/cor","array","baseservic","class","clearsubscript","common/index","console.log('record","console.log(tag","consolelogmsg","consolelogmsg(tag","consolelogrecord","consolelogrecord(i","constructor","defin","descript","error","export","file","handleerror","handleerrors(error","implement","import","index","info","interfaces/model.interfac","isubscript","match","method","model","model.tostr","modelinterfac","msg","name","ngondestroy","ondestroy","option","paramet","properti","protect","puzzleconfig","puzzleconfig.isdev","result","return","rxjs/subscript","sourc","src/client/app/modules/puzzle/services/base.service.t","src/client/app/modules/puzzle/services/base.service.ts:15","src/client/app/modules/puzzle/services/base.service.ts:19","src/client/app/modules/puzzle/services/base.service.ts:26","src/client/app/modules/puzzle/services/base.service.ts:30","src/client/app/modules/puzzle/services/base.service.ts:36","src/client/app/modules/puzzle/services/base.service.ts:9","string","subscript","subscription.unsubscrib","tag","this.clearsubscript","this.consolelogmsg('error","this.subscript","this.subscriptions.map((subscript","true","type","void"],"classes/Board.html":["0","_squar","board","boolean","class","col","colcount","constructor","constructor(rowcount","default","defin","descript","expectedsequ","export","fals","file","implement","import","index","info","interfaces/model.interfac","issolv","json.stringify(this.expectedsequ","json.stringify(this.sequ","match","method","modelinterfac","name","number","option","paramet","privat","properti","public","result","return","row","rowcount","sequenc","set","sourc","squar","square.model","squares(valu","src/client/app/modules/puzzle/services/board/board.model.t","src/client/app/modules/puzzle/services/board/board.model.ts:14","src/client/app/modules/puzzle/services/board/board.model.ts:17","src/client/app/modules/puzzle/services/board/board.model.ts:18","src/client/app/modules/puzzle/services/board/board.model.ts:19","src/client/app/modules/puzzle/services/board/board.model.ts:20","src/client/app/modules/puzzle/services/board/board.model.ts:21","src/client/app/modules/puzzle/services/board/board.model.ts:26","src/client/app/modules/puzzle/services/board/board.model.ts:6","src/client/app/modules/puzzle/services/board/board.model.ts:8","string","this._squar","this._squares.length","this.colcount","this.issolv","this.rowcount","tostr","type","valu"],"classes/ChangeAction.html":["action","actiontyp","actiontypes.chang","actiontypes.lang_chang","actiontypes.lang_unsupport","alia","applic","categori","chang","changeact","check","class","coerc","common/category.common","compos","compris","const","constructor","constructor(payload","constructor(publ","core/utils/typ","defin","descript","discrimin","each","easili","enabl","enum","export","express","file","function","group","group'","guarante","https://www.typescriptlang.org/docs/handbook/advanc","implement","import","imultilingualact","index","info","interfac","lang","lang_chang","lang_unsupport","langchangedact","langunsupportedact","liter","make","match","name","ngrx/store","object","option","paramet","payload","power","properti","public","reduc","result","run","see","simpl","sourc","src/client/app/modules/i18n/actions/multilingual.action.t","src/client/app/modules/i18n/actions/multilingual.action.ts:38","src/client/app/modules/i18n/actions/multilingual.action.ts:40","string","type","type(`[${categori","types.html#discrimin","union","uniqu","unsupport","util"],"classes/Config.html":["abov","api","bg","boolean","bulgarian","catch","check","class","code","config","config.debug","config.debug[key","config.platform_target","config.platforms.desktop","config.platforms.mobile_hybrid","config.platforms.mobile_n","config.platforms.web","conveni","current","debug","default","defin","desktop","en","english","env","envconfig","environ","error","es","exp","export","fals","file","fr","french","get_supported_languag","index","info","interfac","iplatform","is_debug_mod","is_desktop","is_mobile_hybrid","is_mobile_n","is_web","json.pars","key","languag","level","level_1","level_2","level_3","level_4","log","match","method","mobile_hybrid","mobile_n","mode","pageclass","platform","platform_target","properti","public","reset","result","return","ru","russian","sourc","spanish","src/client/app/modules/core/utils/config.t","src/client/app/modules/core/utils/config.ts:17","src/client/app/modules/core/utils/config.ts:20","src/client/app/modules/core/utils/config.ts:28","src/client/app/modules/core/utils/config.ts:36","src/client/app/modules/core/utils/config.ts:39","src/client/app/modules/core/utils/config.ts:43","src/client/app/modules/core/utils/config.ts:47","src/client/app/modules/core/utils/config.ts:51","src/client/app/modules/core/utils/config.ts:55","src/client/app/modules/core/utils/config.ts:64","src/client/app/modules/core/utils/config.ts:74","src/client/app/modules/core/utils/config.ts:85","static","string","support","target","titl","tri","true","type","void","warn","web"],"classes/ConfigMock.html":["availablelanguag","class","code","config.mock.t","config.mock.ts:2","config.mock.ts:6","configmock","debug","defaultlanguag","defin","descript","en","english","export","fals","file","getset","getsettings(group","group","i18n","index","info","init","key","level_1","level_2","level_3","level_4","log","match","method","name","null","option","paramet","result","return","sourc","src/client/app/modules/core/testing/mocks/ng2","string","titl","true","type"],"classes/ConfigMockMultilang.html":["availablelanguag","bg","bulgarian","class","code","config","configmockmultilang","debug","defaultlanguag","defin","descript","en","english","es","export","fals","file","fr","french","getset","getsettings(group","group","i18n","index","info","init","key","level_1","level_2","level_3","level_4","log","match","method","multilang.mock.t","multilang.mock.ts:2","multilang.mock.ts:6","name","null","option","paramet","result","return","ru","russian","sourc","spanish","src/client/app/modules/i18n/testing/mocks/ng2","string","titl","true","type"],"classes/ConfigRecord.html":["class","configrecord","constructor","constructor(key","constructor(publ","defin","descript","export","file","implement","import","index","info","interfaces/model.interfac","key","match","method","modelinterfac","name","option","paramet","properti","public","record.model.t","record.model.ts:3","record.model.ts:5","record.model.ts:7","result","return","sourc","src/client/app/modules/puzzle/services/database/config","string","this.key","this.valu","tostr","type","valu"],"classes/DesktopConfig.html":["array","bg","bulgarian","class","code","config.t","config.ts:6","core/index","defin","desktopconfig","en","english","es","export","file","fr","french","get_supported_languag","ilang","import","index","info","match","method","public","result","return","ru","russian","sourc","spanish","src/client/app/modules/electron/utils/desktop","static","titl"],"classes/ElectronEventService.html":["add","class","declar","defin","descript","electroneventservic","export","file","helper","import","index","info","match","menu","method","more","name","observ","observable.fromevent(window","on(nam","option","paramet","public","result","return","rxjs/add/observable/fromev","rxjs/observ","setup","sourc","src/client/app/modules/electron/services/event.service.t","src/client/app/modules/electron/services/event.service.ts:9","static","string","todo","type","var","window"],"classes/LangChangedAction.html":["action","actiontyp","actiontypes.chang","actiontypes.lang_chang","actiontypes.lang_unsupport","alia","applic","categori","chang","changeact","check","class","coerc","common/category.common","compos","compris","const","constructor","constructor(payload","constructor(publ","core/utils/typ","defin","descript","discrimin","each","easili","enabl","enum","export","express","file","function","group","group'","guarante","https://www.typescriptlang.org/docs/handbook/advanc","implement","import","imultilingualact","index","info","interfac","lang","lang_chang","lang_unsupport","langchangedact","langunsupportedact","liter","make","match","name","ngrx/store","object","option","paramet","payload","power","properti","public","reduc","result","run","see","simpl","sourc","src/client/app/modules/i18n/actions/multilingual.action.t","src/client/app/modules/i18n/actions/multilingual.action.ts:44","src/client/app/modules/i18n/actions/multilingual.action.ts:46","string","type","type(`[${categori","types.html#discrimin","union","uniqu","unsupport","util"],"classes/LangUnsupportedAction.html":["action","actiontyp","actiontypes.chang","actiontypes.lang_chang","actiontypes.lang_unsupport","alia","applic","categori","chang","changeact","check","class","coerc","common/category.common","compos","compris","const","constructor","constructor(payload","constructor(publ","core/utils/typ","defin","descript","discrimin","each","easili","enabl","enum","export","express","file","function","group","group'","guarante","https://www.typescriptlang.org/docs/handbook/advanc","implement","import","imultilingualact","index","info","interfac","lang","lang_chang","lang_unsupport","langchangedact","langunsupportedact","liter","make","match","name","ngrx/store","object","option","paramet","payload","power","properti","public","reduc","result","run","see","simpl","sourc","src/client/app/modules/i18n/actions/multilingual.action.t","src/client/app/modules/i18n/actions/multilingual.action.ts:50","src/client/app/modules/i18n/actions/multilingual.action.ts:52","string","type","type(`[${categori","types.html#discrimin","union","uniqu","unsupport","util"],"classes/LogTarget.html":["0","1","2","4","abstract","class","constructor(protect","debug","defin","descript","enum","error","event","event.level","export","file","implement","index","info","interfac","level","log","log(ev","logev","loglevel","logtarget","logtargetbas","logtargetopt","match","messag","method","minloglevel","name","object","option","paramet","promis","promise.resolv","protect","result","return","sourc","src/client/app/modules/core/services/logging/log.target.t","src/client/app/modules/core/services/logging/log.target.ts:18","string","this.options.minloglevel","this.writetolog(ev","type","warn","writetolog(ev"],"classes/LogTargetBase.html":["0","1","2","4","abstract","class","constructor","constructor(opt","constructor(protect","debug","defin","descript","enum","error","event","event.level","export","file","implement","index","info","interfac","level","log","log(ev","logev","loglevel","logtarget","logtargetbas","logtargetopt","match","messag","method","minloglevel","name","object","option","paramet","promis","promise.resolv","protect","result","return","sourc","src/client/app/modules/core/services/logging/log.target.t","src/client/app/modules/core/services/logging/log.target.ts:21","src/client/app/modules/core/services/logging/log.target.ts:25","src/client/app/modules/core/services/logging/log.target.ts:32","string","this.options.minloglevel","this.writetolog(ev","type","warn","writetolog","writetolog(ev"],"classes/LogTargetOptions.html":["0","1","2","4","abstract","class","constructor(protect","debug","defin","enum","error","event.level","export","file","implement","index","info","interfac","level","log(ev","logev","loglevel","logtarget","logtargetbas","logtargetopt","match","messag","minloglevel","object","option","promis","promise.resolv","properti","protect","result","return","sourc","src/client/app/modules/core/services/logging/log.target.t","src/client/app/modules/core/services/logging/log.target.ts:14","string","this.options.minloglevel","this.writetolog(ev","type","warn","writetolog(ev"],"classes/MockPopStateEvent.html":["0","1","_subject","allow","angular/common","angular/cor","back","boolean","class","constructor","constructor(newurl","constructor(publ","default","defin","descript","event","eventemitt","export","extend","externalurl","fals","file","fire","fn","forward","getbasehref","implement","import","index","info","inject","intern","internal).startswith","internal.substring(1","internalbasehref","internalpath","internaltitl","link","locat","locationstrategi","match","mock","mocklocationstrategi","mockpopstateev","mockpopstateevent(this.path","name","new","newurl","nexturl","onpopstate(fn","option","paramet","path","path(includehash","pop","popstat","prepareexternalurl(intern","properti","public","pushstate(ctx","queri","query.length","replacestate(ctx","result","return","simul","simulatepopstate(url","sourc","src/client/app/modules/core/testing/mocks/mock","stabl","strategy.t","strategy.ts:74","strategy.ts:75","strategy.ts:76","string","super","test","this._subject.emit(new","this._subject.subscribe({next","this.internalbasehref","this.internalbasehref).endswith","this.internalpath","this.internaltitl","this.prepareexternalurl(url","this.simulatepopstate(nexturl","this.urlchanges.length","this.urlchanges.pop","this.urlchanges.push('replac","this.urlchanges.push(externalurl","this.urlchanges[this.urlchanges.length","throw","titl","true","type","url","urlchang","valu","var","void"],"classes/PuzzleConfig.html":["16","boolean","class","config.common.t","config.common.ts:2","config.common.ts:3","config.common.ts:4","config.common.ts:5","curv","dbfile","default","defin","export","fals","file","flip","index","info","isdev","linear","match","name","object","properti","puzzl","puzzle.db","puzzleconfig","result","sourc","src/client/app/modules/puzzle/common/puzzl","static","string","titl","transit","type","valu"],"classes/Row.html":["boolean","class","constructor","constructor(index","constructor(publ","defin","descript","emptysquar","expectedseq","export","file","import","index","info","islast","match","name","null","number","option","paramet","properti","public","result","row","seq","sourc","squar","square.model","src/client/app/modules/puzzle/services/board/row.model.t","src/client/app/modules/puzzle/services/board/row.model.ts:10","src/client/app/modules/puzzle/services/board/row.model.ts:11","src/client/app/modules/puzzle/services/board/row.model.ts:4","src/client/app/modules/puzzle/services/board/row.model.ts:6","src/client/app/modules/puzzle/services/board/row.model.ts:7","src/client/app/modules/puzzle/services/board/row.model.ts:8","src/client/app/modules/puzzle/services/board/row.model.ts:9","type"],"classes/Square.html":["boolean","class","col","constructor","constructor(id","constructor(publ","cssclass","defin","descript","expectedvalu","export","file","id","import","index","info","isempti","match","name","number","option","paramet","properti","public","result","row","row.model","sourc","squar","src/client/app/modules/puzzle/services/board/square.model.t","src/client/app/modules/puzzle/services/board/square.model.ts:10","src/client/app/modules/puzzle/services/board/square.model.ts:11","src/client/app/modules/puzzle/services/board/square.model.ts:3","src/client/app/modules/puzzle/services/board/square.model.ts:5","src/client/app/modules/puzzle/services/board/square.model.ts:6","src/client/app/modules/puzzle/services/board/square.model.ts:7","src/client/app/modules/puzzle/services/board/square.model.ts:8","src/client/app/modules/puzzle/services/board/square.model.ts:9","string","type","valu"],"classes/TranslateLoaderMock.html":["class","export","file","info","loader.mock.t","match","result","sourc","src/client/app/modules/i18n/testing/mocks/ng2","translat","translateloadermock"],"classes/TranslateMock.html":["angular/cor","array","class","console.log(lang","defin","descript","en","eventemitt","export","file","get(key","getlang","gettransl","gettranslation(lang","import","index","info","interpolateparam","key","lang","lib","match","method","name","new","object","observ","observable.of('en","observable.of(key","onlangchang","ontranslationchang","option","paramet","properti","public","reloadlang","reloadlang(lang","result","return","rxjs/add/observable/of","rxjs/observ","setdefaultlang","setdefaultlang(lang","sourc","src/client/app/modules/i18n/testing/mocks/ng2","string","test","translate.mock.t","translate.mock.ts:10","translate.mock.ts:11","translate.mock.ts:16","translate.mock.ts:19","translate.mock.ts:22","translate.mock.ts:25","translate.mock.ts:28","translate.mock.ts:9","translatemock","true","type","us","use(lang","void"],"classes/Utils.html":["0","2","b","boolean","c","class","col","count","d","defin","descript","e","export","f","file","g","generategamesequ","generategamesequence(min","generatesequ","generatesequence(min","generatesequentialsequ","generatesequentialsequence(min","h","index","info","iseven","iseven(x","isvalid","isvalid(sequ","isvalidmov","isvalidmove(a","level","mapcolclass","mapcolclass(valu","mapleveldimens","mapleveldimensions(level","match","max","method","min","name","number","obj","option","overlay","overlay(upd","paramet","parsesubsequ","parsesubsequence(sequ","po","rang","result","return","row","sequenc","sourc","src/client/app/modules/puzzle/common/utils.common.t","src/client/app/modules/puzzle/common/utils.common.ts:116","src/client/app/modules/puzzle/common/utils.common.ts:125","src/client/app/modules/puzzle/common/utils.common.ts:195","src/client/app/modules/puzzle/common/utils.common.ts:211","src/client/app/modules/puzzle/common/utils.common.ts:220","src/client/app/modules/puzzle/common/utils.common.ts:24","src/client/app/modules/puzzle/common/utils.common.ts:3","src/client/app/modules/puzzle/common/utils.common.ts:39","src/client/app/modules/puzzle/common/utils.common.ts:47","src/client/app/modules/puzzle/common/utils.common.ts:7","src/client/app/modules/puzzle/common/utils.common.ts:71","static","swap","swap(a","type","updat","util","valu","void","x"],"classes/WindowMock.html":["alert","alert(msg","class","confirm","confirm(msg","constructor","defin","descript","en","export","extend","file","fr","index","info","languag","locat","match","method","msg","name","navig","option","paramet","properti","public","result","return","sourc","src/client/app/modules/core/testing/mocks/window.mock.t","src/client/app/modules/core/testing/mocks/window.mock.ts:10","src/client/app/modules/core/testing/mocks/window.mock.ts:2","src/client/app/modules/core/testing/mocks/window.mock.ts:6","src/client/app/modules/core/testing/mocks/window.mock.ts:7","string","super","test","this.navigator.languag","type","undefin","userag","void","windowmock","windowmockfrench","windowmocknolanguag"],"classes/WindowMockFrench.html":["alert(msg","class","confirm(msg","constructor","defin","en","export","extend","file","fr","info","languag","locat","match","navig","public","result","return","sourc","src/client/app/modules/core/testing/mocks/window.mock.t","src/client/app/modules/core/testing/mocks/window.mock.ts:15","string","super","test","this.navigator.languag","undefin","userag","void","windowmock","windowmockfrench","windowmocknolanguag"],"classes/WindowMockNoLanguage.html":["alert(msg","class","confirm(msg","constructor","defin","en","export","extend","file","fr","info","languag","locat","match","navig","public","result","return","sourc","src/client/app/modules/core/testing/mocks/window.mock.t","src/client/app/modules/core/testing/mocks/window.mock.ts:22","string","super","test","this.navigator.languag","undefin","userag","void","windowmock","windowmockfrench","windowmocknolanguag"],"interfaces/ActionsServiceInterface.html":["action","actionchang","actionobserv","actions.enum","actionsenum","actionsserviceinterfac","defin","export","file","import","index","info","interfac","match","observ","properti","result","rxjs/observ","service.interface.t","service.interface.ts:10","service.interface.ts:8","service.interface.ts:9","sourc","src/client/app/modules/puzzle/actions/act","type"],"interfaces/DatabaseServiceInterface.html":["boolean","connect","criteria","databaseserviceinterfac","defin","delet","delete(t","descript","exist","exists(t","export","file","import","index","info","interfac","match","method","name","option","paramet","properti","pull","pull(tabl","push","push(tabl","readonli","result","return","service.interfac","service.interface.t","service.interface.ts:10","service.interface.ts:4","service.interface.ts:5","service.interface.ts:6","service.interface.ts:7","service.interface.ts:8","service.interface.ts:9","sourc","src/client/app/modules/puzzle/services/database/databas","state/st","stateserviceinterfac","string","string):ani","tabl","type","valu","void","zero","zero(criteria"],"interfaces/EnvConfig.html":["abov","api","bg","boolean","bulgarian","catch","check","class","code","config","config.debug","config.debug[key","config.platform_target","config.platforms.desktop","config.platforms.mobile_hybrid","config.platforms.mobile_n","config.platforms.web","conveni","current","debug","default","defin","desktop","en","english","env","envconfig","environ","error","es","exp","export","fals","file","fr","french","get_supported_languag","index","info","interfac","iplatform","is_debug_mod","is_desktop","is_mobile_hybrid","is_mobile_n","is_web","json.pars","key","languag","level","level_1","level_2","level_3","level_4","log","match","mobile_hybrid","mobile_n","mode","pageclass","platform","platform_target","properti","public","reset","result","return","ru","russian","sourc","spanish","src/client/app/modules/core/utils/config.t","src/client/app/modules/core/utils/config.ts:4","src/client/app/modules/core/utils/config.ts:5","static","string","support","target","titl","tri","true","type","warn","web"],"interfaces/ExtendedNavigationExtras.html":["angular/common","angular/cor","angular/rout","anim","array","back","boolean","class","clearhistori","constructor(publ","curv","defin","durat","end","export","extend","extendednavigationextra","extensions.service.t","extensions.service.ts:10","extensions.service.ts:8","extensions.service.ts:9","extra","file","https://docs.nativescript.org/api","implement","import","index","info","inject","instanc","interfac","irouterextens","liter","locationstrategi","match","name","nativescript","navigate(command","navigatebyurl(url","navigationextra","number","option","privat","promis","properti","public","reference/interfaces/_ui_frame_.navigationtransition.html","result","return","router","routerextens","see","sourc","src/client/app/modules/core/services/rout","string","this.locationstrategy.back","this.router.navigate(command","this.router.navigatebyurl(url","transit","type","urltre","void"],"interfaces/IAnalytics.html":["2","_","_.extend(properti","action","analyt","analyticsservic","angular","angular/cor","angulartics2","angulartics2seg","anyth","array","authent","automat","base","boolean","call","categor","categori","class","constructor(@inject(analyticsservic","constructor(priv","control","default","defin","descript","dev","devmode(en","enabl","etc","event","everyth","export","fals","file","https://github.com/angulartics/angulartics2/blob/master/src/core/angulartics2.ts#l90","ianalyt","ianalyticsproperti","identifi","identify(properti","implement","import","index","info","inject","interfac","l104","label","lib","locat","lodash","manual","match","method","mode","name","number","option","pagetrack(path","paramet","privat","properti","public","result","return","rout","segment","sourc","src/client/app/modules/analytics/services/analytics.service.t","src/client/app/modules/analytics/services/analytics.service.ts:15","standard","string","sub","therefor","this.analytics.track(act","this.angulartics2.developermode(en","this.angulartics2.settings.developermod","this.categori","this.devmod","this.devmode(fals","this.segment.eventtrack(act","this.segment.pagetrack(path","this.segment.setuserproperties(properti","tics2.excluderoutes(rout","tics2.firstpageview(valu","tics2.virtualpageviews(valu","tics2.withbase(valu","track","track(act","true","turn","type","typeof","undefin","us","user","valu","void","whether","wrapper"],"interfaces/IAnalyticsProperties.html":["2","_","_.extend(properti","action","analyt","analyticsservic","angular","angular/cor","angulartics2","angulartics2seg","anyth","array","authent","automat","base","boolean","call","categor","categori","class","constructor(@inject(analyticsservic","constructor(priv","control","default","defin","dev","devmode(en","enabl","etc","event","everyth","export","fals","file","https://github.com/angulartics/angulartics2/blob/master/src/core/angulartics2.ts#l90","ianalyt","ianalyticsproperti","identifi","identify(properti","implement","import","index","info","inject","interfac","l104","label","lib","locat","lodash","manual","match","mode","number","option","pagetrack(path","privat","properti","public","result","return","rout","segment","sourc","src/client/app/modules/analytics/services/analytics.service.t","src/client/app/modules/analytics/services/analytics.service.ts:10","src/client/app/modules/analytics/services/analytics.service.ts:11","src/client/app/modules/analytics/services/analytics.service.ts:9","standard","string","sub","therefor","this.analytics.track(act","this.angulartics2.developermode(en","this.angulartics2.settings.developermod","this.categori","this.devmod","this.devmode(fals","this.segment.eventtrack(act","this.segment.pagetrack(path","this.segment.setuserproperties(properti","tics2.excluderoutes(rout","tics2.firstpageview(valu","tics2.virtualpageviews(valu","tics2.withbase(valu","track","track(act","true","turn","type","typeof","undefin","us","user","valu","void","whether","wrapper"],"interfaces/IAppState.html":["accident","action","actionreduc","addit","adequ","alreadi","anoth","appli","appreducer(st","basic","be","chain","clear","combinelatest","combinereduc","combinereducers(reduc","combinereducers)(reduc","compos","compose(frommultilingual.getlang","compose(fromsample.getnam","compose(storefreez","const","creat","databas","db","default","defin","describ","descript","dev","develop","developmentreduc","developmentreducer(st","dure","each","ensur","except","export","extra","file","freez","frommultilingu","frommultilingual.imultilingualst","frommultilingual.reduc","fromsampl","fromsample.isamplest","fromsample.reduc","frozen","function","gather","getlang","getmultilingualst","getmultilingualstate(st","getnam","getnamelistst","getnameliststate(st","give","guide/content/ch5.html","handi","help","helper","here","https://drboolean.gitbooks.io/mostli","https://egghead.io/lessons/javascript","i18n","i18n/index","iappstat","immut","implement","import","index","info","inner","interfac","itself","key","left","level","maintain","make","map","match","mean","mention","metareduc","mode","modul","module'","more","mutat","need","new","ngrx","ngrx/core/add/operator/select","ngrx/core/compos","ngrx/store","none","notat","number","object","observ","occur","on","output","packag","plu","prevent","product","productionreduc","productionreducer(st","properti","reduc","reducer'","redux","rememb","result","return","right","rxjs/observ","rxjs/observable/combinelatest","s.i18n","s.sampl","sampl","sample/index","scratch","secur","selector","singl","sourc","src/client/app/modules/ngrx/index.t","src/client/app/modules/ngrx/index.ts:48","src/client/app/modules/ngrx/index.ts:49","state","state$.select(","store","storefreez","storelogg","string","tabl","take","term","think","through","thrown","togeth","tool","top","treat","type","up","us","valu","wrap"],"interfaces/IConsole.html":["debug","debug(m","defin","descript","error","error(m","export","file","iconsol","index","info","info(m","interfac","log","log(m","m","match","method","name","option","paramet","result","return","sourc","src/client/app/modules/core/interfaces/iconsole.t","src/client/app/modules/core/interfaces/iconsole.ts:3","src/client/app/modules/core/interfaces/iconsole.ts:4","src/client/app/modules/core/interfaces/iconsole.ts:5","src/client/app/modules/core/interfaces/iconsole.ts:6","src/client/app/modules/core/interfaces/iconsole.ts:7","type","void","warn","warn(m"],"interfaces/ICoreModuleOptions.html":["alreadi","angular/common","angular/cor","angular/form","angular/http","angular/rout","array","class","commonmodul","config","configur","configuredprovid","consol","consoleservic","constructor(@opt","core_direct","core_provid","coremodul","declar","defin","directives/index","error('coremodul","export","file","formsmodul","forroot(configuredprovid","httpmodul","icoremoduleopt","import","index","info","interfac","load","match","modul","modulewithprovid","new","ngmodul","option","parentmodul","per","platform","properti","provid","requir","result","return","root","routermodul","services/index","shared/index","sharedmodul","skipself","sourc","src/client/app/modules/core/core.module.t","src/client/app/modules/core/core.module.ts:15","src/client/app/modules/core/core.module.ts:16","static","throw","type","utils/index","window","windowservic"],"interfaces/ILang.html":["code","defin","export","file","ilang","index","info","interfac","match","properti","result","sourc","src/client/app/modules/core/interfaces/ilang.t","src/client/app/modules/core/interfaces/ilang.ts:3","src/client/app/modules/core/interfaces/ilang.ts:4","string","titl","type"],"interfaces/IMultilingualActions.html":["action","actiontyp","actiontypes.chang","actiontypes.lang_chang","actiontypes.lang_unsupport","alia","applic","categori","chang","changeact","check","class","coerc","common/category.common","compos","compris","const","constructor(publ","core/utils/typ","defin","descript","discrimin","each","easili","enabl","enum","export","express","file","function","group","group'","guarante","https://www.typescriptlang.org/docs/handbook/advanc","implement","import","imultilingualact","index","info","interfac","lang","lang_chang","lang_unsupport","langchangedact","langunsupportedact","liter","make","match","ngrx/store","object","option","payload","power","properti","reduc","result","run","see","simpl","sourc","src/client/app/modules/i18n/actions/multilingual.action.t","src/client/app/modules/i18n/actions/multilingual.action.ts:19","src/client/app/modules/i18n/actions/multilingual.action.ts:20","src/client/app/modules/i18n/actions/multilingual.action.ts:21","string","type","type(`[${categori","types.html#discrimin","union","uniqu","unsupport","util"],"interfaces/IMultilingualState.html":["const","defin","en","export","file","function","getlang(st","import","imultilingualst","index","info","initialst","interfac","lang","match","observ","properti","result","return","rxjs/observ","sourc","src/client/app/modules/i18n/states/multilingual.state.t","src/client/app/modules/i18n/states/multilingual.state.ts:4","state$.select(st","state.lang","string","type"],"interfaces/IPlatforms.html":["abov","api","bg","boolean","bulgarian","catch","check","class","code","config","config.debug","config.debug[key","config.platform_target","config.platforms.desktop","config.platforms.mobile_hybrid","config.platforms.mobile_n","config.platforms.web","conveni","current","debug","default","defin","desktop","en","english","env","envconfig","environ","error","es","exp","export","fals","file","fr","french","get_supported_languag","index","info","interfac","iplatform","is_debug_mod","is_desktop","is_mobile_hybrid","is_mobile_n","is_web","json.pars","key","languag","level","level_1","level_2","level_3","level_4","log","match","mobile_hybrid","mobile_n","mode","pageclass","platform","platform_target","properti","public","reset","result","return","ru","russian","sourc","spanish","src/client/app/modules/core/utils/config.t","src/client/app/modules/core/utils/config.ts:10","src/client/app/modules/core/utils/config.ts:11","src/client/app/modules/core/utils/config.ts:12","src/client/app/modules/core/utils/config.ts:9","static","string","support","target","titl","tri","true","type","warn","web"],"interfaces/IRouterExtensions.html":["angular/common","angular/cor","angular/rout","anim","array","back","boolean","class","clearhistori","command","constructor(publ","curv","defin","descript","durat","end","export","extend","extendednavigationextra","extensions.service.t","extensions.service.ts:20","extensions.service.ts:21","extensions.service.ts:22","extra","file","https://docs.nativescript.org/api","implement","import","index","info","inject","instanc","interfac","irouterextens","locationstrategi","match","method","name","nativescript","navig","navigate(command","navigatebyurl","navigatebyurl(url","navigationextra","number","option","paramet","privat","promis","public","reference/interfaces/_ui_frame_.navigationtransition.html","result","return","router","routerextens","see","sourc","src/client/app/modules/core/services/rout","string","this.locationstrategy.back","this.router.navigate(command","this.router.navigatebyurl(url","transit","true","type","url","urltre","void"],"interfaces/ISampleState.html":["array","const","defin","export","file","function","getnames(st","import","index","info","interfac","isamplest","match","name","observ","properti","result","return","rxjs/observ","sampl","sampleinitialst","select","slice","sourc","specif","src/client/app/modules/sample/states/sample.state.t","src/client/app/modules/sample/states/sample.state.ts:4","state","state$.select(st","state.nam","type"],"interfaces/IStorage.html":["certain","defin","descript","enum","export","file","getitem","getitem(key","here","index","info","interact","interfac","istorag","key","limit","list","localstorag","match","method","name","option","paramet","removeitem","removeitem(key","result","return","setitem","setitem(key","sourc","src/client/app/modules/core/interfaces/istorage.t","src/client/app/modules/core/interfaces/istorage.ts:3","src/client/app/modules/core/interfaces/istorage.ts:4","src/client/app/modules/core/interfaces/istorage.ts:5","storagekey","those","type","usernam","valu","void","whitelist"],"interfaces/IWindow.html":["alert","alert(msg","confirm","confirm(msg","defin","descript","export","file","index","info","interfac","iwindow","locat","match","method","msg","name","navig","option","paramet","properti","result","return","sourc","src/client/app/modules/core/interfaces/iwindow.t","src/client/app/modules/core/interfaces/iwindow.ts:3","src/client/app/modules/core/interfaces/iwindow.ts:4","src/client/app/modules/core/interfaces/iwindow.ts:5","src/client/app/modules/core/interfaces/iwindow.ts:6","string","type","void"],"interfaces/LogEvent.html":["0","1","2","4","abstract","class","constructor(protect","debug","defin","enum","error","event.level","export","file","implement","index","info","interfac","level","log(ev","logev","loglevel","logtarget","logtargetbas","logtargetopt","match","messag","minloglevel","object","option","promis","promise.resolv","properti","protect","result","return","sourc","src/client/app/modules/core/services/logging/log.target.t","src/client/app/modules/core/services/logging/log.target.ts:10","src/client/app/modules/core/services/logging/log.target.ts:9","string","this.options.minloglevel","this.writetolog(ev","type","warn","writetolog(ev"],"interfaces/ModelInterface.html":["defin","export","file","index","info","interfac","match","method","modelinterfac","result","return","sourc","src/client/app/modules/puzzle/interfaces/model.interface.t","src/client/app/modules/puzzle/interfaces/model.interface.ts:3","string","tostr"],"interfaces/StateServiceInterface.html":["database/databas","databaseservic","databaseserviceinterfac","defin","export","file","import","index","info","interfac","match","observ","properti","result","rxjs/add/operator/shar","rxjs/observ","service.interfac","service.interface.t","service.interface.ts:11","service.interface.ts:7","service.interface.ts:9","sourc","src/client/app/modules/puzzle/services/state/st","stateev","stateeventchang","stateserviceinterfac","string","type"],"interfaces/TestApi.html":["actual","ae","aftereach","angular/core/test","array","async","async(fn","be(fn","beforeeach","beforeeach(fn","boilerpl","const","defin","delay","describ","descript","e","e(actu","expect","expect(actu","export","fail","fail(","fakeasync","fakeasync(fn","fdescrib","file","fit","fit(nam","fn","function","import","index","info","inject","inject(token","intellisens","interfac","it(nam","jasmine.match","jasmine.spi","jasmine.t","jasmine.ts:11","jasmine.ts:12","jasmine.ts:13","jasmine.ts:14","jasmine.ts:15","jasmine.ts:16","jasmine.ts:17","jasmine.ts:18","jasmine.ts:19","jasmine.ts:20","jasmine.ts:21","jasmine.ts:22","jasmine.ts:23","jasmine.ts:24","jasmine.ts:25","jasmine.ts:26","jasmine.ts:27","jasmine.ts:28","jasmine.ts:29","match","method","name","ng2jasmin","number","object","option","paramet","pend","pending(reason","properti","reason","reduc","result","return","shorthand","sourc","spyon","spyon(object","src/client/app/modules/test/shorthand/ng2","string","test","testapi","tick","tick(delay","timeout","token","true","type","via","void","xdescrib","xit","xit(nam"],"interfaces/ToolbarInterface.html":["action","actionsenum","angular/cor","databas","databaseserviceinterfac","defin","descript","eventemitt","export","file","import","index","info","interfac","match","method","name","onaboutclick","onactionchang","onactionchange(act","ontoggleclick","option","options.interfac","paramet","properti","readonli","result","return","sourc","src/client/app/modules/puzzle/components/toolbar/toolbar.interface.t","src/client/app/modules/puzzle/components/toolbar/toolbar.interface.ts:10","src/client/app/modules/puzzle/components/toolbar/toolbar.interface.ts:11","src/client/app/modules/puzzle/components/toolbar/toolbar.interface.ts:12","src/client/app/modules/puzzle/components/toolbar/toolbar.interface.ts:13","src/client/app/modules/puzzle/components/toolbar/toolbar.interface.ts:14","src/client/app/modules/puzzle/components/toolbar/toolbar.interface.ts:7","src/client/app/modules/puzzle/components/toolbar/toolbar.interface.ts:8","src/client/app/modules/puzzle/components/toolbar/toolbar.interface.ts:9","toggl","toolbar","toolbar.compon","toolbarcompon","toolbarinterfac","toolbaroptionsinterfac","transform","transform(opt","type","void"],"interfaces/ToolbarOptionsInterface.html":["actionservic","actionsserviceinterfac","backrouterlink","backtext","backtext?:str","backtitletext","boolean","defin","export","file","id","import","index","info","interfac","isback","match","options.interface.t","options.interface.ts:10","options.interface.ts:11","options.interface.ts:12","options.interface.ts:13","options.interface.ts:14","options.interface.ts:15","options.interface.ts:16","options.interface.ts:7","options.interface.ts:8","options.interface.ts:9","properti","result","sourc","src/client/app/modules/puzzle/components/toolbar/toolbar","state","stateservic","stateserviceinterfac","string","toggletext","toggletitl","toolbaroptionsinterfac","type"],"miscellaneous/functions.html":["action","appreduc","appreducer(st","con","consolelogtarget","consolelogtarget(consoleservic","consoleservic","createconsoletarget","createconsoletarget(level","function","get_http_providers_injector","get_http_providers_injector(additionalprovid","getlang","getlang(st","getlanguag","getmultilingualst","getmultilingualstate(st","getnam","getnamelistst","getnameliststate(st","getnames(st","index","item","match","millisecond","miscellan","provideconsoletarget","provideconsoletarget(loglevel","reduc","reducer(st","result","selectdropdownbynumb","selectdropdownbynumber(selector","selectdropdownbyvalu","selectdropdownbyvalue(selector","selectrandomdropdownreturntext","selectrandomdropdownreturntext(selector","src/client/app/modules/core/services/logging/console.target.t","src/client/app/modules/core/testing/providers/core.t","src/client/app/modules/core/testing/providers/http.t","src/client/app/modules/core/testing/providers/router.t","src/client/app/modules/core/utils/type.t","src/client/app/modules/i18n/multilingual.module.t","src/client/app/modules/i18n/reducers/multilingual.reducer.t","src/client/app/modules/i18n/states/multilingual.state.t","src/client/app/modules/i18n/testing/index.t","src/client/app/modules/ngrx/index.t","src/client/app/modules/sample/reducers/sample.reducer.t","src/client/app/modules/sample/states/sample.state.t","src/client/app/modules/test/e2e/dropdowns.t","src/client/web.module.t","storag","test_core_provid","test_core_providers(opt","test_http_provid","test_location_provid","test_multilingual_provid","translateloaderfactori","translateloaderfactory(http","type","type(label","undefin","win"],"miscellaneous/variables.html":["2.0","aboutrout","action","action_provid","actionreduc","actiontyp","analytics_provid","app","app_compon","appli","array","browser","browserwindow","categori","chain","coerc","combinereduc","compos","config.t","core_direct","core_provid","coremodul","default","dev_import","developmentreduc","electron","enabl","ensur","entir","folder","function","getlang","getnam","good","helper","here","homerout","i18n","import","imultilingualact","imultilingualst","index","initialst","injectiontoken","isamplest","jasmine.t","label","languag","languageprovid","languageviewhelp","lazi","left","level","liter","load","locat","mainwindow","make","match","menu","metareduc","miscellan","modul","multilang_compon","multilang_provid","multilingu","multilingualservic","new","ng2jasmin","object","organ","pass","place","power","productionreduc","provid","puzzle_compon","puzzle_provid","puzzlerout","reduc","rememb","result","return","right","rout","routermodul","sample_provid","sampleinitialst","shared_compon","shared_modul","shell","singleton","src/client/app/components/about/about.routes.t","src/client/app/components/app.routes.t","src/client/app/components/home/home.routes.t","src/client/app/components/index.t","src/client/app/components/puzzle/puzzle.routes.t","src/client/app/modules/analytics/services/index.t","src/client/app/modules/core/directives/index.t","src/client/app/modules/core/services/index.t","src/client/app/modules/core/testing/providers/http.t","src/client/app/modules/core/utils/type.t","src/client/app/modules/electron/services/event.service.t","src/client/app/modules/i18n/actions/multilingual.action.t","src/client/app/modules/i18n/common/category.common.t","src/client/app/modules/i18n/components/index.t","src/client/app/modules/i18n/services/index.t","src/client/app/modules/i18n/services/multilingual.service.t","src/client/app/modules/i18n/states/multilingual.state.t","src/client/app/modules/ngrx/index.t","src/client/app/modules/puzzle/actions/index.t","src/client/app/modules/puzzle/components/index.t","src/client/app/modules/puzzle/services/index.t","src/client/app/modules/sample/services/index.t","src/client/app/modules/sample/states/sample.state.t","src/client/app/modules/shared/components/index.t","src/client/app/modules/shared/shared.module.t","src/client/app/modules/test/e2e/dropdowns.t","src/client/app/modules/test/index.t","src/client/app/modules/test/shorthand/ng2","src/client/main.desktop.t","src/client/system","src/client/web.module.t","storelogg","string","system","t","tag","take","templat","testapi","through","togeth","top","type","typecach","typecheck","typescript","union","uniqu","us","valu","variabl","window","wrap"],"miscellaneous/typealiases.html":["action","alia","alias","changeact","compos","easili","export","group","index","langchangedact","langunsupportedact","match","miscellan","reduc","result","src/client/app/modules/i18n/actions/multilingual.action.t","type","typealias"],"miscellaneous/enumerations.html":["0","1","2","4","actionsenum","debug","enumer","error","help","index","info","load","loglevel","match","miscellan","play","readi","result","save","solv","src/client/app/modules/core/interfaces/istorage.t","src/client/app/modules/core/services/logging/log.target.t","src/client/app/modules/puzzle/actions/actions.enum.t","start","storagekey","usernam","valu","warn"],"coverage.html":["0","0/1","0/10","0/11","0/12","0/13","0/15","0/19","0/2","0/20","0/25","0/3","0/4","0/5","0/6","0/7","0/8","0/9","1/16","1/3","1/4","2/5","25","33","40","5/6","6","83","aboutcompon","actionsservic","actionsserviceinterfac","analyt","analyticsservic","appcompon","appservic","basecompon","baseservic","board","boardservic","changeact","class","compon","config","config.common.t","config.mock.t","config.t","configmock","configmockmultilang","configrecord","consoleservic","consoletarget","coverag","databaseserviceinterfac","desktopconfig","direct","document","electroneventservic","envconfig","extendednavigationextra","extensions.mock.t","extensions.service.t","file","homecompon","ianalyt","ianalyticsproperti","iappstat","iconsol","icoremoduleopt","identifi","ilang","imultilingualact","imultilingualst","inject","interfac","iplatform","irouterextens","isamplest","istorag","iwindow","jasmine.t","langchangedact","langswitchercompon","langunsupportedact","list.service.t","loader.mock.t","localstorageservic","locat","logev","logservic","logtarget","logtargetbas","logtargetopt","match","mocklocationstrategi","mockpopstateev","modelinterfac","multilang.mock.t","multilingualeffect","multilingualservic","namelistservic","navbarcompon","new","options.interface.t","platformdirect","puzzlecompon","puzzleconfig","puzzlestateservic","record.model.t","result","routerextens","routerextensionsmock","row","sampleeffect","service.interface.t","squar","src/client/app/components/about/about.component.t","src/client/app/components/app.component.t","src/client/app/components/home/home.component.t","src/client/app/components/puzzle/puzzl","src/client/app/components/puzzle/puzzle.component.t","src/client/app/modules/analytics/services/analytics.service.t","src/client/app/modules/core/core.module.t","src/client/app/modules/core/directives/platform.directive.t","src/client/app/modules/core/interfaces/iconsole.t","src/client/app/modules/core/interfaces/ilang.t","src/client/app/modules/core/interfaces/istorage.t","src/client/app/modules/core/interfaces/iwindow.t","src/client/app/modules/core/services/app.service.t","src/client/app/modules/core/services/console.service.t","src/client/app/modules/core/services/logging/console.target.t","src/client/app/modules/core/services/logging/log.service.t","src/client/app/modules/core/services/logging/log.target.t","src/client/app/modules/core/services/rout","src/client/app/modules/core/services/storage.service.t","src/client/app/modules/core/services/window.service.t","src/client/app/modules/core/testing/mocks/mock","src/client/app/modules/core/testing/mocks/ng2","src/client/app/modules/core/testing/mocks/rout","src/client/app/modules/core/testing/mocks/window.mock.t","src/client/app/modules/core/utils/config.t","src/client/app/modules/electron/services/event.service.t","src/client/app/modules/electron/utils/desktop","src/client/app/modules/i18n/actions/multilingual.action.t","src/client/app/modules/i18n/components/lang","src/client/app/modules/i18n/effects/multilingual.effect.t","src/client/app/modules/i18n/services/multilingual.service.t","src/client/app/modules/i18n/states/multilingual.state.t","src/client/app/modules/i18n/testing/mocks/ng2","src/client/app/modules/ngrx/index.t","src/client/app/modules/puzzle/actions/act","src/client/app/modules/puzzle/actions/actions.service.t","src/client/app/modules/puzzle/common/puzzl","src/client/app/modules/puzzle/common/utils.common.t","src/client/app/modules/puzzle/components/base.component.t","src/client/app/modules/puzzle/components/toolbar/toolbar","src/client/app/modules/puzzle/components/toolbar/toolbar.component.t","src/client/app/modules/puzzle/components/toolbar/toolbar.interface.t","src/client/app/modules/puzzle/interfaces/model.interface.t","src/client/app/modules/puzzle/services/base.service.t","src/client/app/modules/puzzle/services/board/board.model.t","src/client/app/modules/puzzle/services/board/board.service.t","src/client/app/modules/puzzle/services/board/row.model.t","src/client/app/modules/puzzle/services/board/square.model.t","src/client/app/modules/puzzle/services/database/config","src/client/app/modules/puzzle/services/database/databas","src/client/app/modules/puzzle/services/database/loc","src/client/app/modules/puzzle/services/state/st","src/client/app/modules/puzzle/services/state/state.service.t","src/client/app/modules/sample/effects/sample.effect.t","src/client/app/modules/sample/services/nam","src/client/app/modules/sample/states/sample.state.t","src/client/app/modules/shared/components/navbar/navbar.component.t","src/client/app/modules/shared/components/toolbar/toolbar.component.t","src/client/app/modules/test/shorthand/ng2","state.service.t","statement","stateservic","stateserviceinterfac","storage.service.t","storageservic","strategy.t","switcher.component.t","tabl","tablesort(document.getelementbyid('coverag","testapi","toolbarcompon","toolbarinterfac","toolbaroptionsinterfac","translat","translate.mock.t","translateloadermock","translatemock","type","util","windowmock","windowmockfrench","windowmocknolanguag","windowservic"]},"length":92},"tokenStore":{"root":{"0":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.006779661016949152},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.010443864229765013},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"classes/Board.html":{"ref":"classes/Board.html","tf":0.0213903743315508},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.008695652173913044},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.012987012987012988},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.018867924528301886},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.017543859649122806},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.011494252873563218},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.027777777777777776},"coverage.html":{"ref":"coverage.html","tf":0.16273584905660377}},"/":{"1":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0047169811320754715}}},"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}},"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}},"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0047169811320754715}}},"2":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.02830188679245283}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.02358490566037736}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.030660377358490566}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.01650943396226415}}},"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.009433962264150943}}},"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.009433962264150943}}},"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.009433962264150943}}},"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.009433962264150943}}},"docs":{}}},"1":{"0":{"4":{"8":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}},"docs":{}},"docs":{}},"docs":{}},"6":{"docs":{"index.html":{"ref":"index.html","tf":0.0106951871657754},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.021739130434782608}}},"9":{"docs":{"overview.html":{"ref":"overview.html","tf":0.012658227848101266}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.012658227848101266},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488},"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.028169014084507043},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.005084745762711864},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.008695652173913044},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.012987012987012988},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.011494252873563218},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.027777777777777776}},"/":{"1":{"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}},"docs":{}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.009433962264150943}}},"docs":{}}},"2":{"0":{"1":{"7":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}},"docs":{}},"docs":{}},"3":{"docs":{"overview.html":{"ref":"overview.html","tf":0.012658227848101266}}},"5":{"6":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.009433962264150943}}},"6":{"docs":{"overview.html":{"ref":"overview.html","tf":0.012658227848101266}}},"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.006968641114982578},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.008695652173913044},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.012987012987012988},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.011494252873563218},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.027777777777777776}},".":{"0":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}},"docs":{}},"/":{"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}},"docs":{}}},"3":{"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}},"docs":{},".":{"0":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036}}},"1":{"0":{"docs":{},".":{"3":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}},"docs":{}}},"docs":{}},"docs":{}}},"4":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}},"8":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329}}},"docs":{"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.008695652173913044},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.012987012987012988},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.011494252873563218},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.027777777777777776}}},"5":{"docs":{},"/":{"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}},"docs":{}}},"6":{"4":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.005722460658082976}}},"6":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}},"7":{"docs":{"overview.html":{"ref":"overview.html","tf":0.012658227848101266}}},"8":{"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.012658227848101266},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}},"docs":{},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877},"license.html":{"ref":"license.html","tf":0.01020408163265306},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}}},"u":{"docs":{},"t":{"docs":{},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.007905138339920948}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.007905138339920948}}}}}}}}}}}}}}}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"1":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.007905138339920948}}},"docs":{}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":5.015810276679842},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.05952380952380952},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.043478260869565216},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.06493506493506493},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.05747126436781609}}}}}}}}},"k":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}}}},"/":{"docs":{},"o":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.029411764705882353},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.013937282229965157},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.06666666666666667},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.03888888888888889},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.07368421052631578},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":5.0344827586206895},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.01639344262295082},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.015957446808510637},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.0379746835443038},"modules.html":{"ref":"modules.html","tf":0.02702702702702703},"modules/AnalyticsModule.html":{"ref":"modules/AnalyticsModule.html","tf":5.068965517241379},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.02564102564102564}}}}}}},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/AnalyticsModule.html":{"ref":"modules/AnalyticsModule.html","tf":0.06896551724137931},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.03529411764705882},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":5.010452961672474},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.08},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.03333333333333333},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.06315789473684211},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.02586206896551724},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.01092896174863388},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.010638297872340425},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.010526315789473684}}}}}}}}}}}}}}},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.006968641114982578},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"modules/AnalyticsModule.html":{"ref":"modules/AnalyticsModule.html","tf":0.034482758620689655},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.010416666666666666},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.012195121951219513},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797},"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.014084507042253521},"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.007751937984496124},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.013333333333333334},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288},"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.008333333333333333},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.010526315789473684},"injectables/PuzzleStateService.html":{"ref":"injectables/PuzzleStateService.html","tf":0.023809523809523808},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.01},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01020408163265306},"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.01098901098901099},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.008264462809917356},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.006622516556291391},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.00510204081632653},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.007751937984496124},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.006666666666666667},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.008130081300813009}},"e":{"docs":{},"/":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331}}}}}}}}},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.010416666666666666},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.012195121951219513},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.008547008547008548},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.007751937984496124},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.006666666666666667}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.010416666666666666},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.012195121951219513},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.010416666666666666},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.012195121951219513},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.010526315789473684},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.010416666666666666},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.012195121951219513},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.01},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.007751937984496124},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.006666666666666667}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"s":{"2":{"docs":{"modules/AnalyticsModule.html":{"ref":"modules/AnalyticsModule.html","tf":0.034482758620689655},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.0313588850174216},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.021551724137931036},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.0273224043715847},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.026595744680851064}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AnalyticsModule.html":{"ref":"modules/AnalyticsModule.html","tf":0.034482758620689655}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"modules/AnalyticsModule.html":{"ref":"modules/AnalyticsModule.html","tf":0.034482758620689655}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{"modules/AnalyticsModule.html":{"ref":"modules/AnalyticsModule.html","tf":0.06896551724137931},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.013937282229965157},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.008620689655172414},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.01092896174863388},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.010638297872340425}}}}}},"docs":{}}}}}}}}}},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.006968641114982578},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}}}},"i":{"docs":{},"m":{"docs":{"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.031007751937984496},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.006666666666666667}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}},"p":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0106951871657754},"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.02185792349726776},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}}},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.0213903743315508},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.011764705882352941},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0121580547112462}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05063291139240506},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.029914529914529916},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":5.023529411764706},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},".":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274}}}}}}}}}}}}}}}}}}}}},"i":{"1":{"8":{"docs":{},"n":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274}}}}}}}}}},"docs":{}},"docs":{}},"n":{"docs":{},"g":{"docs":{},"r":{"docs":{},"x":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.008547008547008548}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.008547008547008548},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.008658008658008658}}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.015625}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0078125}}}}}}}}}}}},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}},"c":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.011764705882352941},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.010309278350515464}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.041176470588235294},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":5.026666666666666},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.006968641114982578},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}}}}},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.006968641114982578},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.01545253863134658},"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.03875968992248062},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.017421602787456445},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.06611570247933884},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.05442176870748299},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.02586206896551724},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.08900523560209424},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.08823529411764706},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.08823529411764706},"interfaces/ActionsServiceInterface.html":{"ref":"interfaces/ActionsServiceInterface.html","tf":0.06779661016949153},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.02185792349726776},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.015957446808510637},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.010452961672473868},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.09278350515463918},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.008130081300813009},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0234375},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0060790273556231},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.23076923076923078}},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.020833333333333332},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}}}}}}}}},"s":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.010416666666666666},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.010526315789473684},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374}}}}}}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.03076923076923077}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.011037527593818985},"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.06201550387596899},"interfaces/ActionsServiceInterface.html":{"ref":"interfaces/ActionsServiceInterface.html","tf":0.06779661016949153},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.032520325203252036},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.05555555555555555}},".":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.007751937984496124}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.008583690987124463},"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":5.015503875968992},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.015503875968992248},"interfaces/ActionsServiceInterface.html":{"ref":"interfaces/ActionsServiceInterface.html","tf":5.033898305084746},"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.03076923076923077},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}}}}}}}}}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.007751937984496124},"interfaces/ActionsServiceInterface.html":{"ref":"interfaces/ActionsServiceInterface.html","tf":0.01694915254237288}}}}}}}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.007751937984496124}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.031007751937984496},"interfaces/ActionsServiceInterface.html":{"ref":"interfaces/ActionsServiceInterface.html","tf":0.06779661016949153}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.031007751937984496},"interfaces/ActionsServiceInterface.html":{"ref":"interfaces/ActionsServiceInterface.html","tf":0.06779661016949153}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.007751937984496124}}}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.005154639175257732},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.005154639175257732}}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.005154639175257732}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.005154639175257732}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.010452961672473868},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0121580547112462}}}}}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.004662004662004662}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}}}}}}}}}}}},"c":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.010752688172043012},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.004291845493562232},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.021505376344086023},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.03},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.024793388429752067},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.019867549668874173},"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":0.03636363636363636},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.015306122448979591},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.015503875968992248},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.02666666666666667},"interfaces/ISampleState.html":{"ref":"interfaces/ISampleState.html","tf":0.06521739130434782},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.006993006993006993},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0364741641337386}}}}},"g":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.00715307582260372}},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"t":{"docs":{},"a":{"docs":{},"x":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}}}}}},"[":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"i":{"1":{"8":{"docs":{},"n":{"docs":{"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403}}}},"docs":{}},"docs":{}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.010526315789473684}}}}}}}}}}}}}}}},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.011655011655011656}},"(":{"docs":{},"f":{"docs":{},"n":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.004662004662004662}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.08108108108108109},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.013513513513513514},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}},"l":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.010416666666666666},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.005221932114882507},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.02197802197802198},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.019230769230769232},"interfaces/IWindow.html":{"ref":"interfaces/IWindow.html","tf":0.029411764705882353}},"(":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.02197802197802198},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.019230769230769232},"classes/WindowMockFrench.html":{"ref":"classes/WindowMockFrench.html","tf":0.01818181818181818},"classes/WindowMockNoLanguage.html":{"ref":"classes/WindowMockNoLanguage.html","tf":0.01818181818181818},"interfaces/IWindow.html":{"ref":"interfaces/IWindow.html","tf":0.029411764705882353}}}}}}}}},"i":{"docs":{},"a":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.005154639175257732},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.038461538461538464}},"s":{"docs":{"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.038461538461538464}}}}}},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.014084507042253521}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"'":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.014084507042253521}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.027210884353741496},"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.018518518518518517}},"i":{"docs":{},"t":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}},"e":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.011655011655011656}}},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.016317016317016316}}}}}}}}}}},"b":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.011444921316165951},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.02631578947368421}},"e":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}}},"(":{"docs":{},"f":{"docs":{},"n":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.004662004662004662}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.013986013986013986}},"(":{"docs":{},"f":{"docs":{},"n":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.004662004662004662}}}}}}}}}}}}}},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0106951871657754}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}},"o":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}}}}}}}}}}},"l":{"docs":{},"g":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.010752688172043012},"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":0.01818181818181818},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"overview.html":{"ref":"overview.html","tf":0.012658227848101266},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.010416666666666666},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.01282051282051282}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.024390243902439025},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.01864406779661017},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.04040404040404041},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.010443864229765013},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.010752688172043012},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.017241379310344827},"classes/Board.html":{"ref":"classes/Board.html","tf":0.026737967914438502},"classes/Config.html":{"ref":"classes/Config.html","tf":0.03636363636363636},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.018867924528301886},"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.03260869565217391},"classes/Row.html":{"ref":"classes/Row.html","tf":0.038461538461538464},"classes/Square.html":{"ref":"classes/Square.html","tf":0.03424657534246575},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.013157894736842105},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.05673758865248227},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.0273224043715847},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.046511627906976744},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.02185792349726776},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.02127659574468085},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.02512562814070352},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.013333333333333334},"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.023076923076923078}}}}}}},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.020028612303290415},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.04576271186440678},"classes/Board.html":{"ref":"classes/Board.html","tf":5.010695187165775},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"(":{"8":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}},"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.008583690987124463},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":5.003389830508475},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.006779661016949152}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"l":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{"modules.html":{"ref":"modules.html","tf":0.1891891891891892}},"e":{"docs":{},"r":{"docs":{"modules.html":{"ref":"modules.html","tf":0.10810810810810811},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.008547008547008548}}}}}}},"/":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.008830022075055188},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.03305785123966942}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556}}}}},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.008620689655172414},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.006622516556291391},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":5.016528925619835},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":5.013245033112582},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}},"i":{"docs":{},"c":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}},"c":{"docs":{},"k":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.010443864229765013},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.026881720430107527},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.04},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.015503875968992248},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.03333333333333333}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.03076923076923077}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.023076923076923078}},"?":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.007692307692307693}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.03076923076923077}}}}}}}}}}}}}},"g":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.010752688172043012},"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":0.01818181818181818},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}}}},"c":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.04132231404958678},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.020942408376963352},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.023529411764705882},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.023529411764705882},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.03608247422680412}},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.007168458781362007}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.007168458781362007}},"(":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.007168458781362007}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":5.015706806282722},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.011764705882352941},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.011764705882352941},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.010309278350515464},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.038461538461538464},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}},"i":{"docs":{},"n":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.006968641114982578},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.015706806282722512},"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.011764705882352941},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.011764705882352941},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.015463917525773196},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356},"classes/Config.html":{"ref":"classes/Config.html","tf":0.01818181818181818},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.02702702702702703},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.06451612903225806},"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":0.09090909090909091},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.0273224043715847},"interfaces/ILang.html":{"ref":"interfaces/ILang.html","tf":0.1111111111111111},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.02512562814070352}}}},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0106951871657754},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.01},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.006666666666666667}}}}},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.017543859649122806},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.020833333333333332},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.024390243902439025},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01}}}}}}},"/":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.005154639175257732}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.008264462809917356},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.006622516556291391}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}}},"n":{"docs":{"overview.html":{"ref":"overview.html","tf":0.012658227848101266},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.024390243902439025},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":5.023715415019763},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":5.041176470588235},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":5.021645021645021},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":5.021505376344086},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":5.048543689320389},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":5.007153075822604},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":5.011037527593819},"coverage.html":{"ref":"coverage.html","tf":0.018867924528301886}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.010416666666666666},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.012195121951219513}}}}}}}}},"_":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}}}}}}}}}}},"s":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.017421602787456445},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.005154639175257732},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0060790273556231},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.038461538461538464}},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"z":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.010471204188481676},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.005154639175257732}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.013937282229965157},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}}}},")":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.008547008547008548},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0234375}},"s":{"docs":{},"t":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.012195121951219513},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.016666666666666666},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01020408163265306},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.017421602787456445},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.005154639175257732},"interfaces/IMultilingualState.html":{"ref":"interfaces/IMultilingualState.html","tf":0.023809523809523808},"interfaces/ISampleState.html":{"ref":"interfaces/ISampleState.html","tf":0.021739130434782608},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}},"o":{"docs":{},"r":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.011764705882352941},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.007168458781362007},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.006622516556291391},"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.014084507042253521},"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.023255813953488372},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.013333333333333334},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.005084745762711864},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.009615384615384616},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.007832898172323759},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.01652892561983471},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.011111111111111112},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.021052631578947368},"injectables/PuzzleStateService.html":{"ref":"injectables/PuzzleStateService.html","tf":0.023809523809523808},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.013605442176870748},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.024793388429752067},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.019867549668874173},"classes/Board.html":{"ref":"classes/Board.html","tf":0.0106951871657754},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.011627906976744186},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.008695652173913044},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.009433962264150943},"classes/Row.html":{"ref":"classes/Row.html","tf":0.007692307692307693},"classes/Square.html":{"ref":"classes/Square.html","tf":0.00684931506849315},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.019230769230769232},"classes/WindowMockFrench.html":{"ref":"classes/WindowMockFrench.html","tf":0.07272727272727272},"classes/WindowMockNoLanguage.html":{"ref":"classes/WindowMockNoLanguage.html","tf":0.07272727272727272}},"(":{"docs":{},"@":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.010416666666666666},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01}}}}},"i":{"docs":{},"n":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}}}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classes/Row.html":{"ref":"classes/Row.html","tf":0.007692307692307693}}}}}},"d":{"docs":{"classes/Square.html":{"ref":"classes/Square.html","tf":0.00684931506849315}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.014084507042253521},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}}},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.008695652173913044},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.012987012987012988},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.011494252873563218}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.013333333333333334},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.015706806282722512},"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.011627906976744186},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.01764705882352941},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.01764705882352941},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715},"classes/Row.html":{"ref":"classes/Row.html","tf":0.007692307692307693},"classes/Square.html":{"ref":"classes/Square.html","tf":0.00684931506849315},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.007751937984496124},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.015463917525773196},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.006666666666666667}}}}},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.013333333333333334},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.010526315789473684},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207}}}}}},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"s":{"2":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289}}},"docs":{}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329}}}}}}}}},"w":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/Board.html":{"ref":"classes/Board.html","tf":0.0053475935828877}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374}}}}}},"e":{"docs":{},"l":{"docs":{"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.014084507042253521}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/PuzzleStateService.html":{"ref":"injectables/PuzzleStateService.html","tf":0.047619047619047616},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.011627906976744186}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.008695652173913044}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.008547008547008548},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.01652892561983471},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.04}},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.017094017094017096},"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":5.016666666666667},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.06611570247933884},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0078125},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.015625}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0078125}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.01652892561983471},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.013245033112582781}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.01652892561983471},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.013245033112582781}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.013245033112582781}},"(":{"docs":{},"i":{"docs":{"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.013245033112582781}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":5.016528925619835},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"(":{"docs":{},"c":{"docs":{"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"'":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}}}}},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.006622516556291391}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}}}}}}}}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.008264462809917356},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.006622516556291391}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.00510204081632653}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308}}}}}}}},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}}},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}},"o":{"docs":{},"l":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.006968641114982578},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.020202020202020204},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.028368794326241134}}}}}},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.02666666666666667},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.010526315789473684},"classes/Config.html":{"ref":"classes/Config.html","tf":5.007272727272727},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.03225806451612903},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704},"coverage.html":{"ref":"coverage.html","tf":0.0047169811320754715}},"u":{"docs":{},"r":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01}},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.018691588785046728},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.02}}}}}}}}}}}},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"n":{"docs":{"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.007168458781362007}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"k":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.007272727272727273},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.01092896174863388},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.010050251256281407}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"_":{"1":{"docs":{"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308}}},"2":{"docs":{"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308}}},"3":{"docs":{"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308}}},"4":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.019230769230769232}}},"docs":{}}}}}}}},"[":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.007272727272727273},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.01092896174863388},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.010050251256281407}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"_":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.008547008547008548},"classes/Config.html":{"ref":"classes/Config.html","tf":0.014545454545454545},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.02185792349726776},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.020100502512562814}}}}}}}}},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"k":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"classes/Config.html":{"ref":"classes/Config.html","tf":0.007272727272727273},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.01092896174863388},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.010050251256281407}}}}},"m":{"docs":{},"o":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"h":{"docs":{},"y":{"docs":{},"b":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}}}}}}}},"n":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"v":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.013513513513513514},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"2":{"docs":{"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.013513513513513514}}},"6":{"docs":{"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.013513513513513514}}},"docs":{}}}}}}}}},"t":{"docs":{"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":0.01818181818181818},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"6":{"docs":{"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":0.01818181818181818}}},"docs":{}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.010869565217391304},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"2":{"docs":{"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.010869565217391304}}},"3":{"docs":{"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.010869565217391304}}},"4":{"docs":{"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.010869565217391304}}},"5":{"docs":{"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.010869565217391304}}},"docs":{}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":5.027027027027027},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":5.021505376344086},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":5.023255813953488},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}},"r":{"docs":{},"m":{"docs":{"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.02197802197802198},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.019230769230769232},"interfaces/IWindow.html":{"ref":"interfaces/IWindow.html","tf":0.029411764705882353}},"(":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.02197802197802198},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.019230769230769232},"classes/WindowMockFrench.html":{"ref":"classes/WindowMockFrench.html","tf":0.01818181818181818},"classes/WindowMockNoLanguage.html":{"ref":"classes/WindowMockNoLanguage.html","tf":0.01818181818181818},"interfaces/IWindow.html":{"ref":"interfaces/IWindow.html","tf":0.029411764705882353}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"i":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.016042780748663103},"coverage.html":{"ref":"coverage.html","tf":10.002358490566039}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05063291139240506},"modules.html":{"ref":"modules.html","tf":0.02702702702702703},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":5.074766355140187},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.03},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274}}}}}}}}}}}}}}}},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.028037383177570093},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.03},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.018691588785046728},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.02},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}}}}}}}}},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.010526315789473684},"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":0.01818181818181818}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.005154639175257732}}}}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.04081632653061224}}},"y":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.030612244897959183}}}}}}}}},"l":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.010169491525423728},"classes/Board.html":{"ref":"classes/Board.html","tf":0.0053475935828877},"classes/Square.html":{"ref":"classes/Square.html","tf":0.0410958904109589},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.039473684210526314}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/Board.html":{"ref":"classes/Board.html","tf":0.03208556149732621}}}}}}}},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.010309278350515464},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.021929824561403508}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}}}}}},"v":{"docs":{"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506},"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.010869565217391304},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.007751937984496124},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.006666666666666667}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"_":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.017543859649122806},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.020833333333333332},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.019801980198019802},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.024390243902439025}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"overview.html":{"ref":"overview.html","tf":0.012658227848101266},"modules/AnalyticsModule.html":{"ref":"modules/AnalyticsModule.html","tf":0.034482758620689655},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.010416666666666666},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.012195121951219513},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.007905138339920948},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.01764705882352941},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.007168458781362007},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797},"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.014084507042253521},"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.007751937984496124},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.013937282229965157},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.013333333333333334},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288},"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.008333333333333333},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.005221932114882507},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.011111111111111112},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.010526315789473684},"injectables/PuzzleStateService.html":{"ref":"injectables/PuzzleStateService.html","tf":0.023809523809523808},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.01},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01020408163265306},"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.01098901098901099},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":5.025862068965517},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":5.016528925619835},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":5.013245033112582},"classes/Board.html":{"ref":"classes/Board.html","tf":5.010695187165775},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":5.031413612565445},"classes/Config.html":{"ref":"classes/Config.html","tf":5.007272727272727},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":5.027027027027027},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":5.021505376344086},"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":5.023255813953488},"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":5.036363636363636},"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":5.037037037037037},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":5.029411764705882},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":5.029411764705882},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":5.0476190476190474},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":5.034782608695652},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":5.0519480519480515},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":5.014150943396227},"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":5.021739130434782},"classes/Row.html":{"ref":"classes/Row.html","tf":5.015384615384615},"classes/Square.html":{"ref":"classes/Square.html","tf":5.013698630136986},"classes/TranslateLoaderMock.html":{"ref":"classes/TranslateLoaderMock.html","tf":5.133333333333334},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":5.010204081632653},"classes/Utils.html":{"ref":"classes/Utils.html","tf":5.008771929824562},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":5.038461538461538},"classes/WindowMockFrench.html":{"ref":"classes/WindowMockFrench.html","tf":5.072727272727272},"classes/WindowMockNoLanguage.html":{"ref":"classes/WindowMockNoLanguage.html","tf":5.072727272727272},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.007751937984496124},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.02185792349726776},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.02127659574468085},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.020618556701030927},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.006666666666666667},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.034482758620689655},"coverage.html":{"ref":"coverage.html","tf":0.06132075471698113}}}},"i":{"docs":{},"m":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.012658227848101266},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364}},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.012658227848101266},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"z":{"docs":{},"z":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.012658227848101266},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.010416666666666666}},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.012658227848101266},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.012658227848101266},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901}},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.012658227848101266},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.012658227848101266},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274}},"e":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"overview.html":{"ref":"overview.html","tf":0.012658227848101266},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.012658227848101266},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.005722460658082976},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.03305785123966942},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.026490066225165563}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"n":{"docs":{},"s":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.031007751937984496},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.006666666666666667}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.015625}},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0078125}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.010101010101010102},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.0070921985815602835}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.006622516556291391},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.03305785123966942}}}},"l":{"docs":{},"l":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.006968641114982578},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}}},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.008620689655172414},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}},"i":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.013937282229965157},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.011111111111111112},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.03017241379310345},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.02185792349726776},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.03723404255319149},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.005154639175257732},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}}}}}}},"c":{"docs":{},"h":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374},"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}}}}},"u":{"docs":{},"s":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556}}}}},"s":{"docs":{},"s":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288},"classes/Square.html":{"ref":"classes/Square.html","tf":0.0410958904109589}}}}}}}}},"t":{"docs":{},"x":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.005221932114882507}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.011904761904761904}}}}}}}}},"d":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015}},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0106951871657754},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.006968641114982578},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.005221932114882507},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"classes/Board.html":{"ref":"classes/Board.html","tf":0.016042780748663103},"classes/Config.html":{"ref":"classes/Config.html","tf":0.007272727272727273},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.009433962264150943},"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.03260869565217391},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.01092896174863388},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.010050251256281407},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0060790273556231}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.013513513513513514},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.010752688172043012}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.03557312252964427},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.01764705882352941},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.03463203463203463},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.017921146953405017},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.034334763948497854},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.03090507726269316},"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.014084507042253521},"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.046511627906976744},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.020905923344947737},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.04},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.030508474576271188},"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.041666666666666664},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.01652892561983471},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.03535353535353535},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.028846153846153848},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0391644908616188},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.01652892561983471},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.011111111111111112},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.031578947368421054},"injectables/PuzzleStateService.html":{"ref":"injectables/PuzzleStateService.html","tf":0.023809523809523808},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.026881720430107527},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.03},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.02040816326530612},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.046511627906976744},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.030612244897959183},"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.04395604395604396},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.021551724137931036},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.049586776859504134},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.046357615894039736},"classes/Board.html":{"ref":"classes/Board.html","tf":0.0481283422459893},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.015706806282722512},"classes/Config.html":{"ref":"classes/Config.html","tf":0.04363636363636364},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.02702702702702703},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.021505376344086023},"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.046511627906976744},"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":0.01818181818181818},"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.018518518518518517},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.01764705882352941},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.01764705882352941},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.02608695652173913},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.012987012987012988},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.018867924528301886},"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.043478260869565216},"classes/Row.html":{"ref":"classes/Row.html","tf":0.05384615384615385},"classes/Square.html":{"ref":"classes/Square.html","tf":0.0547945205479452},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.04081632653061224},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.04824561403508772},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.038461538461538464},"classes/WindowMockFrench.html":{"ref":"classes/WindowMockFrench.html","tf":0.01818181818181818},"classes/WindowMockNoLanguage.html":{"ref":"classes/WindowMockNoLanguage.html","tf":0.01818181818181818},"interfaces/ActionsServiceInterface.html":{"ref":"interfaces/ActionsServiceInterface.html","tf":0.05084745762711865},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.04964539007092199},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.01092896174863388},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.023255813953488372},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.01092896174863388},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.02127659574468085},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.006968641114982578},"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":0.054945054945054944},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.02},"interfaces/ILang.html":{"ref":"interfaces/ILang.html","tf":0.05555555555555555},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.015463917525773196},"interfaces/IMultilingualState.html":{"ref":"interfaces/IMultilingualState.html","tf":0.023809523809523808},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.020100502512562814},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.02},"interfaces/ISampleState.html":{"ref":"interfaces/ISampleState.html","tf":0.021739130434782608},"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.03571428571428571},"interfaces/IWindow.html":{"ref":"interfaces/IWindow.html","tf":0.058823529411764705},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.022988505747126436},"interfaces/ModelInterface.html":{"ref":"interfaces/ModelInterface.html","tf":0.04},"interfaces/StateServiceInterface.html":{"ref":"interfaces/StateServiceInterface.html","tf":0.05084745762711865},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.04428904428904429},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.06504065040650407},"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.07692307692307693}}}}},"p":{"docs":{"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.008547008547008548},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877},"overview.html":{"ref":"overview.html","tf":0.012658227848101266},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.010416666666666666},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.012195121951219513},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.007905138339920948},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.011764705882352941},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.008658008658008658},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.007168458781362007},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.01859799713876967},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.01545253863134658},"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.014084507042253521},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.020905923344947737},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.013333333333333334},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.015254237288135594},"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.041666666666666664},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.01652892561983471},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.025252525252525252},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.028846153846153848},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.018276762402088774},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.010526315789473684},"injectables/PuzzleStateService.html":{"ref":"injectables/PuzzleStateService.html","tf":0.023809523809523808},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.016129032258064516},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.02},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.030612244897959183},"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.02197802197802198},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.01293103448275862},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.01652892561983471},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.019867549668874173},"classes/Board.html":{"ref":"classes/Board.html","tf":0.0053475935828877},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.010471204188481676},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.013513513513513514},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.010752688172043012},"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.011627906976744186},"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.018518518518518517},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.02608695652173913},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715},"classes/Row.html":{"ref":"classes/Row.html","tf":0.007692307692307693},"classes/Square.html":{"ref":"classes/Square.html","tf":0.00684931506849315},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.025510204081632654},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.04824561403508772},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.019230769230769232},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.03546099290780142},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":0.054945054945054944},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.005154639175257732},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.013333333333333334},"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.03571428571428571},"interfaces/IWindow.html":{"ref":"interfaces/IWindow.html","tf":0.029411764705882353},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.03263403263403263},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.016260162601626018}},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0106951871657754}}}}}},"b":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.013986013986013986}}}}}},"k":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.014084507042253521},"classes/Config.html":{"ref":"classes/Config.html","tf":0.01090909090909091},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.01639344262295082},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.03015075376884422}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":5.036363636363636},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}}}}}},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.01282051282051282},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.013937282229965157},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.008620689655172414},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.01092896174863388},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.010638297872340425},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.006968641114982578}},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.006968641114982578}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.017094017094017096},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.006968641114982578}},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.006968641114982578},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"overview.html":{"ref":"overview.html","tf":0.012658227848101266},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.018691588785046728},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.020833333333333332},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.012195121951219513},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.01282051282051282},"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.018518518518518517},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01}}}}},"o":{"docs":{},"r":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.013605442176870748},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207}}}}},"a":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.02040816326530612}}}},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.016666666666666666},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.014423076923076924},"classes/Config.html":{"ref":"classes/Config.html","tf":0.02181818181818182},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.013513513513513514},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.010752688172043012},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.008695652173913044},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.012987012987012988},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.01639344262295082},"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":0.02197802197802198},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.01507537688442211},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.011494252873563218},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.027777777777777776}},"(":{"docs":{},"m":{"docs":{"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.016666666666666666},"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":0.02197802197802198}}},".":{"docs":{},".":{"docs":{},".":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.009615384615384616}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.010101010101010102},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.014184397163120567}},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.010101010101010102},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.014184397163120567}}}}}}},"a":{"docs":{},"y":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331}}}}}},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.012658227848101266},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.024390243902439025},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.007905138339920948},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.011764705882352941},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.008658008658008658},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.007168458781362007},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.019417475728155338},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594},"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":5.042253521126761},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}}},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.010471204188481676},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.005154639175257732}}}}}}}}}},"o":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0106951871657754},"license.html":{"ref":"license.html","tf":0.01020408163265306},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.007905138339920948},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.008658008658008658},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},".":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.011857707509881422},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.012987012987012988},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}}}}}}}}}}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}},"t":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036}}}},"m":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}}},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.005722460658082976},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.008830022075055188},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.006779661016949152},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.010452961672473868},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.032520325203252036}},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.005722460658082976},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.017660044150110375},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.013559322033898305},"injectables/PuzzleStateService.html":{"ref":"injectables/PuzzleStateService.html","tf":0.023809523809523808},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.03875968992248062},"interfaces/StateServiceInterface.html":{"ref":"interfaces/StateServiceInterface.html","tf":0.06779661016949153}},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}}}}}}}}}},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"(":{"docs":{},"'":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.008583690987124463},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.017660044150110375},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.013559322033898305},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.010101010101010102},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":5.01418439716312},"interfaces/StateServiceInterface.html":{"ref":"interfaces/StateServiceInterface.html","tf":0.06779661016949153},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.032520325203252036},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}}}}}}}}}},"/":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288},"interfaces/StateServiceInterface.html":{"ref":"interfaces/StateServiceInterface.html","tf":0.01694915254237288}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.005722460658082976}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.007751937984496124},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.006666666666666667}}}},"e":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}},"b":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.043478260869565216}}}}}}}},"e":{"2":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}},"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.010752688172043012},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.009324009324009324}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.013937282229965157},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.010309278350515464}}}},"s":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.005154639175257732},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.038461538461538464}}}}}}},"m":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0106951871657754}}}}},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.010169491525423728},"classes/Row.html":{"ref":"classes/Row.html","tf":0.046153846153846156}},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}}},"[":{"0":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}},"docs":{}}}}}}}}}}}}},"n":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.02702702702702703},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.021505376344086023},"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":0.01818181818181818},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.00510204081632653},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.009615384615384616},"classes/WindowMockFrench.html":{"ref":"classes/WindowMockFrench.html","tf":0.01818181818181818},"classes/WindowMockNoLanguage.html":{"ref":"classes/WindowMockNoLanguage.html","tf":0.01818181818181818},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IMultilingualState.html":{"ref":"interfaces/IMultilingualState.html","tf":0.023809523809523808},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.016042780748663103},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.007751937984496124},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.006666666666666667}}},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}},"v":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.013333333333333334},"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.02185792349726776},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"classes/Config.html":{"ref":"classes/Config.html","tf":0.014545454545454545},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.01090909090909091},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":5.016393442622951},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.010050251256281407},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.006968641114982578},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.006968641114982578},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.010471204188481676},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.005154639175257732},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}},"u":{"docs":{},"m":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.008695652173913044},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.012987012987012988},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.010309278350515464},"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.011904761904761904},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.011494252873563218}},"e":{"docs":{},"r":{"docs":{"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":6.694444444444444}}}}}},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.02702702702702703},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.021505376344086023},"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":0.01818181818181818},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}}}}}}},"t":{"docs":{},"i":{"docs":{},"r":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}},"r":{"docs":{},"r":{"docs":{"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.028846153846153848}},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0106951871657754},"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.016666666666666666},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.014423076923076924},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.01652892561983471},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.013245033112582781},"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.008695652173913044},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.012987012987012988},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":0.02197802197802198},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.011494252873563218},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.027777777777777776}},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01}}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"z":{"docs":{},"z":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.010416666666666666}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901}}}}}}}}}}}}}},"m":{"docs":{"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.016666666666666666},"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":0.02197802197802198}}},".":{"docs":{},".":{"docs":{},".":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.009615384615384616}}}}}}}}}}}}},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}}}},"p":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.012658227848101266},"modules/AnalyticsModule.html":{"ref":"modules/AnalyticsModule.html","tf":0.034482758620689655},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.028037383177570093},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.02631578947368421},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.03125},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.039603960396039604},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.024390243902439025},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.02564102564102564},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797},"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.014084507042253521},"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.007751937984496124},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.013937282229965157},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.013333333333333334},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288},"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.008333333333333333},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.024793388429752067},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.022222222222222223},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.010526315789473684},"injectables/PuzzleStateService.html":{"ref":"injectables/PuzzleStateService.html","tf":0.023809523809523808},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.016129032258064516},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.01},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01020408163265306},"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.01098901098901099},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.017241379310344827},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.008264462809917356},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.006622516556291391},"classes/Board.html":{"ref":"classes/Board.html","tf":0.0053475935828877},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.03664921465968586},"classes/Config.html":{"ref":"classes/Config.html","tf":0.01090909090909091},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.013513513513513514},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.010752688172043012},"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.011627906976744186},"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":0.01818181818181818},"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.018518518518518517},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.041176470588235294},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.041176470588235294},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.05952380952380952},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.043478260869565216},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.06493506493506493},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715},"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.010869565217391304},"classes/Row.html":{"ref":"classes/Row.html","tf":0.007692307692307693},"classes/Square.html":{"ref":"classes/Square.html","tf":0.00684931506849315},"classes/TranslateLoaderMock.html":{"ref":"classes/TranslateLoaderMock.html","tf":0.06666666666666667},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.00510204081632653},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.028846153846153848},"classes/WindowMockFrench.html":{"ref":"classes/WindowMockFrench.html","tf":0.05454545454545454},"classes/WindowMockNoLanguage.html":{"ref":"classes/WindowMockNoLanguage.html","tf":0.05454545454545454},"interfaces/ActionsServiceInterface.html":{"ref":"interfaces/ActionsServiceInterface.html","tf":0.01694915254237288},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.0070921985815602835},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.01639344262295082},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.023255813953488372},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.02185792349726776},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.02127659574468085},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.0313588850174216},"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":0.01098901098901099},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.02},"interfaces/ILang.html":{"ref":"interfaces/ILang.html","tf":0.027777777777777776},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.03608247422680412},"interfaces/IMultilingualState.html":{"ref":"interfaces/IMultilingualState.html","tf":0.07142857142857142},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.01507537688442211},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.02},"interfaces/ISampleState.html":{"ref":"interfaces/ISampleState.html","tf":0.06521739130434782},"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.023809523809523808},"interfaces/IWindow.html":{"ref":"interfaces/IWindow.html","tf":0.014705882352941176},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.05747126436781609},"interfaces/ModelInterface.html":{"ref":"interfaces/ModelInterface.html","tf":0.04},"interfaces/StateServiceInterface.html":{"ref":"interfaces/StateServiceInterface.html","tf":0.01694915254237288},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.004662004662004662},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.008130081300813009},"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.007692307692307693},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.038461538461538464}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.010471204188481676},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.005154639175257732}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.006779661016949152},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.013986013986013986}},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576},"classes/Row.html":{"ref":"classes/Row.html","tf":0.046153846153846156}},"u":{"docs":{"classes/Board.html":{"ref":"classes/Board.html","tf":0.0374331550802139}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288},"classes/Square.html":{"ref":"classes/Square.html","tf":0.0410958904109589}}}}}}}},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.004662004662004662}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.010526315789473684},"injectables/PuzzleStateService.html":{"ref":"injectables/PuzzleStateService.html","tf":0.023809523809523808},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.019230769230769232},"classes/WindowMockFrench.html":{"ref":"classes/WindowMockFrench.html","tf":0.05454545454545454},"classes/WindowMockNoLanguage.html":{"ref":"classes/WindowMockNoLanguage.html","tf":0.05454545454545454},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.015503875968992248},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.006666666666666667}},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.04838709677419355},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.07},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":5.046511627906977},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.06},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.007751937984496124},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.006666666666666667},"coverage.html":{"ref":"coverage.html","tf":0.007075471698113208}},"s":{"docs":{},":":{"1":{"0":{"docs":{"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.007751937984496124}}},"docs":{}},"2":{"0":{"docs":{"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.006666666666666667}}},"1":{"docs":{"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.006666666666666667}}},"2":{"docs":{"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.006666666666666667}}},"6":{"docs":{"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506}}},"8":{"docs":{"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506}}},"docs":{}},"3":{"0":{"docs":{"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506}}},"4":{"docs":{"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506}}},"8":{"docs":{"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506}}},"docs":{}},"8":{"docs":{"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.007751937984496124}}},"9":{"docs":{"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.007751937984496124}}},"docs":{}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.01},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"1":{"0":{"docs":{"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.01}}},"4":{"docs":{"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.01}}},"8":{"docs":{"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.01}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.007832898172323759},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.014150943396226415}}}}}}}}}},"r":{"docs":{},"a":{"docs":{"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.026881720430107527},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.03},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.023255813953488372},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.03333333333333333}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.010101010101010102},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.014184397163120567}},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.014184397163120567}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051}}}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.010014306151645207},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.010452961672473868},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.005221932114882507},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.01293103448275862},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.017391304347826087},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.01092896174863388},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.010638297872340425}},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.008695652173913044},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.012987012987012988},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.011494252873563218}}}}}}}},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.01545253863134658},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.013054830287206266},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.014150943396226415},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.04591836734693878},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.056910569105691054}}}}}}}}},"r":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.006968641114982578},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.024793388429752067},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.061224489795918366}},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274}},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"(":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.015810276679841896},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.017316017316017316},"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.028169014084507043}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.007905138339920948},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.011764705882352941},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.008658008658008658},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.007168458781362007},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.019417475728155338},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.015810276679841896},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.017316017316017316},"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.056338028169014086}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":5.037037037037037},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"e":{"docs":{},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036}}}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.010452961672473868},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.01293103448275862},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.01092896174863388},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.010638297872340425}}}},"s":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.010752688172043012},"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":0.01818181818181818},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}}},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.004662004662004662}}}}}}}},"f":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.009324009324009324}},"u":{"docs":{},"r":{"docs":{"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374}}}},"(":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.004662004662004662}}}}},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}},"q":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},"#":{"docs":{},"!":{"docs":{},"#":{"docs":{},"w":{"docs":{},"h":{"docs":{},"a":{"docs":{},"t":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.024390243902439025}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556}}}}}}},"s":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.006968641114982578},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.005084745762711864},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.015151515151515152},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"classes/Board.html":{"ref":"classes/Board.html","tf":0.0106951871657754},"classes/Config.html":{"ref":"classes/Config.html","tf":0.02181818181818182},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.05405405405405406},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.043010752688172046},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715},"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.021739130434782608},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.03278688524590164},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.03015075376884422}}}},"k":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.011655011655011656}},"(":{"docs":{},"f":{"docs":{},"n":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.004662004662004662}}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0213903743315508},"license.html":{"ref":"license.html","tf":0.01020408163265306},"modules/AnalyticsModule.html":{"ref":"modules/AnalyticsModule.html","tf":0.034482758620689655},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.010416666666666666},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.012195121951219513},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797},"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.014084507042253521},"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.007751937984496124},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.013333333333333334},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288},"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.008333333333333333},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.010526315789473684},"injectables/PuzzleStateService.html":{"ref":"injectables/PuzzleStateService.html","tf":0.023809523809523808},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.01},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01020408163265306},"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.01098901098901099},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.008264462809917356},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.006622516556291391},"classes/Board.html":{"ref":"classes/Board.html","tf":0.0053475935828877},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.013513513513513514},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.010752688172043012},"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.011627906976744186},"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":0.01818181818181818},"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.018518518518518517},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.008695652173913044},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.012987012987012988},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715},"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.010869565217391304},"classes/Row.html":{"ref":"classes/Row.html","tf":0.007692307692307693},"classes/Square.html":{"ref":"classes/Square.html","tf":0.00684931506849315},"classes/TranslateLoaderMock.html":{"ref":"classes/TranslateLoaderMock.html","tf":0.06666666666666667},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.00510204081632653},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.009615384615384616},"classes/WindowMockFrench.html":{"ref":"classes/WindowMockFrench.html","tf":0.01818181818181818},"classes/WindowMockNoLanguage.html":{"ref":"classes/WindowMockNoLanguage.html","tf":0.01818181818181818},"interfaces/ActionsServiceInterface.html":{"ref":"interfaces/ActionsServiceInterface.html","tf":0.01694915254237288},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.0070921985815602835},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.007751937984496124},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":0.01098901098901099},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01},"interfaces/ILang.html":{"ref":"interfaces/ILang.html","tf":0.027777777777777776},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.005154639175257732},"interfaces/IMultilingualState.html":{"ref":"interfaces/IMultilingualState.html","tf":0.023809523809523808},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.006666666666666667},"interfaces/ISampleState.html":{"ref":"interfaces/ISampleState.html","tf":0.021739130434782608},"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.011904761904761904},"interfaces/IWindow.html":{"ref":"interfaces/IWindow.html","tf":0.014705882352941176},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.011494252873563218},"interfaces/ModelInterface.html":{"ref":"interfaces/ModelInterface.html","tf":0.04},"interfaces/StateServiceInterface.html":{"ref":"interfaces/StateServiceInterface.html","tf":0.01694915254237288},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.008130081300813009},"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.007692307692307693},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.009324009324009324}},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.004662004662004662}}}}}}},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.005722460658082976}}}}}}}}}},"r":{"docs":{},"e":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.005221932114882507},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}},"r":{"docs":{},"m":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.017543859649122806},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.020833333333333332},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.024390243902439025},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.010443864229765013},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556}}}}}},"r":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.010752688172043012},"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":0.01818181818181818},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.009615384615384616},"classes/WindowMockFrench.html":{"ref":"classes/WindowMockFrench.html","tf":0.01818181818181818},"classes/WindowMockNoLanguage.html":{"ref":"classes/WindowMockNoLanguage.html","tf":0.01818181818181818},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}},"e":{"docs":{},"e":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}},"z":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.010752688172043012},"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":0.01818181818181818},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}}}}}},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}}}}}}}}}}},"z":{"docs":{},"e":{"docs":{},"n":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.017094017094017096},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.01652892561983471},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.005221932114882507},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.015706806282722512},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.011764705882352941},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.011764705882352941},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.041811846689895474},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.015463917525773196},"interfaces/IMultilingualState.html":{"ref":"interfaces/IMultilingualState.html","tf":0.023809523809523808},"interfaces/ISampleState.html":{"ref":"interfaces/ISampleState.html","tf":0.021739130434782608},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.1048951048951049},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":6.674479166666666},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}}}}}}}}},"n":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.005221932114882507},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.037296037296037296}}},"l":{"docs":{},"i":{"docs":{},"p":{"docs":{"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.010869565217391304}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.013986013986013986}}}}}}}}}},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0106951871657754},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}}},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0106951871657754}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.008771929824561403}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.008771929824561403}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.008771929824561403}}}}}}}},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.008771929824561403}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333},"license.html":{"ref":"license.html","tf":3.333333333333333}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.010443864229765013},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.042105263157894736},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.015625},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.015625}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0078125}}}}}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/ISampleState.html":{"ref":"interfaces/ISampleState.html","tf":0.021739130434782608},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0078125}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.02040816326530612},"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.023809523809523808}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.02040816326530612},"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.023809523809523808}}}}}}}}}},"_":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.014545454545454545},"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":0.07272727272727272},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.015625}},"(":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0078125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.02702702702702703},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.021505376344086023}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"(":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.02702702702702703},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.021505376344086023}}}}}}}}}}}}}}}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.01020408163265306}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.02040816326530612},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.015625},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/IMultilingualState.html":{"ref":"interfaces/IMultilingualState.html","tf":0.023809523809523808},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0078125}}}}},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0234375}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.01020408163265306}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.01020408163265306}}}}}}}}}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.015625}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0078125}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}},"p":{"docs":{},"h":{"docs":{"modules.html":{"ref":"modules.html","tf":0.08108108108108109}}}}},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.010471204188481676},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.013513513513513514},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.010752688172043012},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.011764705882352941},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.011764705882352941},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.015463917525773196},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.038461538461538464}},"'":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.010309278350515464}}}}}}},"o":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.008658008658008658}}}}}}}}}},"d":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.010309278350515464}}}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"/":{"docs":{},"c":{"docs":{},"h":{"5":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}},"h":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.024390243902439025},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.011904761904761904},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}},"b":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.015810276679841896},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.017316017316017316}}}}}},"l":{"docs":{},"p":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.027777777777777776}},"e":{"docs":{},"r":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.018518518518518517},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0106951871657754}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.02631578947368421},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.008547008547008548},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.07368421052631578}},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"y":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"p":{"docs":{},"k":{"docs":{},"g":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},"/":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"/":{"docs":{},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.024390243902439025}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"s":{"2":{"docs":{},"/":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"s":{"2":{"docs":{},".":{"docs":{},"t":{"docs":{},"s":{"docs":{},"#":{"docs":{},"l":{"9":{"0":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}},"docs":{}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},".":{"docs":{},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.007751937984496124},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.006666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},".":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{},"/":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"s":{"docs":{},"/":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.010471204188481676},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.005154639175257732}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"g":{"docs":{},"g":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},"/":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"/":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.017543859649122806},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.020833333333333332},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.024390243902439025},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01}}}}}}}}},"m":{"docs":{},"l":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.007905138339920948},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.011764705882352941},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.008658008658008658},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.007168458781362007},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.019417475728155338},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594}}}}},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"k":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.012987012987012988},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.019417475728155338}},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":5.017316017316017},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.008658008658008658}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.008658008658008658}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.008547008547008548}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556}},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.01652892561983471},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.013245033112582781}},"s":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.01652892561983471},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.013245033112582781}}}}}}}}}}}}}}}},"i":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}}},"i":{"1":{"8":{"docs":{},"n":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.013513513513513514},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.010752688172043012},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.017421602787456445},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}},"/":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.010416666666666666},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.012195121951219513},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}}}}}},"docs":{}},"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594},"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.007751937984496124},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.013333333333333334},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576},"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.008333333333333333},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.010526315789473684},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.01},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01020408163265306},"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.01098901098901099},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.008264462809917356},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.006622516556291391},"classes/Board.html":{"ref":"classes/Board.html","tf":0.0053475935828877},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.013513513513513514},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.010752688172043012},"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.011627906976744186},"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":0.01818181818181818},"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.018518518518518517},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.008695652173913044},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.012987012987012988},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715},"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.010869565217391304},"classes/Row.html":{"ref":"classes/Row.html","tf":0.046153846153846156},"classes/Square.html":{"ref":"classes/Square.html","tf":0.00684931506849315},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.00510204081632653},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.009615384615384616},"interfaces/ActionsServiceInterface.html":{"ref":"interfaces/ActionsServiceInterface.html","tf":0.01694915254237288},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.0070921985815602835},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.007751937984496124},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":0.01098901098901099},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01},"interfaces/ILang.html":{"ref":"interfaces/ILang.html","tf":0.027777777777777776},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.005154639175257732},"interfaces/IMultilingualState.html":{"ref":"interfaces/IMultilingualState.html","tf":0.023809523809523808},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.006666666666666667},"interfaces/ISampleState.html":{"ref":"interfaces/ISampleState.html","tf":0.021739130434782608},"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.011904761904761904},"interfaces/IWindow.html":{"ref":"interfaces/IWindow.html","tf":0.014705882352941176},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.011494252873563218},"interfaces/ModelInterface.html":{"ref":"interfaces/ModelInterface.html","tf":0.04},"interfaces/StateServiceInterface.html":{"ref":"interfaces/StateServiceInterface.html","tf":0.01694915254237288},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.016260162601626018},"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.015384615384615385},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.015625},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.038461538461538464},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.027777777777777776}}}}},"s":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0374331550802139}}},"n":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.007751937984496124},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.006666666666666667}}}}}}},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877},"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.011904761904761904}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"overview.html":{"ref":"overview.html","tf":0.012658227848101266},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.006968641114982578},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.010752688172043012},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.008620689655172414},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/Config.html":{"ref":"classes/Config.html","tf":0.007272727272727273},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.008695652173913044},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.012987012987012988},"interfaces/ActionsServiceInterface.html":{"ref":"interfaces/ActionsServiceInterface.html","tf":5.033898305084746},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":5.01418439716312},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":5.016393442622951},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":5.023255813953488},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":5.016393442622951},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":5.01595744680851},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":5.017421602787456},"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":5.021978021978022},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":5.02},"interfaces/ILang.html":{"ref":"interfaces/ILang.html","tf":5.055555555555555},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":5.010309278350515},"interfaces/IMultilingualState.html":{"ref":"interfaces/IMultilingualState.html","tf":5.0476190476190474},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":5.015075376884422},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":5.02},"interfaces/ISampleState.html":{"ref":"interfaces/ISampleState.html","tf":5.043478260869565},"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":5.023809523809524},"interfaces/IWindow.html":{"ref":"interfaces/IWindow.html","tf":5.029411764705882},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":5.022988505747127},"interfaces/ModelInterface.html":{"ref":"interfaces/ModelInterface.html","tf":5.08},"interfaces/StateServiceInterface.html":{"ref":"interfaces/StateServiceInterface.html","tf":5.033898305084746},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":5.004662004662005},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":5.016260162601626},"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":5.015384615384615},"coverage.html":{"ref":"coverage.html","tf":0.054245283018867926}},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.008333333333333333}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01020408163265306}}}}}}}},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.01098901098901099}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.006622516556291391},"classes/Board.html":{"ref":"classes/Board.html","tf":0.0053475935828877},"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.007832898172323759},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.009433962264150943}},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}}}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"1":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}}},"docs":{}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.010443864229765013},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.010443864229765013},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}}}}}},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.010443864229765013},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.015306122448979591}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331}}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.012658227848101266},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":5.023255813953488},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":5.013937282229965},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":5.04},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":5.005084745762712},"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":5.025},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":5.024793388429752},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":5.015151515151516},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":5.019230769230769},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":5.007832898172324},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":5.033057851239669},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":5.016666666666667},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":5.031578947368421},"injectables/PuzzleStateService.html":{"ref":"injectables/PuzzleStateService.html","tf":5.071428571428571},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":5.016129032258065},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":5.03},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":5.020408163265306},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":5.023255813953488},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":5.030612244897959},"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":5.032967032967033},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.017241379310344827},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.009433962264150943},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.015503875968992248},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.01639344262295082},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.015957446808510637},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.013333333333333334},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.011655011655011656},"coverage.html":{"ref":"coverage.html","tf":0.04481132075471698}},"o":{"docs":{},"r":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.023715415019762844},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.008583690987124463}}}},"(":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356}},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036}}}}}}}}}}}}}}}}},"o":{"docs":{},"g":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.004662004662004662}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.016666666666666666},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0121580547112462}},"(":{"docs":{},"'":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556}},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"license.html":{"ref":"license.html","tf":0.030612244897959183},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356}},"e":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533}}}}}},"s":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{"modules/AnalyticsModule.html":{"ref":"modules/AnalyticsModule.html","tf":0.034482758620689655},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.010416666666666666},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.012195121951219513},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797},"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.014084507042253521},"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.007751937984496124},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.013333333333333334},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288},"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.025},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.019230769230769232},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.010526315789473684},"injectables/PuzzleStateService.html":{"ref":"injectables/PuzzleStateService.html","tf":0.023809523809523808},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.01},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01020408163265306},"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.01098901098901099},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.008264462809917356},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.006622516556291391},"classes/Board.html":{"ref":"classes/Board.html","tf":0.0053475935828877},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/Config.html":{"ref":"classes/Config.html","tf":0.007272727272727273},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.013513513513513514},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.010752688172043012},"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.011627906976744186},"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":0.01818181818181818},"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.018518518518518517},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.023809523809523808},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.017391304347826087},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.025974025974025976},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715},"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.010869565217391304},"classes/Row.html":{"ref":"classes/Row.html","tf":0.007692307692307693},"classes/Square.html":{"ref":"classes/Square.html","tf":0.00684931506849315},"classes/TranslateLoaderMock.html":{"ref":"classes/TranslateLoaderMock.html","tf":0.06666666666666667},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.00510204081632653},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.009615384615384616},"classes/WindowMockFrench.html":{"ref":"classes/WindowMockFrench.html","tf":0.01818181818181818},"classes/WindowMockNoLanguage.html":{"ref":"classes/WindowMockNoLanguage.html","tf":0.01818181818181818},"interfaces/ActionsServiceInterface.html":{"ref":"interfaces/ActionsServiceInterface.html","tf":0.01694915254237288},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.0070921985815602835},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.01092896174863388},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.007751937984496124},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":0.03296703296703297},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01},"interfaces/ILang.html":{"ref":"interfaces/ILang.html","tf":0.027777777777777776},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.005154639175257732},"interfaces/IMultilingualState.html":{"ref":"interfaces/IMultilingualState.html","tf":0.023809523809523808},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.010050251256281407},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.006666666666666667},"interfaces/ISampleState.html":{"ref":"interfaces/ISampleState.html","tf":0.021739130434782608},"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.011904761904761904},"interfaces/IWindow.html":{"ref":"interfaces/IWindow.html","tf":0.014705882352941176},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.022988505747126436},"interfaces/ModelInterface.html":{"ref":"interfaces/ModelInterface.html","tf":0.04},"interfaces/StateServiceInterface.html":{"ref":"interfaces/StateServiceInterface.html","tf":0.01694915254237288},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.008130081300813009},"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.007692307692307693},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.027777777777777776}},"(":{"docs":{},"m":{"docs":{"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.016666666666666666},"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":0.02197802197802198}}},".":{"docs":{},".":{"docs":{},".":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.009615384615384616}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.008830022075055188}}}}},"i":{"docs":{},"t":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.027210884353741496},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.05405405405405406},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.043010752688172046}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}}}}}}}}}}}}}},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"interfaces/IMultilingualState.html":{"ref":"interfaces/IMultilingualState.html","tf":0.023809523809523808},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.006968641114982578}}}}}},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"b":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.02040816326530612},"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":5.023809523809524},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.03076923076923077}}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.01652892561983471},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.013245033112582781}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288},"classes/Square.html":{"ref":"classes/Square.html","tf":0.0410958904109589}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.008771929824561403}},"(":{"docs":{},"x":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.008771929824561403}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288},"classes/Row.html":{"ref":"classes/Row.html","tf":0.046153846153846156}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288},"classes/Board.html":{"ref":"classes/Board.html","tf":0.0374331550802139}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556}}}}},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.014545454545454545},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}}}}}}}}},"s":{"docs":{},"k":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.014545454545454545},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"h":{"docs":{},"y":{"docs":{},"b":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.014545454545454545},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}}}}}}}},"n":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.014545454545454545},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.014545454545454545},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}}}}}},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.043478260869565216}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.008771929824561403}},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.008771929824561403}},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/ISampleState.html":{"ref":"interfaces/ISampleState.html","tf":5.065217391304348},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0060790273556231},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.007905138339920948},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.008658008658008658},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594},"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.007751937984496124},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.006968641114982578},"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.008333333333333333},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.007832898172323759},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.01},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01020408163265306},"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.01098901098901099},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.01293103448275862},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.01652892561983471},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.013245033112582781},"classes/Board.html":{"ref":"classes/Board.html","tf":0.0106951871657754},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.020942408376963352},"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.023255813953488372},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.023529411764705882},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.023529411764705882},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.017391304347826087},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.012987012987012988},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.009433962264150943},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.007751937984496124},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.01092896174863388},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.010638297872340425},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.015463917525773196},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.006666666666666667},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.011494252873563218}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"modules/AnalyticsModule.html":{"ref":"modules/AnalyticsModule.html","tf":0.13793103448275862},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.11214953271028037},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.09649122807017543},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.125},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.10891089108910891},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0975609756097561},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.08974358974358974},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.007905138339920948},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.029411764705882353},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.008658008658008658},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.025089605734767026},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.005722460658082976},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.011037527593818985},"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.028169014084507043},"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.05426356589147287},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.010452961672473868},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.05333333333333334},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.01864406779661017},"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.016666666666666666},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.024793388429752067},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.015151515151515152},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.02403846153846154},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.005221932114882507},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.06611570247933884},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.05555555555555555},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.06315789473684211},"injectables/PuzzleStateService.html":{"ref":"injectables/PuzzleStateService.html","tf":0.07142857142857142},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.016129032258064516},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.03},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.04081632653061224},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.046511627906976744},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.02040816326530612},"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.02197802197802198},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.01293103448275862},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.024793388429752067},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.026490066225165563},"classes/Board.html":{"ref":"classes/Board.html","tf":0.0106951871657754},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.015706806282722512},"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.011627906976744186},"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":0.01818181818181818},"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.037037037037037035},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.01764705882352941},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.01764705882352941},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.009433962264150943},"classes/Row.html":{"ref":"classes/Row.html","tf":0.007692307692307693},"classes/Square.html":{"ref":"classes/Square.html","tf":0.00684931506849315},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.015306122448979591},"interfaces/ActionsServiceInterface.html":{"ref":"interfaces/ActionsServiceInterface.html","tf":0.05084745762711865},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.0070921985815602835},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.023255813953488372},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.01639344262295082},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.015957446808510637},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.0313588850174216},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.11},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.015463917525773196},"interfaces/IMultilingualState.html":{"ref":"interfaces/IMultilingualState.html","tf":0.023809523809523808},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.02},"interfaces/ISampleState.html":{"ref":"interfaces/ISampleState.html","tf":0.021739130434782608},"interfaces/StateServiceInterface.html":{"ref":"interfaces/StateServiceInterface.html","tf":0.05084745762711865},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.032520325203252036},"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.007692307692307693},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.011111111111111112},"interfaces/IMultilingualState.html":{"ref":"interfaces/IMultilingualState.html","tf":5.071428571428571},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0060790273556231},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.010471204188481676},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.011764705882352941},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.011764705882352941},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":5.015463917525773},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0060790273556231},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.013605442176870748}}}}},"u":{"docs":{},"t":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":5.02},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.016666666666666666},"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":5.021978021978022},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}},"d":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.004291845493562232},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.006622516556291391},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.005084745762711864},"classes/Square.html":{"ref":"classes/Square.html","tf":0.03424657534246575},"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.03076923076923077}},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.013937282229965157},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}},"y":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.006968641114982578},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":5.006968641114983},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"t":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.010452961672473868},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.017241379310344827},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":5.021857923497268},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.015957446808510637},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.020905923344947737},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.02586206896551724},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.03278688524590164},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":5.026595744680851},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":0.01818181818181818},"interfaces/ILang.html":{"ref":"interfaces/ILang.html","tf":5.055555555555555},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0078125}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.004662004662004662}}}}}}},"f":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.010752688172043012},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.02},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.015503875968992248},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":5.02},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.02197802197802198},"interfaces/IWindow.html":{"ref":"interfaces/IWindow.html","tf":5.029411764705882},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.014545454545454545},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.01092896174863388},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":5.015075376884422},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}}}},"k":{"docs":{},"a":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.024390243902439025}}}}},"e":{"docs":{},"y":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.061224489795918366},"classes/Config.html":{"ref":"classes/Config.html","tf":0.007272727272727273},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.04054054054054054},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.03225806451612903},"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.06976744186046512},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.00510204081632653},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.01092896174863388},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.010452961672473868},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.010050251256281407},"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.047619047619047616}}}}},"l":{"1":{"0":{"4":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}},"docs":{}},"docs":{}},"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"overview.html":{"ref":"overview.html","tf":0.012658227848101266},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.010416666666666666},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}}}}},"f":{"docs":{},"t":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.005084745762711864},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.02403846153846154},"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.008695652173913044},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.012987012987012988},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.013937282229965157},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.04597701149425287},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}},"_":{"1":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.013513513513513514},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.010752688172043012},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}}},"2":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.013513513513513514},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.010752688172043012},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}}},"3":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.013513513513513514},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.010752688172043012},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}}},"4":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.013513513513513514},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.010752688172043012},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}}},"docs":{}}}}}},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877},"license.html":{"ref":"license.html","tf":3.343537414965986}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877},"license.html":{"ref":"license.html","tf":0.02040816326530612},"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.011904761904761904}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0106951871657754}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}},"b":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.010526315789473684},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.00510204081632653},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}},"n":{"docs":{},"k":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.005221932114882507},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.010869565217391304}}}}}},"s":{"docs":{},"t":{"docs":{"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.011904761904761904}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.010526315789473684},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"1":{"6":{"docs":{"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.010526315789473684}}},"9":{"docs":{"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.010526315789473684}}},"docs":{}},"2":{"6":{"docs":{"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.010526315789473684}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.015503875968992248},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.010309278350515464},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}}}}}},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.010416666666666666},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.027777777777777776}},"e":{"docs":{},"r":{"docs":{"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/TranslateLoaderMock.html":{"ref":"classes/TranslateLoaderMock.html","tf":0.06666666666666667},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.008547008547008548},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.010101010101010102},"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.011904761904761904}},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.004291845493562232},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":5.01010101010101},"injectables/PuzzleStateService.html":{"ref":"injectables/PuzzleStateService.html","tf":0.09523809523809523},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.046511627906976744},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01020408163265306}},"(":{"docs":{},"t":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01020408163265306}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01020408163265306}}}}}}}}}},"[":{"docs":{},"t":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051}}}}}}}}}}}},"t":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.013937282229965157},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.04699738903394256},"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.04395604395604396},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.008620689655172414},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.02830188679245283},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.038461538461538464},"classes/WindowMockFrench.html":{"ref":"classes/WindowMockFrench.html","tf":0.01818181818181818},"classes/WindowMockNoLanguage.html":{"ref":"classes/WindowMockNoLanguage.html","tf":0.01818181818181818},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.01092896174863388},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.010638297872340425},"interfaces/IWindow.html":{"ref":"interfaces/IWindow.html","tf":0.058823529411764705},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155},"coverage.html":{"ref":"coverage.html","tf":0.0047169811320754715}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.008547008547008548},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.010443864229765013},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.03763440860215054},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.014150943396226415},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.023255813953488372},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.02}}}}}}}}}}}}}}}},"g":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.03529411764705882},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.010752688172043012},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.08},"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.016666666666666666},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308},"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.013513513513513514},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.010752688172043012},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.023809523809523808},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.017391304347826087},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":0.02197802197802198},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.03305785123966942},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.019230769230769232},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.03571428571428571},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.02608695652173913},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.06493506493506493},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.05747126436781609},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.05555555555555555}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.008547008547008548},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.01652892561983471},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.03365384615384615},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":5.035714285714286},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.02608695652173913},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.025974025974025976},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.022988505747126436},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.01652892561983471},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":5.017391304347826},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.012987012987012988},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.011494252873563218},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.03305785123966942},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.023809523809523808},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.034782608695652174},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":5.038961038961039},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.022988505747126436},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}}}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{},"(":{"docs":{},"`":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.03529411764705882},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.014336917562724014},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.08},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":5.009615384615385},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.013333333333333334}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.019230769230769232}}}}},"(":{"docs":{},"m":{"docs":{"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.016666666666666666},"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":0.02197802197802198}}},"e":{"docs":{},"v":{"docs":{"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.03571428571428571},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.02608695652173913},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.025974025974025976},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.022988505747126436}}}}},"e":{"docs":{},"v":{"docs":{"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.03305785123966942},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.014423076923076924},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.07142857142857142},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.06956521739130435},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.05194805194805195},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":5.057471264367816},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.009615384615384616}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.053763440860215055},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.01652892561983471},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.011111111111111112},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.010471204188481676},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.011764705882352941},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.011764705882352941},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.02040816326530612},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.010309278350515464},"interfaces/IMultilingualState.html":{"ref":"interfaces/IMultilingualState.html","tf":0.11904761904761904}},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.01282051282051282},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.014336917562724014},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.03305785123966942},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.03333333333333333},"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.009615384615384616},"classes/WindowMockFrench.html":{"ref":"classes/WindowMockFrench.html","tf":0.01818181818181818},"classes/WindowMockNoLanguage.html":{"ref":"classes/WindowMockNoLanguage.html","tf":0.01818181818181818},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.011111111111111112},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.010471204188481676},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.011764705882352941},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":5.017647058823529},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.010309278350515464},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.038461538461538464},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}}}}}}}}},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":5.014336917562724},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.010471204188481676},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":5.017647058823529},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.011764705882352941},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.010309278350515464},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.038461538461538464},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.010471204188481676},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.011764705882352941},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.011764705882352941},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.02577319587628866}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.010471204188481676},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.011764705882352941},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.011764705882352941},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.02577319587628866}}}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.02127659574468085},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0060790273556231}}}}},"z":{"docs":{},"i":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}},".":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.007168458781362007}}}}}}}},"m":{"docs":{"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.041666666666666664},"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":0.054945054945054944}},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.013605442176870748},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.010309278350515464},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.006968641114982578},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.0106951871657754},"overview.html":{"ref":"overview.html","tf":0.02531645569620253},"license.html":{"ref":"license.html","tf":0.02040816326530612},"modules.html":{"ref":"modules.html","tf":0.05405405405405406},"modules/AnalyticsModule.html":{"ref":"modules/AnalyticsModule.html","tf":0.06896551724137931},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.018691588785046728},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.017543859649122806},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.020833333333333332},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.019801980198019802},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.024390243902439025},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.008547008547008548},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.007905138339920948},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.011764705882352941},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.008658008658008658},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.007168458781362007},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.019417475728155338},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594},"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.028169014084507043},"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.015503875968992248},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.006968641114982578},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.02666666666666667},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576},"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.016666666666666666},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.01652892561983471},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.010101010101010102},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.009615384615384616},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.005221932114882507},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.01652892561983471},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.011111111111111112},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.021052631578947368},"injectables/PuzzleStateService.html":{"ref":"injectables/PuzzleStateService.html","tf":0.047619047619047616},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.010752688172043012},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.02},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.013605442176870748},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.015503875968992248},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.02040816326530612},"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.02197802197802198},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.008620689655172414},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.01652892561983471},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.013245033112582781},"classes/Board.html":{"ref":"classes/Board.html","tf":0.0106951871657754},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.010471204188481676},"classes/Config.html":{"ref":"classes/Config.html","tf":0.007272727272727273},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.02702702702702703},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.021505376344086023},"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.023255813953488372},"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":0.03636363636363636},"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.037037037037037035},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.011764705882352941},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.011764705882352941},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.023809523809523808},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.017391304347826087},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.025974025974025976},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.009433962264150943},"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.021739130434782608},"classes/Row.html":{"ref":"classes/Row.html","tf":0.015384615384615385},"classes/Square.html":{"ref":"classes/Square.html","tf":0.0136986301369863},"classes/TranslateLoaderMock.html":{"ref":"classes/TranslateLoaderMock.html","tf":0.13333333333333333},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.01020408163265306},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.008771929824561403},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.019230769230769232},"classes/WindowMockFrench.html":{"ref":"classes/WindowMockFrench.html","tf":0.03636363636363636},"classes/WindowMockNoLanguage.html":{"ref":"classes/WindowMockNoLanguage.html","tf":0.03636363636363636},"interfaces/ActionsServiceInterface.html":{"ref":"interfaces/ActionsServiceInterface.html","tf":0.03389830508474576},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.014184397163120567},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.01092896174863388},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.015503875968992248},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.01092896174863388},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.010638297872340425},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.006968641114982578},"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":0.02197802197802198},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.02},"interfaces/ILang.html":{"ref":"interfaces/ILang.html","tf":0.05555555555555555},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.010309278350515464},"interfaces/IMultilingualState.html":{"ref":"interfaces/IMultilingualState.html","tf":0.047619047619047616},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.010050251256281407},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.013333333333333334},"interfaces/ISampleState.html":{"ref":"interfaces/ISampleState.html","tf":0.043478260869565216},"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.023809523809523808},"interfaces/IWindow.html":{"ref":"interfaces/IWindow.html","tf":0.029411764705882353},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.022988505747126436},"interfaces/ModelInterface.html":{"ref":"interfaces/ModelInterface.html","tf":0.08},"interfaces/StateServiceInterface.html":{"ref":"interfaces/StateServiceInterface.html","tf":0.03389830508474576},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.004662004662004662},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.016260162601626018},"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.015384615384615385},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.015625},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0060790273556231},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.07692307692307693},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.05555555555555555},"coverage.html":{"ref":"coverage.html","tf":0.0047169811320754715}}}},"h":{"docs":{},".":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.00847457627118644},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.03070175438596491}},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}}}}},"i":{"docs":{},"n":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.011764705882352941}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}}}}}}}}}},"p":{"docs":{"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.010452961672473868}},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374}}}}},"r":{"docs":{"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.010526315789473684}}},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.008771929824561403}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.008771929824561403}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.013937282229965157},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.008620689655172414},"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.01092896174863388},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.010638297872340425},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}},"l":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.013559322033898305},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.019867549668874173}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.005084745762711864}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.005084745762711864}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.005084745762711864}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.006622516556291391}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.026490066225165563},"classes/Board.html":{"ref":"classes/Board.html","tf":0.016042780748663103},"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.03488372093023256},"interfaces/ModelInterface.html":{"ref":"interfaces/ModelInterface.html","tf":5.08},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.02531645569620253},"modules.html":{"ref":"modules.html","tf":10.027027027027026},"modules/AnalyticsModule.html":{"ref":"modules/AnalyticsModule.html","tf":5.0344827586206895},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":5.02803738317757},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":5.017543859649122},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":5.03125},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":5.02970297029703},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":5.036585365853658},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":5.0085470085470085},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.018691588785046728},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.017543859649122806},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.02}}}}}}}}}}}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.007905138339920948},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.011764705882352941},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.008658008658008658},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.007168458781362007},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.019417475728155338},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594}}}}},"i":{"docs":{},"d":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.007905138339920948},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.011764705882352941},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.008658008658008658},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.007168458781362007},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.019417475728155338},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594}}}},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705}}}}}}},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"z":{"docs":{},"z":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"injectables/PuzzleStateService.html":{"ref":"injectables/PuzzleStateService.html","tf":0.023809523809523808}}}}}}}}}}}}}}}},"'":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877},"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.037037037037037035},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.006968641114982578}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374}}}}}},"v":{"docs":{},"e":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}}},"c":{"docs":{},"k":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.005221932114882507},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":5.005221932114883},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":5.009433962264151},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"h":{"docs":{},"y":{"docs":{},"b":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.01090909090909091},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.01639344262295082},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.03015075376884422}}}}}}}},"n":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.01090909090909091},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.01639344262295082},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.03015075376884422}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}},"a":{"docs":{},"l":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05063291139240506},"modules.html":{"ref":"modules.html","tf":0.02702702702702703},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":5.035087719298246},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.0625},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.0594059405940594},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.024390243902439025},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274}}}}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":5.016528925619835},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.01652892561983471}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.03305785123966942},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":5.011111111111111},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.02631578947368421},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.017543859649122806},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.024793388429752067}}}}}}}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.010752688172043012},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"2":{"docs":{"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.010752688172043012}}},"6":{"docs":{"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.010752688172043012}}},"docs":{}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.010452961672473868}}}}}},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797},"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.014084507042253521}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.006968641114982578},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}}}},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.007905138339920948},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.008658008658008658},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.007168458781362007},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.006968641114982578},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576},"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.016666666666666666},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.01652892561983471},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.010101010101010102},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.009615384615384616},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.005221932114882507},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.021052631578947368},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.010752688172043012},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.02},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.02040816326530612},"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.02197802197802198},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.008620689655172414},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.01652892561983471},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.013245033112582781},"classes/Board.html":{"ref":"classes/Board.html","tf":0.0106951871657754},"classes/Config.html":{"ref":"classes/Config.html","tf":0.007272727272727273},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.02702702702702703},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.021505376344086023},"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.023255813953488372},"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":0.03636363636363636},"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.037037037037037035},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.023809523809523808},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.017391304347826087},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.01020408163265306},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.008771929824561403},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.019230769230769232},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.014184397163120567},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.01092896174863388},"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":0.02197802197802198},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.013333333333333334},"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.023809523809523808},"interfaces/IWindow.html":{"ref":"interfaces/IWindow.html","tf":0.029411764705882353},"interfaces/ModelInterface.html":{"ref":"interfaces/ModelInterface.html","tf":0.08},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.011655011655011656},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.016260162601626018}}}}}},"n":{"docs":{},"u":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.018518518518518517},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0182370820668693}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.006968641114982578}}}}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.02403846153846154},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.008695652173913044},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.012987012987012988},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.04597701149425287}}}}}},"a":{"docs":{},"n":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.006968641114982578}}}}},"i":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.02040816326530612}}},"n":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.013157894736842105}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.01652892561983471},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.008695652173913044},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.05194805194805195},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.011494252873563218}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0234375}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":3.341145833333333},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":3.3363728470111447},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":3.3717948717948714},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":3.3611111111111107}}}}}}}}}},"s":{"docs":{},"g":{"docs":{"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.009615384615384616},"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.02197802197802198},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.03305785123966942},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.026490066225165563},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.019230769230769232},"interfaces/IWindow.html":{"ref":"interfaces/IWindow.html","tf":0.029411764705882353}}}}},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0106951871657754},"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.014084507042253521},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.010752688172043012},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.015503875968992248},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.013333333333333334}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.019762845849802372},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.023529411764705882},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.021645021645021644},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.017921146953405017},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.02912621359223301},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.022889842632331903},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.02207505518763797},"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.014084507042253521},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.017421602787456445},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.013333333333333334},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.015254237288135594},"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.041666666666666664},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.01652892561983471},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.025252525252525252},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.028846153846153848},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.015665796344647518},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.010526315789473684},"injectables/PuzzleStateService.html":{"ref":"injectables/PuzzleStateService.html","tf":0.023809523809523808},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.021505376344086023},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.02},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.027210884353741496},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.030612244897959183},"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.02197802197802198},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.008620689655172414},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.01652892561983471},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.019867549668874173},"classes/Board.html":{"ref":"classes/Board.html","tf":0.0053475935828877},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.013513513513513514},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.010752688172043012},"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.011627906976744186},"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.05555555555555555},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.02608695652173913},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715},"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.010869565217391304},"classes/Row.html":{"ref":"classes/Row.html","tf":0.007692307692307693},"classes/Square.html":{"ref":"classes/Square.html","tf":0.00684931506849315},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.025510204081632654},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.04824561403508772},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.019230769230769232},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.03546099290780142},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.007751937984496124},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":0.054945054945054944},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.02},"interfaces/ISampleState.html":{"ref":"interfaces/ISampleState.html","tf":0.10869565217391304},"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.03571428571428571},"interfaces/IWindow.html":{"ref":"interfaces/IWindow.html","tf":0.029411764705882353},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.039627039627039624},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.016260162601626018}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.010526315789473684},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374}},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.010526315789473684}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374}}}}},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374}}}}}}}}}}},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":5.021052631578947},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.047619047619047616},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}}}}}}},"v":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.019417475728155338}},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":5.038834951456311},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.019417475728155338}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.019417475728155338}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.010752688172043012},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.02},"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.04395604395604396},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.038461538461538464},"classes/WindowMockFrench.html":{"ref":"classes/WindowMockFrench.html","tf":0.01818181818181818},"classes/WindowMockNoLanguage.html":{"ref":"classes/WindowMockNoLanguage.html","tf":0.01818181818181818},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.013333333333333334},"interfaces/IWindow.html":{"ref":"interfaces/IWindow.html","tf":0.058823529411764705}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.016129032258064516},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.02},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.015503875968992248},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.02}}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.010752688172043012},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.02},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.013333333333333334}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.016129032258064516},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.02},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.015503875968992248},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.02}}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.010752688172043012},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.023255813953488372},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.013333333333333334}}}}}}}}}}}}}}}},"b":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}},"t":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}},"i":{"docs":{},"c":{"docs":{"license.html":{"ref":"license.html","tf":0.02040816326530612}}}},"h":{"docs":{"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374}}},"a":{"docs":{},"t":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}}}},"e":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"_":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.017543859649122806},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.020833333333333332},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.019801980198019802},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.024390243902439025}}}}}}}}}}}}}}}}},"p":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.0855614973262032}}}},"g":{"2":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556}},"j":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0121580547112462}}}}}}}}},"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AnalyticsModule.html":{"ref":"modules/AnalyticsModule.html","tf":0.06896551724137931},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.028037383177570093},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.02631578947368421},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.020833333333333332},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.019801980198019802},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.024390243902439025},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.008547008547008548},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.03}}}}}}},"x":{"docs":{"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.017543859649122806},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556}}},"r":{"docs":{},"x":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}},"/":{"docs":{},"e":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.008547008547008548},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.006968641114982578},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.005154639175257732}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"/":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.015810276679841896},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.017316017316017316},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.014336917562724014},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.005722460658082976}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.005722460658082976},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.03305785123966942},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.026490066225165563}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594}}}}}}}}}}}}}}}}}},"e":{"docs":{},"w":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.017543859649122806},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.010416666666666666},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594},"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.007751937984496124},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.005084745762711864},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.01652892561983471},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.024793388429752067},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.011111111111111112},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.013605442176870748},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.01020408163265306},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.010452961672473868},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.02358490566037736}}}}}},"x":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}}}}}}},"e":{"docs":{},"d":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.011857707509881422},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.012987012987012988},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.03559322033898305},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"classes/Board.html":{"ref":"classes/Board.html","tf":0.10695187165775401},"classes/Row.html":{"ref":"classes/Row.html","tf":0.11538461538461539},"classes/Square.html":{"ref":"classes/Square.html","tf":0.0684931506849315},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.013157894736842105},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.007751937984496124},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.015957446808510637},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.006666666666666667},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.027972027972027972}}}}}},"l":{"docs":{},"l":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.01859799713876967},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.013245033112582781},"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.007751937984496124},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.011864406779661017},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.015151515151515152},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.04081632653061224},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.013513513513513514},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.010752688172043012},"classes/Row.html":{"ref":"classes/Row.html","tf":0.007692307692307693}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0106951871657754}}},"r":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.013605442176870748}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.017543859649122806},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.010416666666666666},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.007905138339920948},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.008658008658008658},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.007168458781362007},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.01859799713876967},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.02869757174392936},"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.014084507042253521},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.020905923344947737},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.013333333333333334},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.020338983050847456},"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.041666666666666664},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.04132231404958678},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.025252525252525252},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.028846153846153848},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.015665796344647518},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.011111111111111112},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.010526315789473684},"injectables/PuzzleStateService.html":{"ref":"injectables/PuzzleStateService.html","tf":0.023809523809523808},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.04838709677419355},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.05},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.030612244897959183},"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.02197802197802198},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.01293103448275862},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.01652892561983471},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.019867549668874173},"classes/Board.html":{"ref":"classes/Board.html","tf":0.0053475935828877},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.015706806282722512},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.013513513513513514},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.010752688172043012},"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.011627906976744186},"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.018518518518518517},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.011764705882352941},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.011764705882352941},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.023809523809523808},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.043478260869565216},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.012987012987012988},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715},"classes/Row.html":{"ref":"classes/Row.html","tf":0.007692307692307693},"classes/Square.html":{"ref":"classes/Square.html","tf":0.00684931506849315},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.025510204081632654},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.04824561403508772},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.019230769230769232},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.03546099290780142},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.031007751937984496},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.01092896174863388},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213},"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":0.054945054945054944},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.005154639175257732},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.05333333333333334},"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.03571428571428571},"interfaces/IWindow.html":{"ref":"interfaces/IWindow.html","tf":0.029411764705882353},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.011494252873563218},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.03263403263403263},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.056910569105691054}},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.008130081300813009}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.007692307692307693},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"1":{"0":{"docs":{"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.007692307692307693}}},"1":{"docs":{"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.007692307692307693}}},"2":{"docs":{"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.007692307692307693}}},"3":{"docs":{"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.007692307692307693}}},"4":{"docs":{"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.007692307692307693}}},"5":{"docs":{"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.007692307692307693}}},"6":{"docs":{"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.007692307692307693}}},"docs":{}},"7":{"docs":{"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.007692307692307693}}},"8":{"docs":{"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.007692307692307693}}},"9":{"docs":{"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.007692307692307693}}},"docs":{}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594}}}},"t":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594}}}}},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594}}}}}}}}}}}}}}}}}}},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}},"u":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.012658227848101266},"license.html":{"ref":"license.html","tf":0.01020408163265306},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.010416666666666666},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.011037527593818985},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"overview.html":{"ref":"overview.html","tf":10.012658227848101}}}}}},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.008771929824561403}},"(":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015}}}}}}}}}}}},"b":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}},"j":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.008771929824561403}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.007905138339920948},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.008658008658008658},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.014423076923076924},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.008695652173913044},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.012987012987012988},"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.03260869565217391},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.015306122448979591},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.010309278350515464},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.034482758620689655},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0060790273556231}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.11627906976744186},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.01864406779661017},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.03305785123966942},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.031578947368421054},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.047619047619047616},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.07751937984496124},"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.05555555555555555},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.025510204081632654},"interfaces/ActionsServiceInterface.html":{"ref":"interfaces/ActionsServiceInterface.html","tf":0.13559322033898305},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.017421602787456445},"interfaces/IMultilingualState.html":{"ref":"interfaces/IMultilingualState.html","tf":0.047619047619047616},"interfaces/ISampleState.html":{"ref":"interfaces/ISampleState.html","tf":0.043478260869565216},"interfaces/StateServiceInterface.html":{"ref":"interfaces/StateServiceInterface.html","tf":0.06779661016949153}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374}}}}},"'":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.00510204081632653}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.00510204081632653}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}}}},"n":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.011857707509881422},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.012987012987012988},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.004291845493562232}}}}}},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.007905138339920948},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.008658008658008658}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.007905138339920948},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.008658008658008658}}}}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.004291845493562232},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.024793388429752067},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.019867549668874173}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}},"(":{"docs":{},"$":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}},"(":{"docs":{},"$":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}}}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}},"(":{"docs":{},"$":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}}}}}}}}},"o":{"docs":{},"v":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"$":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}},"(":{"docs":{},"$":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}}}}}}}}},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"p":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}},"(":{"docs":{},"$":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.008830022075055188},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.032520325203252036}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.016260162601626018}},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.016260162601626018}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.006622516556291391}}}}}}},"t":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.008830022075055188},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.032520325203252036}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.02040816326530612}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.005221932114882507}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"n":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.005221932114882507},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}}}}}}}}}}}}},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.037037037037037035}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.02040816326530612}}}}}}}}}}}},"f":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}},"r":{"docs":{},"g":{"docs":{},"a":{"docs":{},"n":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0106951871657754}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.005221932114882507}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.005221932114882507},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}}},"o":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"'":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0106951871657754}}}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.004291845493562232},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.0743801652892562},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.07947019867549669},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.02608695652173913},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.012987012987012988},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.011494252873563218}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"overview.html":{"ref":"overview.html","tf":0.012658227848101266},"license.html":{"ref":"license.html","tf":0.01020408163265306},"modules/AnalyticsModule.html":{"ref":"modules/AnalyticsModule.html","tf":0.034482758620689655},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.028037383177570093},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.02631578947368421},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.020833333333333332},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.019801980198019802},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.024390243902439025},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.042735042735042736},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.024793388429752067},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.022222222222222223},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.02},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.015625}},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0078125}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.007905138339920948},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.011764705882352941},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.008658008658008658},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.007168458781362007},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594},"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.015503875968992248},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.024390243902439025},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.02666666666666667},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.010101010101010102},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.005221932114882507},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.01652892561983471},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.011111111111111112},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.021052631578947368},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.010752688172043012},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.013605442176870748},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.015503875968992248},"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.02197802197802198},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.034482758620689655},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.01652892561983471},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.013245033112582781},"classes/Board.html":{"ref":"classes/Board.html","tf":0.0106951871657754},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.010471204188481676},"classes/Config.html":{"ref":"classes/Config.html","tf":0.007272727272727273},"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.023255813953488372},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.011764705882352941},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.011764705882352941},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.025974025974025976},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.009433962264150943},"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.021739130434782608},"classes/Row.html":{"ref":"classes/Row.html","tf":0.015384615384615385},"classes/Square.html":{"ref":"classes/Square.html","tf":0.0136986301369863},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.01020408163265306},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.019230769230769232},"interfaces/ActionsServiceInterface.html":{"ref":"interfaces/ActionsServiceInterface.html","tf":0.03389830508474576},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.014184397163120567},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.01092896174863388},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.015503875968992248},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.03278688524590164},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.031914893617021274},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.006968641114982578},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.02},"interfaces/ILang.html":{"ref":"interfaces/ILang.html","tf":0.05555555555555555},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.010309278350515464},"interfaces/IMultilingualState.html":{"ref":"interfaces/IMultilingualState.html","tf":0.047619047619047616},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.010050251256281407},"interfaces/ISampleState.html":{"ref":"interfaces/ISampleState.html","tf":0.043478260869565216},"interfaces/IWindow.html":{"ref":"interfaces/IWindow.html","tf":0.029411764705882353},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.022988505747126436},"interfaces/StateServiceInterface.html":{"ref":"interfaces/StateServiceInterface.html","tf":0.03389830508474576},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.004662004662004662},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.016260162601626018},"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.015384615384615385}}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.03225806451612903},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.04},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.047619047619047616},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.043478260869565216},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.03896103896103896},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.031007751937984496},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.04},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.034482758620689655}},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.019230769230769232},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.008695652173913044},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.012987012987012988},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.011494252873563218}},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.02}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"_":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.019230769230769232}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.03557312252964427},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.012987012987012988},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.014336917562724014},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.004291845493562232},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.013245033112582781},"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.028169014084507043},"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.046511627906976744},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.015254237288135594},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.019230769230769232},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.03305785123966942},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.016666666666666666},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.010526315789473684},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.02040816326530612},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.046511627906976744},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"classes/Board.html":{"ref":"classes/Board.html","tf":0.016042780748663103},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.007751937984496124},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.006666666666666667}}}}}}},"u":{"docs":{},"z":{"docs":{},"z":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.016042780748663103},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.019417475728155338},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.005722460658082976},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797},"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.021739130434782608}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05063291139240506},"modules.html":{"ref":"modules.html","tf":0.02702702702702703},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":5.072916666666667}}}}}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.03125},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.020833333333333332},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}}}}}}}}},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":5.005722460658083},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.008264462809917356},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.006622516556291391},"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":5.021739130434782},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},".":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}}}}},"i":{"docs":{},"s":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.008264462809917356},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.013245033112582781}}}}}}}}}}}}}},"{":{"docs":{},"{":{"docs":{},"'":{"docs":{},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"2":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474}}},"docs":{}}}}}}}}}}}}}}}},"\\":{"docs":{},"'":{"docs":{},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"2":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474}}},"docs":{}}}}}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}}}}}}}}}}}}}}}},"d":{"docs":{},"b":{"docs":{"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.021739130434782608}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.008583690987124463},"injectables/PuzzleStateService.html":{"ref":"injectables/PuzzleStateService.html","tf":5.0476190476190474},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}},"c":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.03529411764705882},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.008658008658008658},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.021505376344086023},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.04878048780487805},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.06666666666666667},"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.125},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.057692307692307696},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.016666666666666666},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.031578947368421054},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.05913978494623656},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.015503875968992248},"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.13186813186813187},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.04310344827586207},"classes/Board.html":{"ref":"classes/Board.html","tf":0.08021390374331551},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.010471204188481676},"classes/Config.html":{"ref":"classes/Config.html","tf":0.13090909090909092},"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.05813953488372093},"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":0.05454545454545454},"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.05555555555555555},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.011764705882352941},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.011764705882352941},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.009433962264150943},"classes/Row.html":{"ref":"classes/Row.html","tf":0.13076923076923078},"classes/Square.html":{"ref":"classes/Square.html","tf":0.136986301369863},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.12244897959183673},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.11538461538461539},"classes/WindowMockFrench.html":{"ref":"classes/WindowMockFrench.html","tf":0.07272727272727272},"classes/WindowMockNoLanguage.html":{"ref":"classes/WindowMockNoLanguage.html","tf":0.07272727272727272},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.06557377049180328},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.023255813953488372},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.03278688524590164},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.031914893617021274},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.06030150753768844},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.02}}}}}},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}},"l":{"docs":{},"l":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.010101010101010102},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.014184397163120567}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.010101010101010102},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.014184397163120567}}}}}}}}},"s":{"docs":{},"h":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.010101010101010102},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.014184397163120567}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.010101010101010102},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.014184397163120567}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.005221932114882507}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"t":{"docs":{},"x":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.005221932114882507},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.018691588785046728},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.017543859649122806},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.020833333333333332},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.019801980198019802},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.02}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.007905138339920948},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.008658008658008658},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.007168458781362007},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.01859799713876967},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.01545253863134658},"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.014084507042253521},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.017421602787456445},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.013333333333333334},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.015254237288135594},"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.041666666666666664},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.01652892561983471},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.025252525252525252},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.028846153846153848},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.015665796344647518},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.010526315789473684},"injectables/PuzzleStateService.html":{"ref":"injectables/PuzzleStateService.html","tf":0.023809523809523808},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.016129032258064516},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.02},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.030612244897959183},"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.02197802197802198},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.008620689655172414},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.01652892561983471},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.019867549668874173},"classes/Board.html":{"ref":"classes/Board.html","tf":0.0053475935828877},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.013513513513513514},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.010752688172043012},"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.011627906976744186},"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.018518518518518517},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.02608695652173913},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715},"classes/Row.html":{"ref":"classes/Row.html","tf":0.007692307692307693},"classes/Square.html":{"ref":"classes/Square.html","tf":0.00684931506849315},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.025510204081632654},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.04824561403508772},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.019230769230769232},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.03546099290780142},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":0.054945054945054944},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.013333333333333334},"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.03571428571428571},"interfaces/IWindow.html":{"ref":"interfaces/IWindow.html","tf":0.029411764705882353},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.03263403263403263},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.016260162601626018}}}}}},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.008771929824561403}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.019762845849802372}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.006968641114982578}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.006968641114982578},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.014545454545454545},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}}}}}}}}},"t":{"docs":{},"h":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.02610966057441253},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.018867924528301886}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.005221932114882507},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}}}}}}}}}}}}}}}},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.04712041884816754},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.047058823529411764},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.047058823529411764},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.020618556701030927}}}}}}},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}},"s":{"docs":{},"s":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}},"e":{"docs":{},"r":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.02040816326530612}}}},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.02040816326530612}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.009324009324009324}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.004662004662004662}}}}}}}}}}}}}}},"o":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.008771929824561403}},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"p":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.018867924528301886}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.009433962264150943}}}}}}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.010471204188481676},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.005154639175257732},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797},"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.028169014084507043},"classes/Config.html":{"ref":"classes/Config.html","tf":0.02181818181818182},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.01639344262295082},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.01507537688442211}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797},"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":5.028169014084507},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.056338028169014086}}}}}}},"_":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.014545454545454545},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}}}}}}}}}}}}}},"y":{"docs":{"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.008658008658008658},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.01545253863134658},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.027777777777777776}}},"c":{"docs":{},"e":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}},"u":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.024390243902439025}}}}},"z":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.006622516556291391}}}},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}},"n":{"docs":{},"g":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.013157894736842105}}}}},"e":{"docs":{},"p":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.005084745762711864}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.011764705882352941}}}}},"x":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.005221932114882507}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"t":{"docs":{},"x":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.005221932114882507},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.016042780748663103},"overview.html":{"ref":"overview.html","tf":0.02531645569620253},"license.html":{"ref":"license.html","tf":0.02040816326530612},"modules.html":{"ref":"modules.html","tf":0.05405405405405406},"modules/AnalyticsModule.html":{"ref":"modules/AnalyticsModule.html","tf":0.06896551724137931},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.018691588785046728},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.017543859649122806},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.020833333333333332},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.019801980198019802},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.024390243902439025},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.008547008547008548},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.007905138339920948},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.011764705882352941},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.008658008658008658},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.007168458781362007},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.019417475728155338},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594},"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.028169014084507043},"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.015503875968992248},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.006968641114982578},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.02666666666666667},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576},"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.016666666666666666},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.01652892561983471},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.010101010101010102},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.009615384615384616},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.005221932114882507},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.01652892561983471},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.011111111111111112},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.021052631578947368},"injectables/PuzzleStateService.html":{"ref":"injectables/PuzzleStateService.html","tf":0.047619047619047616},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.010752688172043012},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.02},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.013605442176870748},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.015503875968992248},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.02040816326530612},"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.02197802197802198},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.008620689655172414},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.01652892561983471},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.013245033112582781},"classes/Board.html":{"ref":"classes/Board.html","tf":0.0106951871657754},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.010471204188481676},"classes/Config.html":{"ref":"classes/Config.html","tf":0.007272727272727273},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.02702702702702703},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.021505376344086023},"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.023255813953488372},"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":0.03636363636363636},"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.037037037037037035},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.011764705882352941},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.011764705882352941},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.023809523809523808},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.017391304347826087},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.025974025974025976},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.009433962264150943},"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.021739130434782608},"classes/Row.html":{"ref":"classes/Row.html","tf":0.015384615384615385},"classes/Square.html":{"ref":"classes/Square.html","tf":0.0136986301369863},"classes/TranslateLoaderMock.html":{"ref":"classes/TranslateLoaderMock.html","tf":0.13333333333333333},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.01020408163265306},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.008771929824561403},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.019230769230769232},"classes/WindowMockFrench.html":{"ref":"classes/WindowMockFrench.html","tf":0.03636363636363636},"classes/WindowMockNoLanguage.html":{"ref":"classes/WindowMockNoLanguage.html","tf":0.03636363636363636},"interfaces/ActionsServiceInterface.html":{"ref":"interfaces/ActionsServiceInterface.html","tf":0.03389830508474576},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.014184397163120567},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.01092896174863388},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.015503875968992248},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.01092896174863388},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.010638297872340425},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.010452961672473868},"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":0.02197802197802198},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.02},"interfaces/ILang.html":{"ref":"interfaces/ILang.html","tf":0.05555555555555555},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.010309278350515464},"interfaces/IMultilingualState.html":{"ref":"interfaces/IMultilingualState.html","tf":0.047619047619047616},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.010050251256281407},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.013333333333333334},"interfaces/ISampleState.html":{"ref":"interfaces/ISampleState.html","tf":0.043478260869565216},"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.023809523809523808},"interfaces/IWindow.html":{"ref":"interfaces/IWindow.html","tf":0.029411764705882353},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.022988505747126436},"interfaces/ModelInterface.html":{"ref":"interfaces/ModelInterface.html","tf":0.08},"interfaces/StateServiceInterface.html":{"ref":"interfaces/StateServiceInterface.html","tf":0.03389830508474576},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.004662004662004662},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.016260162601626018},"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.015384615384615385},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.015625},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.07692307692307693},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.05555555555555555},"coverage.html":{"ref":"coverage.html","tf":0.0047169811320754715}}}}},"e":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.012658227848101266},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.010416666666666666},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"classes/Config.html":{"ref":"classes/Config.html","tf":0.01818181818181818},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.01092896174863388},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.010050251256281407}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.010526315789473684}}}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.017543859649122806},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.017094017094017096},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.015810276679841896},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.012987012987012988},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.007168458781362007},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.030042918454935622},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.03090507726269316},"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.015503875968992248},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.017421602787456445},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.03389830508474576},"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.08333333333333333},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.03305785123966942},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.08080808080808081},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.0673076923076923},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.033942558746736295},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.01652892561983471},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.021052631578947368},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.026881720430107527},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.06},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.013605442176870748},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.04081632653061224},"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.04395604395604396},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.008620689655172414},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.03305785123966942},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.033112582781456956},"classes/Board.html":{"ref":"classes/Board.html","tf":0.016042780748663103},"classes/Config.html":{"ref":"classes/Config.html","tf":0.06181818181818182},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.05405405405405406},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.043010752688172046},"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.023255813953488372},"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":0.03636363636363636},"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.037037037037037035},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.03571428571428571},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.034782608695652174},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.025974025974025976},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.018867924528301886},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.05612244897959184},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.05263157894736842},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.038461538461538464},"classes/WindowMockFrench.html":{"ref":"classes/WindowMockFrench.html","tf":0.03636363636363636},"classes/WindowMockNoLanguage.html":{"ref":"classes/WindowMockNoLanguage.html","tf":0.03636363636363636},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.0425531914893617},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.04918032786885246},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.015503875968992248},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.01092896174863388},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.024390243902439025},"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":0.054945054945054944},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01},"interfaces/IMultilingualState.html":{"ref":"interfaces/IMultilingualState.html","tf":0.023809523809523808},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.04522613065326633},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.03333333333333333},"interfaces/ISampleState.html":{"ref":"interfaces/ISampleState.html","tf":0.021739130434782608},"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.03571428571428571},"interfaces/IWindow.html":{"ref":"interfaces/IWindow.html","tf":0.029411764705882353},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.022988505747126436},"interfaces/ModelInterface.html":{"ref":"interfaces/ModelInterface.html","tf":0.04},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.02564102564102564},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.032520325203252036},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.09859154929577464}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"_":{"docs":{},"u":{"docs":{},"i":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.007751937984496124},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.006666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374}}}},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.0070921985815602835},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.008130081300813009}}}}}},"i":{"docs":{"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.027777777777777776}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.02040816326530612},"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.023809523809523808}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.02040816326530612},"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.023809523809523808}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.015706806282722512},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.011764705882352941},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.011764705882352941},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.04878048780487805},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.010309278350515464},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.03125},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.02127659574468085},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.038461538461538464}},"e":{"docs":{},"r":{"docs":{},"'":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.015625}}}}}}}},"x":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.011627906976744186},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"3":{"docs":{"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.011627906976744186}}},"5":{"docs":{"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.023255813953488372}}},"7":{"docs":{"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.011627906976744186}}},"docs":{}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.01020408163265306}},"(":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.01020408163265306}}}}}}}}}}}}}}}},"u":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.010752688172043012},"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":0.01818181818181818},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.058823529411764705},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.010309278350515464}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.010752688172043012},"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":0.01818181818181818},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.010416666666666666},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01}}}},"u":{"docs":{},"t":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.006968641114982578},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}},"e":{"docs":{},"r":{"docs":{"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.05913978494623656},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.023255813953488372},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.02}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.020833333333333332},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.024390243902439025},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.017094017094017096},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.008547008547008548}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.021645021645021644}},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.025974025974025976},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":5.010752688172043},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.007751937984496124},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.006666666666666667},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":5.02},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}}}}}}}}}}}}},"w":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.025423728813559324},"classes/Board.html":{"ref":"classes/Board.html","tf":0.0053475935828877},"classes/Row.html":{"ref":"classes/Row.html","tf":5.015384615384615},"classes/Square.html":{"ref":"classes/Square.html","tf":0.04794520547945205},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288},"classes/Square.html":{"ref":"classes/Square.html","tf":0.00684931506849315}}}}}}},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/Board.html":{"ref":"classes/Board.html","tf":0.026737967914438502}}}}}}}}},"x":{"docs":{},"j":{"docs":{},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.008264462809917356},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.006622516556291391}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"/":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.007751937984496124},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.007751937984496124},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288},"injectables/PuzzleStateService.html":{"ref":"injectables/PuzzleStateService.html","tf":0.023809523809523808},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124},"interfaces/StateServiceInterface.html":{"ref":"interfaces/StateServiceInterface.html","tf":0.01694915254237288}}}}}}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"v":{"docs":{"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.018518518518518517}}}}}}}},"o":{"docs":{},"f":{"docs":{"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.00510204081632653}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.015503875968992248},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.010526315789473684},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.015503875968992248},"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.018518518518518517},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.00510204081632653},"interfaces/ActionsServiceInterface.html":{"ref":"interfaces/ActionsServiceInterface.html","tf":0.03389830508474576},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"interfaces/IMultilingualState.html":{"ref":"interfaces/IMultilingualState.html","tf":0.023809523809523808},"interfaces/ISampleState.html":{"ref":"interfaces/ISampleState.html","tf":0.021739130434782608},"interfaces/StateServiceInterface.html":{"ref":"interfaces/StateServiceInterface.html","tf":0.01694915254237288}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.012195121951219513},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.007168458781362007}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.01}},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"modules/AnalyticsModule.html":{"ref":"modules/AnalyticsModule.html","tf":0.034482758620689655},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.010416666666666666},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01}}}}}}},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.014084507042253521}}}}}}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374}}}}}}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.007751937984496124},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.0070921985815602835},"interfaces/StateServiceInterface.html":{"ref":"interfaces/StateServiceInterface.html","tf":0.01694915254237288}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/ActionsServiceInterface.html":{"ref":"interfaces/ActionsServiceInterface.html","tf":0.01694915254237288},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.0070921985815602835},"interfaces/StateServiceInterface.html":{"ref":"interfaces/StateServiceInterface.html","tf":0.01694915254237288},"coverage.html":{"ref":"coverage.html","tf":0.007075471698113208}},"s":{"docs":{},":":{"1":{"0":{"docs":{"interfaces/ActionsServiceInterface.html":{"ref":"interfaces/ActionsServiceInterface.html","tf":0.01694915254237288},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.0070921985815602835}}},"1":{"docs":{"interfaces/StateServiceInterface.html":{"ref":"interfaces/StateServiceInterface.html","tf":0.01694915254237288}}},"docs":{}},"4":{"docs":{"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.0070921985815602835}}},"5":{"docs":{"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.0070921985815602835}}},"6":{"docs":{"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.0070921985815602835}}},"7":{"docs":{"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.0070921985815602835},"interfaces/StateServiceInterface.html":{"ref":"interfaces/StateServiceInterface.html","tf":0.01694915254237288}}},"8":{"docs":{"interfaces/ActionsServiceInterface.html":{"ref":"interfaces/ActionsServiceInterface.html","tf":0.01694915254237288},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.0070921985815602835}}},"9":{"docs":{"interfaces/ActionsServiceInterface.html":{"ref":"interfaces/ActionsServiceInterface.html","tf":0.01694915254237288},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.0070921985815602835},"interfaces/StateServiceInterface.html":{"ref":"interfaces/StateServiceInterface.html","tf":0.01694915254237288}}},"docs":{}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"interfaces/ISampleState.html":{"ref":"interfaces/ISampleState.html","tf":0.021739130434782608}},"o":{"docs":{},"r":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.043478260869565216},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.06470588235294118},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.047619047619047616},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.03942652329749104},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.10679611650485436},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.015736766809728183},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.024282560706401765},"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.028169014084507043},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"b":{"docs":{},"y":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.015625}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0078125}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.015625}},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0078125}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.015625}},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0078125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.010452961672473868},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}},"e":{"docs":{},"d":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036}}}}}}}}}}}}}}}},"t":{"docs":{"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.015503875968992248},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124},"classes/Board.html":{"ref":"classes/Board.html","tf":0.0053475935828877}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.005722460658082976}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.02040816326530612},"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.023809523809523808}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.02040816326530612},"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.023809523809523808}}}}}}}}}},"u":{"docs":{},"p":{"docs":{"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.018518518518518517}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.01020408163265306}},"(":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.01020408163265306}}}}}}}}}}}}}}}}}}},"q":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.010169491525423728},"classes/Row.html":{"ref":"classes/Row.html","tf":0.046153846153846156}},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576},"classes/Board.html":{"ref":"classes/Board.html","tf":0.0374331550802139},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.008771929824561403}},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}}}}}}}}}}}}}},"e":{"docs":{"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.010471204188481676},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.007751937984496124},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.005154639175257732},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.006666666666666667}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.024390243902439025},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.007751937984496124},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124}},"d":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.10126582278481013},"modules.html":{"ref":"modules.html","tf":0.02702702702702703},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.056074766355140186},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.1188118811881188},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":5.048780487804878},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.02}}}}}}},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01}}}}}}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.036585365853658534},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.036585365853658534},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.02040816326530612}}}}},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{},"x":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.011655011655011656}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.010471204188481676},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.011764705882352941},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.011764705882352941},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.020618556701030927}},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.008830022075055188}}}}}}}}}},"u":{"docs":{},"l":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.005221932114882507},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.005221932114882507}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.005221932114882507},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}},"i":{"docs":{},"f":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"interfaces/ISampleState.html":{"ref":"interfaces/ISampleState.html","tf":0.021739130434782608}},"i":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.024390243902439025}}}}}}},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.010752688172043012},"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":0.01818181818181818},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}}}}}}},"y":{"docs":{},"o":{"docs":{},"n":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.009324009324009324}},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.004662004662004662}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":3.354723707664884},"license.html":{"ref":"license.html","tf":3.333333333333333},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.027777777777777776}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.005722460658082976}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.013605442176870748}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.013605442176870748}},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.017543859649122806},"classes/Config.html":{"ref":"classes/Config.html","tf":0.04363636363636364},"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":0.01818181818181818},"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.018518518518518517},"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.13043478260869565},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.10526315789473684},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.06557377049180328},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.06030150753768844}}}},"e":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.024282560706401765},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.027874564459930314},"interfaces/ISampleState.html":{"ref":"interfaces/ISampleState.html","tf":0.021739130434782608},"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.03076923076923077}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/PuzzleStateService.html":{"ref":"injectables/PuzzleStateService.html","tf":0.023809523809523808},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"9":{"docs":{"injectables/PuzzleStateService.html":{"ref":"injectables/PuzzleStateService.html","tf":0.023809523809523808}}},"docs":{}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"interfaces/IMultilingualState.html":{"ref":"interfaces/IMultilingualState.html","tf":0.023809523809523808}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"interfaces/ISampleState.html":{"ref":"interfaces/ISampleState.html","tf":0.021739130434782608}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576},"injectables/PuzzleStateService.html":{"ref":"injectables/PuzzleStateService.html","tf":0.047619047619047616},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":5.015503875968992},"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.03076923076923077},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.006779661016949152},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.015503875968992248},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.0070921985815602835},"interfaces/StateServiceInterface.html":{"ref":"interfaces/StateServiceInterface.html","tf":5.033898305084746},"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.03076923076923077},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}}}}}}}}},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556}}}}}}}}},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.0070921985815602835}}}}},"e":{"docs":{},"v":{"docs":{"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.031007751937984496},"interfaces/StateServiceInterface.html":{"ref":"interfaces/StateServiceInterface.html","tf":0.06779661016949153}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.031007751937984496},"interfaces/StateServiceInterface.html":{"ref":"interfaces/StateServiceInterface.html","tf":0.06779661016949153}}}}}}}}}}}},"$":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.006968641114982578}},"s":{"docs":{},"t":{"docs":{"interfaces/IMultilingualState.html":{"ref":"interfaces/IMultilingualState.html","tf":0.023809523809523808},"interfaces/ISampleState.html":{"ref":"interfaces/ISampleState.html","tf":0.021739130434782608}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.008620689655172414},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}}}}}},"b":{"docs":{},"l":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}}}}},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.008547008547008548},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0234375}},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.008547008547008548},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":5.020408163265306},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"1":{"8":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051}}},"docs":{}},"2":{"2":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051}}},"6":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051}}},"docs":{}},"4":{"0":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051}}},"docs":{}},"5":{"2":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051}}},"9":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051}}},"docs":{}},"8":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051}}},"docs":{}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.10204081632653061},"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.11904761904761904},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.05555555555555555}}}}}}}},"e":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.021505376344086023},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.049586776859504134},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.03888888888888889},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.04081632653061224},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.010452961672473868}},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274}},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"y":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274}},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036}}}}}}}}}}}}}}}},"docs":{}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"z":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.006968641114982578}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.01282051282051282},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.010752688172043012},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.017167381974248927},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.03090507726269316},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.041811846689895474},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.011864406779661017},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.09090909090909091},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.014423076923076924},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.11488250652741515},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.026881720430107527},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.03},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.05426356589147287},"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.06593406593406594},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.05172413793103448},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.049586776859504134},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.039735099337748346},"classes/Board.html":{"ref":"classes/Board.html","tf":0.0106951871657754},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.06282722513089005},"classes/Config.html":{"ref":"classes/Config.html","tf":0.03272727272727273},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.08108108108108109},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.06451612903225806},"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.13953488372093023},"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.05555555555555555},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.07058823529411765},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.07058823529411765},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.008695652173913044},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.012987012987012988},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.10849056603773585},"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.06521739130434782},"classes/Square.html":{"ref":"classes/Square.html","tf":0.136986301369863},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.07653061224489796},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.057692307692307696},"classes/WindowMockFrench.html":{"ref":"classes/WindowMockFrench.html","tf":0.03636363636363636},"classes/WindowMockNoLanguage.html":{"ref":"classes/WindowMockNoLanguage.html","tf":0.03636363636363636},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.12056737588652482},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.060109289617486336},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.023255813953488372},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.0546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.06382978723404255},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"interfaces/ILang.html":{"ref":"interfaces/ILang.html","tf":0.16666666666666666},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.08247422680412371},"interfaces/IMultilingualState.html":{"ref":"interfaces/IMultilingualState.html","tf":0.07142857142857142},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.07537688442211055},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.03333333333333333},"interfaces/IWindow.html":{"ref":"interfaces/IWindow.html","tf":0.08823529411764706},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.034482758620689655},"interfaces/ModelInterface.html":{"ref":"interfaces/ModelInterface.html","tf":0.08},"interfaces/StateServiceInterface.html":{"ref":"interfaces/StateServiceInterface.html","tf":0.05084745762711865},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.03496503496503497},"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.15384615384615385},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0121580547112462}},"(":{"docs":{},"i":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}}}}}}}}}}}}}}},")":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.0070921985815602835}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"y":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715},"coverage.html":{"ref":"coverage.html","tf":0.0047169811320754715}},"s":{"docs":{},":":{"1":{"6":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533}}},"7":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533}}},"8":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533}}},"9":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533}}},"docs":{}},"2":{"1":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.005221932114882507}}},"4":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533}}},"9":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533}}},"docs":{}},"3":{"1":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533}}},"8":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533}}},"docs":{}},"4":{"8":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533}}},"docs":{}},"5":{"8":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533}}},"docs":{}},"6":{"0":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533}}},"2":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533}}},"docs":{}},"7":{"0":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533}}},"4":{"docs":{"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}}},"5":{"docs":{"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.009433962264150943}}},"6":{"docs":{"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}}},"docs":{}},"docs":{}}}}}}}}}}},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.007905138339920948},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.008658008658008658},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.007168458781362007},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.019417475728155338},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}},"b":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.005722460658082976},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.03305785123966942},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.026490066225165563}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.008264462809917356},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.006622516556291391}}}}}}}}}}}}}}}}}},"b":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556}}}}}},"e":{"docs":{},"q":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}}}}}},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"modules.html":{"ref":"modules.html","tf":0.10810810810810811},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"classes/Config.html":{"ref":"classes/Config.html","tf":0.007272727272727273},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.01092896174863388},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.010050251256281407}},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.014336917562724014}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.019230769230769232},"classes/WindowMockFrench.html":{"ref":"classes/WindowMockFrench.html","tf":0.03636363636363636},"classes/WindowMockNoLanguage.html":{"ref":"classes/WindowMockNoLanguage.html","tf":0.03636363636363636}},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356}}}}},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"t":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.010526315789473684}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/PuzzleStateService.html":{"ref":"injectables/PuzzleStateService.html","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.017421602787456445},"interfaces/ISampleState.html":{"ref":"interfaces/ISampleState.html","tf":0.021739130434782608}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.10126582278481013},"modules.html":{"ref":"modules.html","tf":0.02702702702702703},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":5.099009900990099},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.02564102564102564}}}}}}},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.019801980198019802},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":5.01360544217687},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/ISampleState.html":{"ref":"interfaces/ISampleState.html","tf":0.021739130434782608},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.027777777777777776}}}}},"o":{"docs":{},"f":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.09183673469387756}}}}}}},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"modules/AnalyticsModule.html":{"ref":"modules/AnalyticsModule.html","tf":0.034482758620689655},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.010416666666666666},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.012195121951219513},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797},"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.014084507042253521},"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.007751937984496124},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.013333333333333334},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288},"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.008333333333333333},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.010526315789473684},"injectables/PuzzleStateService.html":{"ref":"injectables/PuzzleStateService.html","tf":0.023809523809523808},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.01},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01020408163265306},"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.01098901098901099},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.008264462809917356},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.006622516556291391},"classes/Board.html":{"ref":"classes/Board.html","tf":0.0053475935828877},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.013513513513513514},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.010752688172043012},"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.011627906976744186},"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":0.01818181818181818},"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.018518518518518517},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.008695652173913044},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.012987012987012988},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715},"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.010869565217391304},"classes/Row.html":{"ref":"classes/Row.html","tf":0.007692307692307693},"classes/Square.html":{"ref":"classes/Square.html","tf":0.00684931506849315},"classes/TranslateLoaderMock.html":{"ref":"classes/TranslateLoaderMock.html","tf":0.06666666666666667},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.00510204081632653},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.009615384615384616},"classes/WindowMockFrench.html":{"ref":"classes/WindowMockFrench.html","tf":0.01818181818181818},"classes/WindowMockNoLanguage.html":{"ref":"classes/WindowMockNoLanguage.html","tf":0.01818181818181818},"interfaces/ActionsServiceInterface.html":{"ref":"interfaces/ActionsServiceInterface.html","tf":0.01694915254237288},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.0070921985815602835},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.007751937984496124},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":0.01098901098901099},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01},"interfaces/ILang.html":{"ref":"interfaces/ILang.html","tf":0.027777777777777776},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.005154639175257732},"interfaces/IMultilingualState.html":{"ref":"interfaces/IMultilingualState.html","tf":0.023809523809523808},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.006666666666666667},"interfaces/ISampleState.html":{"ref":"interfaces/ISampleState.html","tf":0.021739130434782608},"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.011904761904761904},"interfaces/IWindow.html":{"ref":"interfaces/IWindow.html","tf":0.014705882352941176},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.011494252873563218},"interfaces/ModelInterface.html":{"ref":"interfaces/ModelInterface.html","tf":0.04},"interfaces/StateServiceInterface.html":{"ref":"interfaces/StateServiceInterface.html","tf":0.01694915254237288},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.008130081300813009},"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.007692307692307693}}}}},"l":{"docs":{},"v":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.008830022075055188},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.027777777777777776}}}}},"v":{"docs":{},"g":{"docs":{"modules.html":{"ref":"modules.html","tf":0.10810810810810811}}}},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/AnalyticsModule.html":{"ref":"modules/AnalyticsModule.html","tf":0.034482758620689655}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213},"coverage.html":{"ref":"coverage.html","tf":0.009433962264150943}},"s":{"docs":{},":":{"1":{"0":{"docs":{"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}},"1":{"docs":{"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}},"5":{"docs":{"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694}}},"docs":{}},"2":{"2":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289}}},"docs":{}},"3":{"8":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289}}},"docs":{}},"4":{"8":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289}}},"docs":{}},"5":{"7":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289}}},"docs":{}},"6":{"8":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289}}},"docs":{}},"8":{"2":{"docs":{"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.008620689655172414}}},"4":{"docs":{"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207}}},"docs":{}},"9":{"1":{"docs":{"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207}}},"docs":{"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"1":{"5":{"docs":{"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01}}},"6":{"docs":{"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.014084507042253521},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"1":{"0":{"docs":{"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.014084507042253521}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.013333333333333334},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"1":{"0":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.02666666666666667}}},"docs":{}},"9":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.013333333333333334}}},"docs":{}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.008333333333333333},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"1":{"0":{"docs":{"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.008333333333333333}}},"1":{"docs":{"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.008333333333333333}}},"2":{"docs":{"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.008333333333333333}}},"3":{"docs":{"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.008333333333333333}}},"4":{"docs":{"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.008333333333333333}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0078125},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"1":{"1":{"docs":{"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356}}},"docs":{}},"6":{"docs":{"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356}}},"docs":{}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"1":{"0":{"docs":{"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308}}},"6":{"docs":{"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308}}},"docs":{}},"2":{"5":{"docs":{"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308}}},"docs":{}},"3":{"3":{"docs":{"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308}}},"docs":{}},"4":{"1":{"docs":{"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308}}},"8":{"docs":{"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308}}},"docs":{}},"docs":{}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.008695652173913044},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.012987012987012988},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.011494252873563218},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.027777777777777776},"coverage.html":{"ref":"coverage.html","tf":0.009433962264150943}},"s":{"docs":{},":":{"1":{"0":{"docs":{"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.011494252873563218}}},"4":{"docs":{"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.012987012987012988}}},"8":{"docs":{"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904}}},"docs":{}},"2":{"1":{"docs":{"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.008695652173913044}}},"5":{"docs":{"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.008695652173913044}}},"docs":{}},"3":{"2":{"docs":{"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.008695652173913044}}},"docs":{}},"9":{"docs":{"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.011494252873563218}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.03225806451612903},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.031007751937984496},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.02666666666666667},"coverage.html":{"ref":"coverage.html","tf":0.007075471698113208}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01020408163265306},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"1":{"0":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01020408163265306}}},"4":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01020408163265306}}},"9":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01020408163265306}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.01098901098901099},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"1":{"0":{"docs":{"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.01098901098901099}}},"1":{"docs":{"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.01098901098901099}}},"2":{"docs":{"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.01098901098901099}}},"3":{"docs":{"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.01098901098901099}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.04177545691906005},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.02358490566037736},"coverage.html":{"ref":"coverage.html","tf":0.0047169811320754715}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.04},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}},"n":{"docs":{},"g":{"2":{"docs":{"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.04054054054054054},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}},"docs":{}}},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.009615384615384616},"classes/WindowMockFrench.html":{"ref":"classes/WindowMockFrench.html","tf":0.01818181818181818},"classes/WindowMockNoLanguage.html":{"ref":"classes/WindowMockNoLanguage.html","tf":0.01818181818181818},"coverage.html":{"ref":"coverage.html","tf":0.007075471698113208}},"s":{"docs":{},":":{"1":{"0":{"docs":{"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.009615384615384616}}},"5":{"docs":{"classes/WindowMockFrench.html":{"ref":"classes/WindowMockFrench.html","tf":0.01818181818181818}}},"docs":{}},"2":{"2":{"docs":{"classes/WindowMockNoLanguage.html":{"ref":"classes/WindowMockNoLanguage.html","tf":0.01818181818181818}}},"docs":{"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.009615384615384616}}},"6":{"docs":{"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.009615384615384616}}},"7":{"docs":{"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.009615384615384616}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0078125}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0078125},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0078125}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704},"coverage.html":{"ref":"coverage.html","tf":0.007075471698113208}},"s":{"docs":{},":":{"1":{"0":{"docs":{"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}}},"1":{"docs":{"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}}},"2":{"docs":{"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}}},"7":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364}}},"docs":{}},"2":{"0":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364}}},"8":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364}}},"docs":{}},"3":{"6":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364}}},"9":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364}}},"docs":{}},"4":{"3":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364}}},"7":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364}}},"docs":{"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694}}},"5":{"1":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364}}},"5":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364}}},"docs":{"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694}}},"6":{"4":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364}}},"docs":{}},"7":{"4":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364}}},"docs":{}},"8":{"5":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364}}},"docs":{}},"9":{"docs":{"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}}},"docs":{}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0078125},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":0.01098901098901099},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"3":{"docs":{"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":0.01098901098901099}}},"4":{"docs":{"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":0.01098901098901099}}},"5":{"docs":{"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":0.01098901098901099}}},"6":{"docs":{"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":0.01098901098901099}}},"7":{"docs":{"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":0.01098901098901099}}},"docs":{}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/ILang.html":{"ref":"interfaces/ILang.html","tf":0.027777777777777776},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"3":{"docs":{"interfaces/ILang.html":{"ref":"interfaces/ILang.html","tf":0.027777777777777776}}},"4":{"docs":{"interfaces/ILang.html":{"ref":"interfaces/ILang.html","tf":0.027777777777777776}}},"docs":{}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.011904761904761904},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.027777777777777776},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"3":{"docs":{"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.011904761904761904}}},"4":{"docs":{"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.011904761904761904}}},"5":{"docs":{"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.011904761904761904}}},"docs":{}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/IWindow.html":{"ref":"interfaces/IWindow.html","tf":0.014705882352941176},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"3":{"docs":{"interfaces/IWindow.html":{"ref":"interfaces/IWindow.html","tf":0.014705882352941176}}},"4":{"docs":{"interfaces/IWindow.html":{"ref":"interfaces/IWindow.html","tf":0.014705882352941176}}},"5":{"docs":{"interfaces/IWindow.html":{"ref":"interfaces/IWindow.html","tf":0.014705882352941176}}},"6":{"docs":{"interfaces/IWindow.html":{"ref":"interfaces/IWindow.html","tf":0.014705882352941176}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"1":{"8":{"docs":{},"n":{"docs":{},"/":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0078125}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.021505376344086023},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"e":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"1":{"8":{"docs":{"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356}}},"docs":{}},"3":{"2":{"docs":{"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"3":{"1":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556}}},"4":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/IMultilingualState.html":{"ref":"interfaces/IMultilingualState.html","tf":0.023809523809523808},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0078125},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"4":{"docs":{"interfaces/IMultilingualState.html":{"ref":"interfaces/IMultilingualState.html","tf":0.023809523809523808}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.005154639175257732},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.038461538461538464},"coverage.html":{"ref":"coverage.html","tf":0.009433962264150943}},"s":{"docs":{},":":{"1":{"9":{"docs":{"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.005154639175257732}}},"docs":{}},"2":{"0":{"docs":{"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.005154639175257732}}},"1":{"docs":{"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.005154639175257732}}},"docs":{}},"3":{"8":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.010471204188481676}}},"docs":{}},"4":{"0":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838}}},"4":{"docs":{"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.011764705882352941}}},"6":{"docs":{"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705}}},"docs":{}},"5":{"0":{"docs":{"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.011764705882352941}}},"2":{"docs":{"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"/":{"docs":{},"n":{"docs":{},"g":{"2":{"docs":{"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.03225806451612903},"classes/TranslateLoaderMock.html":{"ref":"classes/TranslateLoaderMock.html","tf":0.06666666666666667},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.04591836734693878},"coverage.html":{"ref":"coverage.html","tf":0.007075471698113208}}},"docs":{}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0078125}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0078125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"p":{"docs":{},"u":{"docs":{},"z":{"docs":{},"z":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"p":{"docs":{},"u":{"docs":{},"z":{"docs":{},"z":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"/":{"docs":{},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.08461538461538462},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"1":{"1":{"1":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}},"9":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}},"docs":{}},"2":{"8":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}},"docs":{}},"3":{"5":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}},"docs":{}},"7":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}},"8":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}},"9":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594}}},"docs":{}},"2":{"7":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}},"docs":{}},"3":{"3":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}},"9":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}},"docs":{}},"5":{"7":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}},"docs":{}},"6":{"1":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}},"docs":{}},"8":{"0":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.008130081300813009},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"1":{"0":{"docs":{"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.008130081300813009}}},"1":{"docs":{"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.008130081300813009}}},"2":{"docs":{"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.008130081300813009}}},"3":{"docs":{"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.008130081300813009}}},"4":{"docs":{"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.008130081300813009}}},"docs":{}},"7":{"docs":{"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.008130081300813009}}},"8":{"docs":{"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.008130081300813009}}},"9":{"docs":{"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.008130081300813009}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.008264462809917356},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"1":{"4":{"docs":{"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.008264462809917356}}},"8":{"docs":{"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.008264462809917356}}},"docs":{}},"2":{"5":{"docs":{"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.008264462809917356}}},"9":{"docs":{"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.008264462809917356}}},"docs":{}},"8":{"docs":{"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.01652892561983471}}},"docs":{}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"p":{"docs":{},"u":{"docs":{},"z":{"docs":{},"z":{"docs":{},"l":{"docs":{"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.05434782608695652},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"1":{"1":{"6":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015}}},"docs":{}},"2":{"5":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015}}},"docs":{}},"9":{"5":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015}}},"docs":{}},"docs":{}},"2":{"1":{"1":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015}}},"docs":{}},"2":{"0":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015}}},"docs":{}},"4":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015}}},"docs":{}},"3":{"9":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015}}},"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015}}},"4":{"7":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015}}},"docs":{}},"7":{"1":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015}}},"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"interfaces/ActionsServiceInterface.html":{"ref":"interfaces/ActionsServiceInterface.html","tf":0.06779661016949153},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.007751937984496124},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"1":{"2":{"docs":{"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.007751937984496124}}},"4":{"docs":{"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.007751937984496124}}},"5":{"docs":{"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.007751937984496124}}},"8":{"docs":{"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.007751937984496124}}},"docs":{}},"2":{"6":{"docs":{"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.007751937984496124}}},"docs":{}},"3":{"8":{"docs":{"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.007751937984496124}}},"docs":{}},"docs":{}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.027777777777777776}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"/":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"1":{"2":{"3":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}},"docs":{}},"6":{"8":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}},"docs":{}},"7":{"6":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}},"docs":{}},"8":{"5":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}},"docs":{}},"9":{"3":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}},"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}},"docs":{}},"2":{"0":{"8":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}},"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}},"1":{"4":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}},"docs":{}},"2":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}},"3":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}},"4":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}},"docs":{}},"3":{"6":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}},"docs":{}},"4":{"0":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}},"6":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}},"docs":{}},"5":{"6":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}},"docs":{}},"6":{"9":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}},"docs":{}},"8":{"8":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}},"docs":{}},"docs":{}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/Board.html":{"ref":"classes/Board.html","tf":0.0053475935828877},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"1":{"4":{"docs":{"classes/Board.html":{"ref":"classes/Board.html","tf":0.0053475935828877}}},"7":{"docs":{"classes/Board.html":{"ref":"classes/Board.html","tf":0.0053475935828877}}},"8":{"docs":{"classes/Board.html":{"ref":"classes/Board.html","tf":0.0053475935828877}}},"9":{"docs":{"classes/Board.html":{"ref":"classes/Board.html","tf":0.0053475935828877}}},"docs":{}},"2":{"0":{"docs":{"classes/Board.html":{"ref":"classes/Board.html","tf":0.0053475935828877}}},"1":{"docs":{"classes/Board.html":{"ref":"classes/Board.html","tf":0.0053475935828877}}},"6":{"docs":{"classes/Board.html":{"ref":"classes/Board.html","tf":0.0053475935828877}}},"docs":{}},"6":{"docs":{"classes/Board.html":{"ref":"classes/Board.html","tf":0.0053475935828877}}},"8":{"docs":{"classes/Board.html":{"ref":"classes/Board.html","tf":0.0053475935828877}}},"docs":{}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/Row.html":{"ref":"classes/Row.html","tf":0.007692307692307693},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"1":{"0":{"docs":{"classes/Row.html":{"ref":"classes/Row.html","tf":0.007692307692307693}}},"1":{"docs":{"classes/Row.html":{"ref":"classes/Row.html","tf":0.007692307692307693}}},"docs":{}},"4":{"docs":{"classes/Row.html":{"ref":"classes/Row.html","tf":0.007692307692307693}}},"6":{"docs":{"classes/Row.html":{"ref":"classes/Row.html","tf":0.007692307692307693}}},"7":{"docs":{"classes/Row.html":{"ref":"classes/Row.html","tf":0.007692307692307693}}},"8":{"docs":{"classes/Row.html":{"ref":"classes/Row.html","tf":0.007692307692307693}}},"9":{"docs":{"classes/Row.html":{"ref":"classes/Row.html","tf":0.007692307692307693}}},"docs":{}}}}}}}}}}}}}},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/Square.html":{"ref":"classes/Square.html","tf":0.00684931506849315},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"1":{"0":{"docs":{"classes/Square.html":{"ref":"classes/Square.html","tf":0.00684931506849315}}},"1":{"docs":{"classes/Square.html":{"ref":"classes/Square.html","tf":0.00684931506849315}}},"docs":{}},"3":{"docs":{"classes/Square.html":{"ref":"classes/Square.html","tf":0.00684931506849315}}},"5":{"docs":{"classes/Square.html":{"ref":"classes/Square.html","tf":0.00684931506849315}}},"6":{"docs":{"classes/Square.html":{"ref":"classes/Square.html","tf":0.00684931506849315}}},"7":{"docs":{"classes/Square.html":{"ref":"classes/Square.html","tf":0.00684931506849315}}},"8":{"docs":{"classes/Square.html":{"ref":"classes/Square.html","tf":0.00684931506849315}}},"9":{"docs":{"classes/Square.html":{"ref":"classes/Square.html","tf":0.00684931506849315}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.006622516556291391},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"1":{"5":{"docs":{"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.006622516556291391}}},"9":{"docs":{"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.006622516556291391}}},"docs":{}},"2":{"6":{"docs":{"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.006622516556291391}}},"docs":{}},"3":{"0":{"docs":{"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.006622516556291391}}},"6":{"docs":{"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.006622516556291391}}},"docs":{}},"9":{"docs":{"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.013245033112582781}}},"docs":{}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.04040404040404041},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.05813953488372093},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.05673758865248227},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/StateServiceInterface.html":{"ref":"interfaces/StateServiceInterface.html","tf":0.06779661016949153},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"1":{"2":{"docs":{"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124}}},"4":{"docs":{"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124}}},"5":{"docs":{"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.015503875968992248}}},"7":{"docs":{"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124}}},"docs":{}},"2":{"7":{"docs":{"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/ModelInterface.html":{"ref":"interfaces/ModelInterface.html","tf":0.04},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"3":{"docs":{"interfaces/ModelInterface.html":{"ref":"interfaces/ModelInterface.html","tf":0.04}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.042105263157894736},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/ISampleState.html":{"ref":"interfaces/ISampleState.html","tf":0.021739130434782608},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0078125},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"4":{"docs":{"interfaces/ISampleState.html":{"ref":"interfaces/ISampleState.html","tf":0.021739130434782608}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"2":{"0":{"docs":{"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374}}},"docs":{}},"3":{"1":{"docs":{"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374}}},"8":{"docs":{"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0078125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"/":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.012195121951219513},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"/":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"/":{"docs":{},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"k":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":0.03636363636363636},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.018518518518518517},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"9":{"docs":{"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.018518518518518517}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"r":{"docs":{},"x":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0078125},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"4":{"8":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}},"9":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"/":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"/":{"docs":{},"n":{"docs":{},"g":{"2":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.046620046620046623},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}},"docs":{}}}}}}}}}}}}},"e":{"2":{"docs":{},"e":{"docs":{},"/":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0078125},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}}}}}}}}}}}},"docs":{}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"/":{"docs":{},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"1":{"4":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474}}},"5":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474}}},"6":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474}}},"docs":{}},"2":{"1":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474}}},"2":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474}}},"docs":{}},"3":{"0":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474}}},"9":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474}}},"docs":{}},"4":{"6":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474}}},"docs":{}},"5":{"5":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"2":{"0":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705}}},"2":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705}}},"3":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"/":{"docs":{},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"1":{"5":{"docs":{"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329}}},"6":{"docs":{"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329}}},"7":{"docs":{"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.008658008658008658}}},"9":{"docs":{"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329}}},"docs":{}},"2":{"2":{"docs":{"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329}}},"docs":{}},"3":{"2":{"docs":{"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329}}},"docs":{}},"4":{"1":{"docs":{"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"z":{"docs":{},"z":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"p":{"docs":{},"u":{"docs":{},"z":{"docs":{},"z":{"docs":{},"l":{"docs":{"injectables/PuzzleStateService.html":{"ref":"injectables/PuzzleStateService.html","tf":0.047619047619047616},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"1":{"0":{"6":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}},"docs":{}},"1":{"4":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}},"docs":{}},"3":{"4":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}},"docs":{}},"4":{"1":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}},"5":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}},"docs":{}},"5":{"3":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}},"docs":{}},"6":{"3":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}},"8":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}},"docs":{}},"8":{"2":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}},"docs":{}},"docs":{}},"2":{"0":{"7":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}},"docs":{}},"5":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}},"6":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}},"7":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}},"8":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}},"9":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}},"docs":{}},"3":{"0":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}},"1":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}}},"docs":{}},"5":{"9":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}},"docs":{}},"6":{"4":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}},"8":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}},"docs":{}},"8":{"1":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}},"8":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}},"docs":{}},"9":{"3":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0078125},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"k":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}}}}}}}}}}}}}},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.018691588785046728},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.017543859649122806},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.020833333333333332},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.019801980198019802},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.02}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.010416666666666666},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.012195121951219513}}}}}},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}}}},"d":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.03162055335968379},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.047058823529411764},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.03463203463203463},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.021505376344086023},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.07766990291262135},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.011444921316165951},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.013245033112582781}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356}},"e":{"docs":{},"r":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.007168458781362007}},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.007168458781362007}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.007168458781362007}}}}}},"t":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"2":{"0":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036}}},"1":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.007168458781362007}}},"docs":{}},"4":{"2":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036}}},"docs":{}},"5":{"6":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374}}}}}}}}},"a":{"docs":{},"p":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.008771929824561403}},"(":{"docs":{},"a":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015}}}}}}},".":{"1":{"8":{"docs":{},"n":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036}}}},"docs":{}},"docs":{},"i":{"1":{"8":{"docs":{},"n":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036}}}}}}},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.10157367668097282},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.05423728813559322},"classes/Board.html":{"ref":"classes/Board.html","tf":0.06951871657754011},"classes/Row.html":{"ref":"classes/Row.html","tf":0.13076923076923078},"classes/Square.html":{"ref":"classes/Square.html","tf":5.013698630136986},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288},"classes/Board.html":{"ref":"classes/Board.html","tf":0.0053475935828877},"classes/Row.html":{"ref":"classes/Row.html","tf":0.007692307692307693}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}},"o":{"docs":{},"l":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}},"i":{"docs":{},"d":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"(":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}}}}}}}}}}},"t":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.005084745762711864}}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"classes/Board.html":{"ref":"classes/Board.html","tf":0.0053475935828877}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}}}}}}}}},"c":{"docs":{},"e":{"docs":{"interfaces/ISampleState.html":{"ref":"interfaces/ISampleState.html","tf":0.021739130434782608}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}}}}}}}},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.06060606060606061},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.05673758865248227},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.010452961672473868},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051}}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"k":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.014423076923076924},"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308}}}}}}}}}},"g":{"docs":{"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.008264462809917356},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.006622516556291391},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}},"k":{"docs":{},"e":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.010452961672473868},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.026737967914438502},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.007168458781362007},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.005221932114882507},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.01020408163265306},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.009615384615384616},"classes/WindowMockFrench.html":{"ref":"classes/WindowMockFrench.html","tf":0.01818181818181818},"classes/WindowMockNoLanguage.html":{"ref":"classes/WindowMockNoLanguage.html","tf":0.01818181818181818},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331}},".":{"docs":{},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}}}}}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":5.006993006993007},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0121580547112462},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.015625}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0078125}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0234375}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0234375}}}}}}}}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0234375}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.007905138339920948},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.011764705882352941},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.008658008658008658},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.007168458781362007},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.019417475728155338},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594}}}}}}}}}}},"r":{"docs":{},"m":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}},"o":{"docs":{},"w":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.010416666666666666},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.009900990099009901},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01}},"n":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}}},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.007905138339920948},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.008658008658008658}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.011857707509881422}}}}},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.005084745762711864}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.008583690987124463}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}}},"b":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{},"x":{"docs":{},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.004291845493562232}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.031007751937984496}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.015503875968992248}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"{":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.015503875968992248}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.015503875968992248}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"classes/Board.html":{"ref":"classes/Board.html","tf":0.016042780748663103}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Board.html":{"ref":"classes/Board.html","tf":0.0053475935828877}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.005084745762711864}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"`":{"docs":{},"$":{"docs":{},"{":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"n":{"docs":{"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.010526315789473684}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.007832898172323759},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.014150943396226415}},")":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.010443864229765013},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.018867924528301886}}}}}},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.005221932114882507},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.009433962264150943}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"'":{"docs":{},"p":{"docs":{},"z":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"classes/Board.html":{"ref":"classes/Board.html","tf":0.0053475935828877}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474}},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594}}}}}}}}}},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051}}}}}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.005221932114882507},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.009433962264150943}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.007905138339920948},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.008658008658008658}}}}}}}},"n":{"docs":{},"s":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.010014306151645207}}}}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}}}}}}}}},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.006622516556291391}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.008264462809917356},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.006622516556291391}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.010526315789473684},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{},"(":{"docs":{},"'":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.008264462809917356},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.006622516556291391}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.020202020202020204}}}}}}},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/Board.html":{"ref":"classes/Board.html","tf":0.0053475935828877}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036}},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036}}}}}}}},"o":{"docs":{},"g":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{},"(":{"docs":{},"`":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.019230769230769232}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"y":{"docs":{},".":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.007751937984496124},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.006666666666666667}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.010014306151645207}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.015503875968992248}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.007751937984496124}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.007168458781362007}},"e":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036}}}}}}}},"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.01652892561983471},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.013245033112582781}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.008264462809917356},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.006622516556291391}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"$":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.007168458781362007}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.011627906976744186}}}}}},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}},".":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}}}}}}}}}}},"[":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}},"docs":{}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"]":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}}}}}}}}}}},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}},"1":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}}},"2":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}}},"3":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}}},"4":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}}},"5":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}}},"6":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}}},"7":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.008830022075055188},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.010169491525423728}}}}}}}},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.010014306151645207}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.010452961672473868},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.01293103448275862},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.01639344262295082},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.015957446808510637}},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.010101010101010102}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"$":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"$":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"t":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.013245033112582781}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"'":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.01545253863134658}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.008695652173913044},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.012987012987012988},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"p":{"docs":{},"z":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.007751937984496124},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.006666666666666667}}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.007751937984496124},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.006666666666666667}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/Board.html":{"ref":"classes/Board.html","tf":0.0053475935828877}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}}}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.013605442176870748}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.007751937984496124}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.015503875968992248}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"s":{"2":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.005221932114882507},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.009433962264150943}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"'":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.019230769230769232},"classes/WindowMockFrench.html":{"ref":"classes/WindowMockFrench.html","tf":0.03636363636363636},"classes/WindowMockNoLanguage.html":{"ref":"classes/WindowMockNoLanguage.html","tf":0.03636363636363636}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.011627906976744186}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.008695652173913044},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.012987012987012988},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}},"n":{"docs":{},"k":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}}}}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.006968641114982578},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}}}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.011904761904761904}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.023715415019762844},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.01764705882352941},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.025974025974025976},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.014336917562724014},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.030042918454935622},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.024282560706401765},"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.014084507042253521},"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.03875968992248062},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.017421602787456445},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.04},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.02711864406779661},"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.041666666666666664},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.01652892561983471},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.030303030303030304},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.028846153846153848},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.031331592689295036},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.01652892561983471},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.011111111111111112},"injectables/NameListService.html":{"ref":"injectables/NameListService.html","tf":0.021052631578947368},"injectables/PuzzleStateService.html":{"ref":"injectables/PuzzleStateService.html","tf":0.023809523809523808},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.021505376344086023},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.02},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.02040816326530612},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.046511627906976744},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.030612244897959183},"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.04395604395604396},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.017241379310344827},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.024793388429752067},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.026490066225165563},"classes/Board.html":{"ref":"classes/Board.html","tf":0.0427807486631016},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.1099476439790576},"classes/Config.html":{"ref":"classes/Config.html","tf":0.01090909090909091},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.013513513513513514},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.010752688172043012},"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.03488372093023256},"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.018518518518518517},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.11176470588235295},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.11176470588235295},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.02608695652173913},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.012987012987012988},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.03773584905660377},"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.043478260869565216},"classes/Row.html":{"ref":"classes/Row.html","tf":0.05384615384615385},"classes/Square.html":{"ref":"classes/Square.html","tf":0.0547945205479452},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.03571428571428571},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.04824561403508772},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.038461538461538464},"interfaces/ActionsServiceInterface.html":{"ref":"interfaces/ActionsServiceInterface.html","tf":0.05084745762711865},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.0425531914893617},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.01092896174863388},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.03875968992248062},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.015957446808510637},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.010452961672473868},"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":0.054945054945054944},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.02},"interfaces/ILang.html":{"ref":"interfaces/ILang.html","tf":0.05555555555555555},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.1134020618556701},"interfaces/IMultilingualState.html":{"ref":"interfaces/IMultilingualState.html","tf":0.023809523809523808},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.020100502512562814},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.013333333333333334},"interfaces/ISampleState.html":{"ref":"interfaces/ISampleState.html","tf":0.021739130434782608},"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.03571428571428571},"interfaces/IWindow.html":{"ref":"interfaces/IWindow.html","tf":0.058823529411764705},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.022988505747126436},"interfaces/StateServiceInterface.html":{"ref":"interfaces/StateServiceInterface.html","tf":0.05084745762711865},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.04428904428904429},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.04878048780487805},"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.07692307692307693},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.015625},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.1337386018237082},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.11538461538461539},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}}}}}}}},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},"#":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.010471204188481676},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.005154639175257732}}}}}}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.007905138339920948},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.008658008658008658},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}}},"(":{"docs":{},"`":{"docs":{},"[":{"docs":{},"$":{"docs":{},"{":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.015706806282722512},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.01764705882352941},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.01764705882352941},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.015463917525773196}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0078125}}}}}}}},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}}}}},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{},"s":{"docs":{"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":6.666666666666666}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}},"o":{"docs":{},"l":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.005722460658082976},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.008830022075055188},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.008130081300813009}},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.007905138339920948},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.011764705882352941},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.008658008658008658},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.007168458781362007},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.019417475728155338},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":5.011037527593819},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.008130081300813009},"coverage.html":{"ref":"coverage.html","tf":0.0047169811320754715}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.005722460658082976}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.005722460658082976},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.024282560706401765},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.07317073170731707},"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":5.015384615384615},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.004291845493562232}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.008130081300813009}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.006622516556291391},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":5.016260162601626},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}}}}}}}},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.006622516556291391},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.032520325203252036}},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.03076923076923077}}}}},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"interfaces/ToolbarOptionsInterface.html":{"ref":"interfaces/ToolbarOptionsInterface.html","tf":0.03076923076923077}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"classes/Board.html":{"ref":"classes/Board.html","tf":0.0213903743315508},"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.046511627906976744},"interfaces/ModelInterface.html":{"ref":"interfaces/ModelInterface.html","tf":0.16}}}}},"d":{"docs":{},"o":{"docs":{"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.018518518518518517}}}},"p":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.010452961672473868},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.007905138339920948},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.03463203463203463},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.010752688172043012},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.05825242718446602},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.03333333333333333},"classes/TranslateLoaderMock.html":{"ref":"classes/TranslateLoaderMock.html","tf":0.06666666666666667},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"e":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.017543859649122806},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.008547008547008548}},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.008547008547008548},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.015625}}},"y":{"docs":{},"(":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0078125}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"classes/TranslateLoaderMock.html":{"ref":"classes/TranslateLoaderMock.html","tf":5.133333333333334},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.02631578947368421}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403}}}}}}}}}}}}}},"c":{"docs":{},"k":{"docs":{"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":5.010204081632653},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}},"}":{"docs":{},"}":{"docs":{},"e":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.007905138339920948}}}}},":":{"docs":{},"&":{"docs":{},"n":{"docs":{},"b":{"docs":{},"s":{"docs":{},"p":{"docs":{},";":{"docs":{},"&":{"docs":{},"n":{"docs":{},"b":{"docs":{},"s":{"docs":{},"p":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036}}}}}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.00510204081632653},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"1":{"0":{"docs":{"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.00510204081632653}}},"1":{"docs":{"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.00510204081632653}}},"6":{"docs":{"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.00510204081632653}}},"9":{"docs":{"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.00510204081632653}}},"docs":{}},"2":{"2":{"docs":{"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.00510204081632653}}},"5":{"docs":{"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.00510204081632653}}},"8":{"docs":{"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.00510204081632653}}},"docs":{}},"9":{"docs":{"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.00510204081632653}}},"docs":{}}}}}}}}}},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.022222222222222223}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.016260162601626018}},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.004415011037527594},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.016260162601626018}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506},"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.05434782608695652},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.031007751937984496},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.006666666666666667}}}}}},"c":{"docs":{},"k":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.041811846689895474},"injectables/MultilingualEffects.html":{"ref":"injectables/MultilingualEffects.html","tf":0.008264462809917356},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.04310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.04371584699453552},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.031914893617021274}},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.013937282229965157},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.017241379310344827},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.02185792349726776},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.015957446808510637}}}}}}}}},"u":{"docs":{},"e":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.017094017094017096},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.014084507042253521},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.010452961672473868},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.010101010101010102},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.0026109660574412533},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.010752688172043012},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.02},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.008264462809917356},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.013245033112582781},"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.02702702702702703},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.021505376344086023},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.009433962264150943},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.00510204081632653},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.013333333333333334},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.013986013986013986}}}},"e":{"docs":{},"e":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0058823529411764705},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.009708737864077669},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.002207505518763797}}},"a":{"docs":{},"t":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.006968641114982578}}}}},"i":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051},"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.013605442176870748}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.015810276679841896},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.017316017316017316},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.02097902097902098}}}}}}},"c":{"docs":{},"s":{"2":{"docs":{},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}},"docs":{}},"k":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.011655011655011656}},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.004662004662004662}}}}}}}}}},"t":{"docs":{},"l":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.020887728459530026},"classes/Config.html":{"ref":"classes/Config.html","tf":0.01818181818181818},"classes/ConfigMock.html":{"ref":"classes/ConfigMock.html","tf":0.02702702702702703},"classes/ConfigMockMultilang.html":{"ref":"classes/ConfigMockMultilang.html","tf":0.06451612903225806},"classes/DesktopConfig.html":{"ref":"classes/DesktopConfig.html","tf":0.09090909090909091},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.018867924528301886},"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.043478260869565216},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.0273224043715847},"interfaces/ILang.html":{"ref":"interfaces/ILang.html","tf":0.1111111111111111},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.02512562814070352}}}}},"n":{"docs":{},"s":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.005722460658082976}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.006968641114982578},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}}}}},"u":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.009615384615384616},"classes/WindowMockFrench.html":{"ref":"classes/WindowMockFrench.html","tf":0.01818181818181818},"classes/WindowMockNoLanguage.html":{"ref":"classes/WindowMockNoLanguage.html","tf":0.01818181818181818},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.203125}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.006779661016949152}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.020942408376963352},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.011764705882352941},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.011764705882352941},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.010309278350515464},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}},"q":{"docs":{},"u":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.010309278350515464},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}}}}},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.005154639175257732}}}}}}}}}},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877},"license.html":{"ref":"license.html","tf":0.02040816326530612},"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.024390243902439025},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.006968641114982578},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.022222222222222223},"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.013605442176870748},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.01020408163265306},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.017421602787456445},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00911854103343465}},"a":{"docs":{},"g":{"docs":{"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403}}}},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.021367521367521368},"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.008264462809917356}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.008547008547008548},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.011111111111111112}}}}}},"r":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.006968641114982578},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556}}}}}},"a":{"docs":{},"g":{"docs":{"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.009615384615384616},"classes/WindowMockFrench.html":{"ref":"classes/WindowMockFrench.html","tf":0.01818181818181818},"classes/WindowMockNoLanguage.html":{"ref":"classes/WindowMockNoLanguage.html","tf":0.01818181818181818}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.011904761904761904},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.027777777777777776}}}}}},"(":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.01020408163265306}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288},"classes/ChangeAction.html":{"ref":"classes/ChangeAction.html","tf":0.005235602094240838},"classes/LangChangedAction.html":{"ref":"classes/LangChangedAction.html","tf":0.0058823529411764705},"classes/LangUnsupportedAction.html":{"ref":"classes/LangUnsupportedAction.html","tf":0.0058823529411764705},"classes/Utils.html":{"ref":"classes/Utils.html","tf":5.008771929824562},"interfaces/IMultilingualActions.html":{"ref":"interfaces/IMultilingualActions.html","tf":0.010309278350515464},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.013333333333333334},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308}}}}}}}}},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}}}}}}}}}}}}}}},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"a":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.002861230329041488}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},".":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}},"1":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}}},"2":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}}},"3":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}}},"4":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}}},"5":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}}},"6":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576}}},"7":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"/":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474}}}}}}},"r":{"docs":{},"l":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.015665796344647518},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.005376344086021506},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.01},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.02358490566037736},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.006666666666666667}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.010443864229765013},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.026881720430107527},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.04},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.023255813953488372},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.03333333333333333}}}}}}},"p":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015}}}}}}},"v":{"6":{"docs":{},".":{"5":{"docs":{},".":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}},"docs":{}}},"docs":{}}},"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}}}}}},"i":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331}}},"e":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.016666666666666666}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.007905138339920948},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.008658008658008658}},"(":{"docs":{},"'":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.010752688172043012}}}}}}}}},"a":{"docs":{},"r":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.004273504273504274},"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.015810276679841896},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.023529411764705882},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.017316017316017316},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.014336917562724014},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.038834951456310676},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.00715307582260372},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.008830022075055188},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.001694915254237288},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.013054830287206266},"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.018518518518518517},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.02358490566037736}},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":6.669706180344478}}}}}}},"l":{"docs":{},"u":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.031007751937984496},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.003389830508474576},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.020202020202020204},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.007832898172323759},"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.015503875968992248},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.061224489795918366},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"classes/Board.html":{"ref":"classes/Board.html","tf":0.0213903743315508},"classes/ConfigRecord.html":{"ref":"classes/ConfigRecord.html","tf":0.08139534883720931},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.014150943396226415},"classes/PuzzleConfig.html":{"ref":"classes/PuzzleConfig.html","tf":0.03260869565217391},"classes/Square.html":{"ref":"classes/Square.html","tf":0.0410958904109589},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.02127659574468085},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.02127659574468085},"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.006968641114982578},"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.03571428571428571},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0060790273556231},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.1111111111111111}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.011857707509881422},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.012987012987012988},"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.007168458781362007},"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.02145922746781116},"components/ToolbarComponent.html":{"ref":"components/ToolbarComponent.html","tf":0.024282560706401765},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.020905923344947737},"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.011864406779661017},"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.08333333333333333},"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.010101010101010102},"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.033942558746736295},"injectables/RouterExtensions.html":{"ref":"injectables/RouterExtensions.html","tf":0.010752688172043012},"injectables/RouterExtensionsMock.html":{"ref":"injectables/RouterExtensionsMock.html","tf":0.02},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.04081632653061224},"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":0.04395604395604396},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.017241379310344827},"classes/BaseComponent.html":{"ref":"classes/BaseComponent.html","tf":0.04132231404958678},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.046357615894039736},"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0330188679245283},"classes/TranslateMock.html":{"ref":"classes/TranslateMock.html","tf":0.01020408163265306},"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.0043859649122807015},"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.038461538461538464},"classes/WindowMockFrench.html":{"ref":"classes/WindowMockFrench.html","tf":0.03636363636363636},"classes/WindowMockNoLanguage.html":{"ref":"classes/WindowMockNoLanguage.html","tf":0.03636363636363636},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.014184397163120567},"interfaces/ExtendedNavigationExtras.html":{"ref":"interfaces/ExtendedNavigationExtras.html","tf":0.007751937984496124},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.02185792349726776},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.015957446808510637},"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":0.10989010989010989},"interfaces/IRouterExtensions.html":{"ref":"interfaces/IRouterExtensions.html","tf":0.013333333333333334},"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.047619047619047616},"interfaces/IWindow.html":{"ref":"interfaces/IWindow.html","tf":0.058823529411764705},"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.037296037296037296},"interfaces/ToolbarInterface.html":{"ref":"interfaces/ToolbarInterface.html","tf":0.04878048780487805}}}}}},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.0106951871657754}}}}},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.02040816326530612}}}}}}},"n":{"docs":{"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.016666666666666666},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.014423076923076924},"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.008695652173913044},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.012987012987012988},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":0.02197802197802198},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.011494252873563218},"miscellaneous/enumerations.html":{"ref":"miscellaneous/enumerations.html","tf":0.027777777777777776}},"(":{"docs":{},"m":{"docs":{"injectables/ConsoleService.html":{"ref":"injectables/ConsoleService.html","tf":0.016666666666666666},"interfaces/IConsole.html":{"ref":"interfaces/IConsole.html","tf":0.02197802197802198}}},".":{"docs":{},".":{"docs":{},".":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.009615384615384616}}}}}}}}}}},"y":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474}}},"n":{"docs":{},"t":{"docs":{"injectables/SampleEffects.html":{"ref":"injectables/SampleEffects.html","tf":0.006802721088435374}}}}},"e":{"docs":{},"b":{"docs":{"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.014084507042253521},"classes/Config.html":{"ref":"classes/Config.html","tf":0.014545454545454545},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.02185792349726776},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.035175879396984924}},"d":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.08860759493670886},"modules.html":{"ref":"modules.html","tf":0.02702702702702703},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":5.038461538461538}}}}}}}},"l":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877}}}}},"i":{"docs":{},"n":{"docs":{"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.008547008547008548},"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.04225352112676056},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.016666666666666666},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0234375}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.0053475935828877},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.008547008547008548},"classes/ElectronEventService.html":{"ref":"classes/ElectronEventService.html","tf":0.018518518518518517},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.04},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0182370820668693}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.009345794392523364},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.008547008547008548},"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.056338028169014086},"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.022222222222222223},"injectables/WindowService.html":{"ref":"injectables/WindowService.html","tf":5.021978021978022},"interfaces/ICoreModuleOptions.html":{"ref":"interfaces/ICoreModuleOptions.html","tf":0.01},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.003952569169960474},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.004329004329004329}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":5.038461538461538},"classes/WindowMockFrench.html":{"ref":"classes/WindowMockFrench.html","tf":0.07272727272727272},"classes/WindowMockNoLanguage.html":{"ref":"classes/WindowMockNoLanguage.html","tf":0.07272727272727272},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.009615384615384616},"classes/WindowMockFrench.html":{"ref":"classes/WindowMockFrench.html","tf":5.036363636363636},"classes/WindowMockNoLanguage.html":{"ref":"classes/WindowMockNoLanguage.html","tf":0.01818181818181818},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}},"n":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/WindowMock.html":{"ref":"classes/WindowMock.html","tf":0.009615384615384616},"classes/WindowMockFrench.html":{"ref":"classes/WindowMockFrench.html","tf":0.01818181818181818},"classes/WindowMockNoLanguage.html":{"ref":"classes/WindowMockNoLanguage.html","tf":5.036363636363636},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}}}}}}}}}}}}}}}}}},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"directives/PlatformDirective.html":{"ref":"directives/PlatformDirective.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.030612244897959183}}}}}}}},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306},"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.006968641114982578},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/MultilingualService.html":{"ref":"injectables/MultilingualService.html","tf":0.005555555555555556}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/IStorage.html":{"ref":"interfaces/IStorage.html","tf":0.011904761904761904}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"components/LangSwitcherComponent.html":{"ref":"components/LangSwitcherComponent.html","tf":0.0035842293906810036},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308}}}}},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"interfaces/IAppState.html":{"ref":"interfaces/IAppState.html","tf":0.003484320557491289},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.006968641114982578},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.01652892561983471},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.017391304347826087}},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/ConsoleTarget.html":{"ref":"injectables/ConsoleTarget.html","tf":0.01652892561983471},"classes/LogTarget.html":{"ref":"classes/LogTarget.html","tf":0.011904761904761904},"classes/LogTargetBase.html":{"ref":"classes/LogTargetBase.html","tf":0.017391304347826087},"classes/LogTargetOptions.html":{"ref":"classes/LogTargetOptions.html","tf":0.012987012987012988},"interfaces/LogEvent.html":{"ref":"interfaces/LogEvent.html","tf":0.011494252873563218}}}}}}}}}}}}}}},"y":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.016042780748663103}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"overview.html":{"ref":"overview.html","tf":0.02531645569620253},"modules/CoreModule.html":{"ref":"modules/CoreModule.html","tf":0.018691588785046728},"modules/PuzzleModule.html":{"ref":"modules/PuzzleModule.html","tf":0.020833333333333332},"modules/SampleModule.html":{"ref":"modules/SampleModule.html","tf":0.019801980198019802},"modules/WebModule.html":{"ref":"modules/WebModule.html","tf":0.008547008547008548}}}}},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.010101010101010102},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.014184397163120567}},"(":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.010101010101010102},"interfaces/DatabaseServiceInterface.html":{"ref":"interfaces/DatabaseServiceInterface.html","tf":0.014184397163120567}}}}}}}}}}}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/MultilingualModule.html":{"ref":"modules/MultilingualModule.html","tf":0.008771929824561403}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01020408163265306}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"classes/Board.html":{"ref":"classes/Board.html","tf":0.0053475935828877}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"classes/Board.html":{"ref":"classes/Board.html","tf":0.0053475935828877}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{"classes/Config.html":{"ref":"classes/Config.html","tf":0.0036363636363636364},"interfaces/EnvConfig.html":{"ref":"interfaces/EnvConfig.html","tf":0.00546448087431694},"interfaces/IPlatforms.html":{"ref":"interfaces/IPlatforms.html","tf":0.005025125628140704}},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"[":{"docs":{},"t":{"docs":{"injectables/LocalStorageService.html":{"ref":"injectables/LocalStorageService.html","tf":0.005050505050505051}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01020408163265306}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.004662004662004662}}}}}}},"s":{"docs":{},"p":{"docs":{},"i":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331}}}}},"t":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00303951367781155},"coverage.html":{"ref":"coverage.html","tf":0.0023584905660377358}},"s":{"docs":{},":":{"1":{"1":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331}}},"2":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331}}},"3":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331}}},"4":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331}}},"5":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331}}},"6":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331}}},"7":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331}}},"8":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331}}},"9":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331}}},"docs":{}},"2":{"0":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331}}},"1":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331}}},"2":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331}}},"3":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331}}},"4":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331}}},"5":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331}}},"6":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331}}},"7":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331}}},"8":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331}}},"9":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.002331002331002331}}},"docs":{}},"docs":{}}}}}}}}}}}},"_":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"injectables/LogService.html":{"ref":"injectables/LogService.html","tf":0.004807692307692308},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.015810276679841896},"components/HomeComponent.html":{"ref":"components/HomeComponent.html","tf":0.017316017316017316}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{"components/AboutComponent.html":{"ref":"components/AboutComponent.html","tf":0.015810276679841896}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.031007751937984496}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.005722460658082976}}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/ActionsService.html":{"ref":"injectables/ActionsService.html","tf":0.031007751937984496}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.006779661016949152}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.004291845493562232}},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"_":{"docs":{},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.001430615164520744}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.006779661016949152}}}}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/PuzzleComponent.html":{"ref":"components/PuzzleComponent.html","tf":0.005722460658082976}}}}}}}}}}}}}}}}},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/AnalyticsService.html":{"ref":"injectables/AnalyticsService.html","tf":0.003484320557491289},"classes/Analytics.html":{"ref":"classes/Analytics.html","tf":0.004310344827586207},"interfaces/IAnalytics.html":{"ref":"interfaces/IAnalytics.html","tf":0.00546448087431694},"interfaces/IAnalyticsProperties.html":{"ref":"interfaces/IAnalyticsProperties.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/BoardService.html":{"ref":"injectables/BoardService.html","tf":0.006779661016949152}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.010443864229765013},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.0047169811320754715}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.031007751937984496}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/StateService.html":{"ref":"injectables/StateService.html","tf":0.031007751937984496}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"classes/Board.html":{"ref":"classes/Board.html","tf":0.0213903743315508}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.020887728459530026},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.018867924528301886}}},"y":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/MockLocationStrategy.html":{"ref":"injectables/MockLocationStrategy.html","tf":0.005221932114882507},"classes/MockPopStateEvent.html":{"ref":"classes/MockPopStateEvent.html","tf":0.009433962264150943}}}}}}}}}}}}}},"x":{"docs":{"classes/Utils.html":{"ref":"classes/Utils.html","tf":0.013157894736842105}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.013986013986013986}}}}}}}}},"i":{"docs":{},"t":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.009324009324009324}},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"interfaces/TestApi.html":{"ref":"interfaces/TestApi.html","tf":0.004662004662004662}}}}}}}}}},"length":6183},"corpusTokens":["0","0/1","0/10","0/11","0/12","0/13","0/15","0/19","0/2","0/20","0/25","0/3","0/4","0/5","0/6","0/7","0/8","0/9","1","1/16","1/3","1/4","10480","16","19","2","2.0","2/5","2017","23","25","256","26","3.0","3.10.3","33","4","40","48","5/6","6","64","66","7","8","83","_","_.extend(properti","_action","_actionobserv","_actionservic","_board","_boardobserv","_boardservic","_boardservice.init(_gamestateservic","_calcheight","_emptysquar","_gamestateservic","_page","_squar","_stateev","_stateeventobserv","_subject","a.isempti","about'},{'nam","about.component.css","about.component.html","about_content_1","aboutcompon","aboutrout","abov","abstract","accident","action","action(valu","action.payload","action_provid","actionchang","actionobserv","actionobserver(valu","actionreduc","actions.enum","actions/index","actions/multilingual.act","actionsenum","actionsenum.play","actionsenum.solv","actionsenum.start","actionservic","actionsservic","actionsserviceinterfac","actiontyp","actiontypes.chang","actiontypes.lang_chang","actiontypes.lang_unsupport","actual","actual_compon","add","addit","adequ","ae","aftereach","agent","agent.indexof('electron","agent.indexof('nativescript","aka","alert","alert(msg","alia","alias","allow","alreadi","analyt","analytics/index","analytics_provid","analyticsmodul","analyticsservic","and/or","android","angular","angular/common","angular/cor","angular/core/test","angular/form","angular/http","angular/platform","angular/rout","angulartics2","angulartics2modul","angulartics2module.forroot","angulartics2seg","anim","anoth","anyth","api","app","app'},{'nam","app.component.html","app/components/app.rout","app/components/index","app/modules/analytics/index","app/modules/core/index","app/modules/core/services/index","app/modules/i18n/index","app/modules/ngrx/index","app/modules/sample/index","app_base_href","app_compon","app_stor","appcompon","appli","applic","appreduc","appreducer(st","appservic","arg","args.deltax","args.stat","args[key","aris","array","assets/data.json","assets/i18n","associ","async","async(fn","authent","author","auto","automat","avail","availablelanguag","b","back","backrouterlink","backtext","backtext?:str","backtitletext","base","base.compon","basecompon","baseservic","basic","be","be(fn","beforeeach","beforeeach(fn","below","bg","bind","board","board(8","board(board","board(model.rowcount","board.model","board.squar","board.tostr","boardchang","boardservic","boilerpl","boolean","bootstrap","bradi","break","brows","browser","browser/platform","browsermodul","browserwindow","build","build.dev","build.doc","build.prodrun","bulgarian","c","call","case","catch","categor","categori","caus","certain","chain","chang","change_languag","changeact","changeaction(userlang","changelang","changelang(","charg","check","claim","class","clear","clearhistori","clearstat","clearstate(id","clearsubscript","cleartimeout(this.tnsdelayedtask","cluster_coremodul","cluster_coremodule_import","cluster_puzzlemodul","cluster_puzzlemodule_import","cluster_samplemodul","cluster_samplemodule_export","cluster_samplemodule_import","cluster_webmodul","cluster_webmodule_bootstrap","cluster_webmodule_import","code","coerc","col","colclass","colcount","combinelatest","combinereduc","combinereducers(reduc","combinereducers)(reduc","command","common/category.common","common/index","common/utils.common","commonmodul","compo","compodoc","compon","component_templ","components/index","compos","compose(frommultilingual.getlang","compose(fromsample.getnam","compose(storefreez","compris","con","condit","config","config.common.t","config.common.ts:2","config.common.ts:3","config.common.ts:4","config.common.ts:5","config.debug","config.debug.level_1","config.debug.level_2","config.debug.level_3","config.debug.level_4","config.debug[key","config.environment().env","config.get_supported_languag","config.is_desktop","config.is_mobile_n","config.mock.t","config.mock.ts:2","config.mock.ts:6","config.pageclass","config.platform_target","config.platforms.desktop","config.platforms.mobile_hybrid","config.platforms.mobile_n","config.platforms.web","config.t","config.ts:6","configmock","configmockmultilang","configrecord","configur","configuredprovid","confirm","confirm(msg","connect","consol","console.debug","console.log('emptysquar","console.log('onsquarepan","console.log('onsquaretap","console.log('record","console.log(board.tostr","console.log(json.stringify(this.emptysquar","console.log(lang","console.log(tag","console.servic","consolelogmsg","consolelogmsg(tag","consolelogrecord","consolelogrecord(i","consolelogtarget","consolelogtarget(consoleservic","consoleservic","consoletarget","consoletarget(c","consoletarget(consoleservic","const","construct","constructor","constructor(@inject(analyticsservic","constructor(@opt","constructor(analyt","constructor(angulartics2","constructor(consol","constructor(databaseservic","constructor(el","constructor(id","constructor(index","constructor(injector","constructor(key","constructor(newurl","constructor(opt","constructor(payload","constructor(priv","constructor(protect","constructor(publ","constructor(rout","constructor(routerext","constructor(rowcount","constructor(stor","constructor(target","content","continu","contract","control","conveni","copi","copyright","core/index","core/services/storage.servic","core/services/window.servic","core/utils/typ","core_direct","core_provid","coremodul","coremodule.forroot","count","coverag","creat","createconsoletarget","createconsoletarget(level","criteria","cssclass","ctx","current","curv","custom_elements_schema","d","damag","databas","database/databas","database/loc","databaseservic","databaseservice.delete(id","databaseservice.exists(id","databaseservice.pull(id","databaseservice.push(options.id","databaseservice.zero('row","databaseserviceinterfac","db","dbfile","deal","debug","debug(...msg","debug(m","declar","decor","default","defaultlanguag","defin","delay","delet","delete(t","dep","depend","describ","descript","descriptor","desktop","desktopconfig","dev","dev_import","deve","develop","developmentreduc","developmentreducer(st","devmod","devmode(en","devtool","differ","direct","directives/index","discrimin","distribut","doc","document","document.titl","dom","don't","dont","dragoversquar","durat","dure","e","e(actu","e.detail.valu","e.target","e.target.valu","e2","each","easili","effect","effectsmodul","effectsmodule.run(multilingualeffect","effectsmodule.run(sampleeffect","el","electron","electron/index","electroneventservic","electroneventservice.on('changelang').subscribe((","element","elementref","emfil","emptysquar","emptysquare(valu","emptysquareindic","emptysquareindices.length","emptysquares.length","emptysquares[0","en","enabl","end","english","eni","ensur","entir","enum","enumer","env","envconfig","environ","err","error","error('coremodul","error('multilingualmodul","error('puzzlemodul","error('samplemodul","error(...err","error(m","es","etc","event","event.datatransfer.dropeffect","event.level","eventemitt","everyth","exampl","except","execut","exist","exists(t","exists(table:str","exp","expect","expect(actu","expectedseq","expectedsequ","expectedsubseq","expectedvalu","export","express","extend","extendednavigationextra","extensions.mock.t","extensions.mock.ts:10","extensions.mock.ts:14","extensions.mock.ts:18","extensions.service.t","extensions.service.ts:10","extensions.service.ts:20","extensions.service.ts:21","extensions.service.ts:22","extensions.service.ts:26","extensions.service.ts:28","extensions.service.ts:30","extensions.service.ts:34","extensions.service.ts:38","extensions.service.ts:8","extensions.service.ts:9","externalurl","extra","f","fail","fail(","failur","fakeasync","fakeasync(fn","fallback","fals","faq.html#!#what","fast","fdescrib","fiddletitl","file","fire","fit","fit(nam","flip","fn","folder","follow","formsmodul","forroot(configuredprovid","forward","forwardref","found","fr","free","freez","french","frommultilingu","frommultilingual.imultilingualst","frommultilingual.reduc","fromsampl","fromsample.isamplest","fromsample.reduc","frozen","function","furnish","g","game","gather","gener","generategamesequ","generategamesequence(min","generatesequ","generatesequence(min","generatesequentialsequ","generatesequentialsequence(min","get","get(key","get_http_providers_injector","get_http_providers_injector(additionalprovid","get_supported_languag","getbasehref","getitem","getitem(key","getlang","getlang(st","getlanguag","getmultilingualst","getmultilingualstate(st","getnam","getnamelistst","getnameliststate(st","getnames(st","getset","getsettings(group","gettransl","gettranslation(lang","give","global","good","google_play","grant","graph","group","group'","guarante","guide/content/ch5.html","h","handi","handl","handleerror","handleerrors(error","hashlocationstrategi","height","help","helper","here","herebi","higher","holder","home","home'},{'nam","home.component.css","home.component.html","homecompon","homerout","houseknecht","html","http","httpmodul","https://angular.io/docs/ts/latest/cookbook/ngmodul","https://docs.nativescript.org/api","https://drboolean.gitbooks.io/mostli","https://egghead.io/lessons/javascript","https://github.com/angulartics/angulartics2/blob/master/src/core/angulartics2.ts#l90","https://www.typescriptlang.org/docs/handbook/advanc","https://yarnpkg.com","i18n","i18n/index","i18n/multilingual.modul","ianalyt","ianalyticsproperti","iappstat","iconsol","icoremoduleopt","id","ideal","identifi","identify(properti","if(this.startdragsquar","ilang","immedi","immut","implement","impli","import","imultilingualact","imultilingualst","includ","includehash","includes(map(this.languag","index","info","info(...err","info(m","init","init(stateservic","initialst","inject","inject(languag","inject(languageviewhelp","inject(logtarget","inject(token","injectiontoken","injectiontoken('languag","injectiontoken('languageviewhelp","injector","inner","input","inspir","instal","instanc","integr","intellisens","interact","interfac","interfaces/iconsol","interfaces/istorag","interfaces/iwindow","interfaces/model.interfac","intern","internal).startswith","internal.substring(1","internalbasehref","internalpath","internaltitl","interpolateparam","io","iplatform","irouterextens","is_debug_mod","is_desktop","is_mobile_hybrid","is_mobile_n","is_web","isamplest","isback","isdev","isempti","iseven","iseven(x","islast","isn't","issolv","issquarepersist","issquarepersisted(id","istanbul","istoolbarpersist","istoolbarpersisted(id","istorag","isubscript","isvalid","isvalid(sequ","isvalidmov","isvalidmove(a","it(nam","item","itself","iwindow","jasmine.match","jasmine.spi","jasmine.t","jasmine.ts:11","jasmine.ts:12","jasmine.ts:13","jasmine.ts:14","jasmine.ts:15","jasmine.ts:16","jasmine.ts:17","jasmine.ts:18","jasmine.ts:19","jasmine.ts:20","jasmine.ts:21","jasmine.ts:22","jasmine.ts:23","jasmine.ts:24","jasmine.ts:25","jasmine.ts:26","jasmine.ts:27","jasmine.ts:28","jasmine.ts:29","json","json.pars","json.parse(localstorage[t","json.parse(valu","json.stringify(squar","json.stringify(this.expectedsequ","json.stringify(this.sequ","json.stringify(valu","karma","key","kind","l.titl","l104","label","lang","lang_chang","lang_unsupport","langchangedact","langchangedaction.payload","langswitchercompon","languag","languageprovid","languageviewhelp","langunsupportedact","lazi","learn","left","legend","level","level_1","level_2","level_3","level_4","liabil","liabl","lib","licens","limit","linear","link","list","list.servic","list.service.t","list.service.ts:16","list.service.ts:19","list.service.ts:26","liter","livereload","load","loader","loader.mock.t","localstorag","localstorage.getitem","localstorage.hasownproperty(t","localstorage.removeitem","localstorage.removeitem(t","localstorage.setitem","localstorage[t","localstorageservic","locat","locationstrategi","lodash","log","log(ev","log(m","log.debug(`config","log.target","logev","logevent(target","logger","logging/log.servic","loglevel","loglevel.debug","loglevel.error","loglevel.info","loglevel.warn","logservic","logtarget","logtargetbas","logtargetopt","m","main","maintain","mainwindow","make","manag","mani","manual","map","map(act","map(payload","map(r","mapcolclass","mapcolclass(valu","mapleveldimens","mapleveldimensions(level","match","math.abs(this.startdragsquare.col","max","maximum","mean","mention","menu","merchant","merg","messag","metadata","metareduc","method","millisecond","min","minloglevel","miscellan","mit","mobile_hybrid","mobile_n","mock","mocklocationstrategi","mockpopstateev","mockpopstateevent(this.path","mode","model","model.colcount","model.expectedsequ","model.expectedsequence.length","model.issolv","model.rowcount","model.sequ","model.sequence.length","model.tostr","modelinterfac","modifi","modul","module'","module.id","moduleid","modules/analytics/services/analytics.servic","modules/analytics/services/index","modules/core/index","modules/core/services/index","modules/core/utils/index","modules/puzzle/index","modulewithprovid","moment","more","move","msg","multi","multilang.mock.t","multilang.mock.ts:2","multilang.mock.ts:6","multilang_compon","multilang_provid","multilangservic","multilingu","multilingual.changeaction(lang","multilingual.langchangedaction(lang","multilingual.langunsupportedaction(lang","multilingualeffect","multilingualmodul","multilingualmodule.forroot","multilingualservic","mutat","n","name","namelist","namelist.categori","namelist.initact","namelist.initfailedact","namelist.initializedaction(nam","namelist.nameaddedaction(nam","namelistservic","nativescript","navbar","navbar'},{'nam","navbar.component.css","navbar.component.html","navbarcompon","navig","navigate(command","navigatebyurl","navigatebyurl(url","navigationextra","nb","need","new","newurl","nexturl","ng2","ng2jasmin","ngmodul","ngonchang","ngonchanges(chang","ngondestroy","ngoninit","ngrx","ngrx/core/add/operator/select","ngrx/core/compos","ngrx/effect","ngrx/index","ngrx/store","ngx","no_errors_schema","node","none","noninfring","notat","note","noth","notic","npm","null","number","obj","object","observ","observable.fromevent(window","observable.of('en","observable.of(key","observable.of(new","observer:ani","obtain","occur","oftype(multilingual.actiontypes.chang","oftype(namelist.actiontypes.add","oftype(namelist.actiontypes.init","on","on(nam","onaboutclick","onactionchang","onactionchange(act","onboardchang","onboardchange(board","onchang","ondestroy","onhorizontaldragend","onhorizontaldragend($ev","oninit","onlangchang","onpopst","onpopstate(fn","onsquareclick","onsquareclick($ev","onsquaredragend","onsquaredragend($ev","onsquaredragov","onsquaredragover($ev","onsquaredragstart","onsquaredragstart($ev","onsquarepan","onsquarepan(arg","onsquareswip","onsquareswipe(arg","onsquaretap","onsquaretap(arg","ontoggleclick","ontranslationchang","onverticaldragend","onverticaldragend($ev","onwindowres","onwindowresize(ev","open","oper","option","options.actionservic","options.interfac","options.interface.t","options.interface.ts:10","options.interface.ts:11","options.interface.ts:12","options.interface.ts:13","options.interface.ts:14","options.interface.ts:15","options.interface.ts:16","options.interface.ts:7","options.interface.ts:8","options.interface.ts:9","options.st","options.toggletext","options.toggletitl","organ","os","otherwis","out","output","overlay","overlay(upd","overrid","overview","packag","page","pageclass","pagetrack","pagetrack(path","paramet","parentmodul","parsesubsequ","parsesubsequence(sequ","particular","pass","path","path(includehash","payload","pend","pending(reason","per","permiss","permit","persist","persist(opt","person","pipe","place","platform","platform_target","platformclass","platformdirect","play","plu","po","pop","popstat","portion","power","prepareexternalurl","prepareexternalurl(intern","prerequisit","prevent","privat","prod","product","productionreduc","productionreducer(st","project'","promis","promise.all(_.map(this.target","promise.resolv","promise.resolve(tru","properti","protect","protractor","provid","provideconsoletarget","provideconsoletarget(loglevel","public","publish","pull","pull(tabl","purpos","push","push(tabl","pushstat","pushstate(ctx","puzzl","puzzle'},{'nam","puzzle.component.css","puzzle.component.html","puzzle.db","puzzle_compon","puzzle_provid","puzzlecompon","puzzleconfig","puzzleconfig.isdev","puzzleconfig.titl","puzzlemodul","puzzlerout","puzzlestateservic","puzzle{{'about_content_2","puzzle{{\\'about_content_2","pz","queri","query.length","rais","rang","react","readi","readonli","reason","record.model.t","record.model.ts:3","record.model.ts:5","record.model.ts:7","reduc","reducer'","reducer(st","redux","reference/interfaces/_ui_frame_.navigationtransition.html","reloadlang","reloadlang(lang","rememb","removeitem","removeitem(key","render","renderer.setelementclass(el.nativeel","rep","replacest","replacestate(ctx","report","repres","repx","requir","res.json","reset","restoresquareopt","restoresquareoptions(id","restoretoolbaropt","restoretoolbaroptions(id","restoretoolbarst","restoretoolbarstate(id","restrict","result","return","right","root","rout","router","routerext","routerextens","routerextensionsmock","routermodul","routermodule.forroot(rout","row","row.expectedseq","row.expectedseq.length","row.model","row.seq","row.seq.foreach((num","row.seq.length","rowcount","ru","run","runtim","russian","rxjs/add/observable/fromev","rxjs/add/observable/of","rxjs/add/operator/map","rxjs/add/operator/shar","rxjs/observ","rxjs/observable/combinelatest","rxjs/subscript","s","s.18n","s.i18n","s.i18n).subscribe((st","s.i18n.lang","s.row","s.sampl","sampl","sample/index","sample_provid","sampleeffect","sampleinitialst","samplemodul","save","schema","scratch","sd","secur","see","segment","segmentedbar","segmentedbaritem","select","selectdropdownbynumb","selectdropdownbynumber(selector","selectdropdownbyvalu","selectdropdownbyvalue(selector","selector","selectrandomdropdownreturntext","selectrandomdropdownreturntext(selector","sell","seq","sequenc","sequence(model","serve.compodoc","serve.coverag","servic","service.interfac","service.interface.t","service.interface.ts:10","service.interface.ts:11","service.interface.ts:4","service.interface.ts:5","service.interface.ts:6","service.interface.ts:7","service.interface.ts:8","service.interface.ts:9","services/index","services/multilingual.servic","services/nam","services/window.servic","set","setdefaultlang","setdefaultlang(lang","setitem","setitem(key","settimeout","setup","shall","share","shared/index","shared_compon","shared_modul","sharedmodul","shell","shiftx","shiftx(left","shorthand","simpl","simplechang","simul","simulatepopst","simulatepopstate(url","singl","singleton","site","skipself","slice","slide","slide(left","small","softwar","solv","sourc","spanish","spec","specif","specifi","spyon","spyon(object","squar","square.cssclass","square.isempti","square.model","square.row","squareclass","squarecol","squareid","squareindices.filter((indic","squareindices.length","squareindices.push(index","squareisempti","squarerow","squares(valu","squares.filter((squar","squares.push(squareopt","squarest","squarevalu","src/client/app/components/about/about.component.t","src/client/app/components/about/about.component.ts:14","src/client/app/components/about/about.component.ts:15","src/client/app/components/about/about.component.ts:16","src/client/app/components/about/about.component.ts:21","src/client/app/components/about/about.component.ts:22","src/client/app/components/about/about.component.ts:30","src/client/app/components/about/about.component.ts:39","src/client/app/components/about/about.component.ts:46","src/client/app/components/about/about.component.ts:55","src/client/app/components/about/about.routes.t","src/client/app/components/app.component.t","src/client/app/components/app.component.ts:20","src/client/app/components/app.component.ts:22","src/client/app/components/app.component.ts:23","src/client/app/components/app.routes.t","src/client/app/components/home/home.component.t","src/client/app/components/home/home.component.ts:15","src/client/app/components/home/home.component.ts:16","src/client/app/components/home/home.component.ts:17","src/client/app/components/home/home.component.ts:19","src/client/app/components/home/home.component.ts:22","src/client/app/components/home/home.component.ts:32","src/client/app/components/home/home.component.ts:41","src/client/app/components/home/home.routes.t","src/client/app/components/index.t","src/client/app/components/puzzle/puzzl","src/client/app/components/puzzle/puzzle.component.t","src/client/app/components/puzzle/puzzle.component.ts:106","src/client/app/components/puzzle/puzzle.component.ts:114","src/client/app/components/puzzle/puzzle.component.ts:134","src/client/app/components/puzzle/puzzle.component.ts:141","src/client/app/components/puzzle/puzzle.component.ts:145","src/client/app/components/puzzle/puzzle.component.ts:153","src/client/app/components/puzzle/puzzle.component.ts:163","src/client/app/components/puzzle/puzzle.component.ts:168","src/client/app/components/puzzle/puzzle.component.ts:182","src/client/app/components/puzzle/puzzle.component.ts:207","src/client/app/components/puzzle/puzzle.component.ts:25","src/client/app/components/puzzle/puzzle.component.ts:26","src/client/app/components/puzzle/puzzle.component.ts:27","src/client/app/components/puzzle/puzzle.component.ts:28","src/client/app/components/puzzle/puzzle.component.ts:29","src/client/app/components/puzzle/puzzle.component.ts:30","src/client/app/components/puzzle/puzzle.component.ts:31","src/client/app/components/puzzle/puzzle.component.ts:59","src/client/app/components/puzzle/puzzle.component.ts:64","src/client/app/components/puzzle/puzzle.component.ts:68","src/client/app/components/puzzle/puzzle.component.ts:81","src/client/app/components/puzzle/puzzle.component.ts:88","src/client/app/components/puzzle/puzzle.component.ts:93","src/client/app/components/puzzle/puzzle.routes.t","src/client/app/modules/analytics/analytics.module.t","src/client/app/modules/analytics/services/analytics.service.t","src/client/app/modules/analytics/services/analytics.service.ts:10","src/client/app/modules/analytics/services/analytics.service.ts:11","src/client/app/modules/analytics/services/analytics.service.ts:15","src/client/app/modules/analytics/services/analytics.service.ts:22","src/client/app/modules/analytics/services/analytics.service.ts:38","src/client/app/modules/analytics/services/analytics.service.ts:48","src/client/app/modules/analytics/services/analytics.service.ts:57","src/client/app/modules/analytics/services/analytics.service.ts:68","src/client/app/modules/analytics/services/analytics.service.ts:82","src/client/app/modules/analytics/services/analytics.service.ts:84","src/client/app/modules/analytics/services/analytics.service.ts:9","src/client/app/modules/analytics/services/analytics.service.ts:91","src/client/app/modules/analytics/services/index.t","src/client/app/modules/core/core.module.t","src/client/app/modules/core/core.module.ts:15","src/client/app/modules/core/core.module.ts:16","src/client/app/modules/core/directives/index.t","src/client/app/modules/core/directives/platform.directive.t","src/client/app/modules/core/directives/platform.directive.ts:10","src/client/app/modules/core/interfaces/iconsole.t","src/client/app/modules/core/interfaces/iconsole.ts:3","src/client/app/modules/core/interfaces/iconsole.ts:4","src/client/app/modules/core/interfaces/iconsole.ts:5","src/client/app/modules/core/interfaces/iconsole.ts:6","src/client/app/modules/core/interfaces/iconsole.ts:7","src/client/app/modules/core/interfaces/ilang.t","src/client/app/modules/core/interfaces/ilang.ts:3","src/client/app/modules/core/interfaces/ilang.ts:4","src/client/app/modules/core/interfaces/istorage.t","src/client/app/modules/core/interfaces/istorage.ts:3","src/client/app/modules/core/interfaces/istorage.ts:4","src/client/app/modules/core/interfaces/istorage.ts:5","src/client/app/modules/core/interfaces/iwindow.t","src/client/app/modules/core/interfaces/iwindow.ts:3","src/client/app/modules/core/interfaces/iwindow.ts:4","src/client/app/modules/core/interfaces/iwindow.ts:5","src/client/app/modules/core/interfaces/iwindow.ts:6","src/client/app/modules/core/services/app.service.t","src/client/app/modules/core/services/app.service.ts:10","src/client/app/modules/core/services/app.service.ts:9","src/client/app/modules/core/services/console.service.t","src/client/app/modules/core/services/console.service.ts:10","src/client/app/modules/core/services/console.service.ts:11","src/client/app/modules/core/services/console.service.ts:12","src/client/app/modules/core/services/console.service.ts:13","src/client/app/modules/core/services/console.service.ts:14","src/client/app/modules/core/services/index.t","src/client/app/modules/core/services/logging/console.target.t","src/client/app/modules/core/services/logging/console.target.ts:11","src/client/app/modules/core/services/logging/console.target.ts:6","src/client/app/modules/core/services/logging/log.service.t","src/client/app/modules/core/services/logging/log.service.ts:10","src/client/app/modules/core/services/logging/log.service.ts:16","src/client/app/modules/core/services/logging/log.service.ts:25","src/client/app/modules/core/services/logging/log.service.ts:33","src/client/app/modules/core/services/logging/log.service.ts:41","src/client/app/modules/core/services/logging/log.service.ts:48","src/client/app/modules/core/services/logging/log.target.t","src/client/app/modules/core/services/logging/log.target.ts:10","src/client/app/modules/core/services/logging/log.target.ts:14","src/client/app/modules/core/services/logging/log.target.ts:18","src/client/app/modules/core/services/logging/log.target.ts:21","src/client/app/modules/core/services/logging/log.target.ts:25","src/client/app/modules/core/services/logging/log.target.ts:32","src/client/app/modules/core/services/logging/log.target.ts:9","src/client/app/modules/core/services/rout","src/client/app/modules/core/services/storage.service.t","src/client/app/modules/core/services/storage.service.ts:10","src/client/app/modules/core/services/storage.service.ts:14","src/client/app/modules/core/services/storage.service.ts:19","src/client/app/modules/core/services/window.service.t","src/client/app/modules/core/services/window.service.ts:10","src/client/app/modules/core/services/window.service.ts:11","src/client/app/modules/core/services/window.service.ts:12","src/client/app/modules/core/services/window.service.ts:13","src/client/app/modules/core/testing/mocks/mock","src/client/app/modules/core/testing/mocks/ng2","src/client/app/modules/core/testing/mocks/rout","src/client/app/modules/core/testing/mocks/window.mock.t","src/client/app/modules/core/testing/mocks/window.mock.ts:10","src/client/app/modules/core/testing/mocks/window.mock.ts:15","src/client/app/modules/core/testing/mocks/window.mock.ts:2","src/client/app/modules/core/testing/mocks/window.mock.ts:22","src/client/app/modules/core/testing/mocks/window.mock.ts:6","src/client/app/modules/core/testing/mocks/window.mock.ts:7","src/client/app/modules/core/testing/providers/core.t","src/client/app/modules/core/testing/providers/http.t","src/client/app/modules/core/testing/providers/router.t","src/client/app/modules/core/utils/config.t","src/client/app/modules/core/utils/config.ts:10","src/client/app/modules/core/utils/config.ts:11","src/client/app/modules/core/utils/config.ts:12","src/client/app/modules/core/utils/config.ts:17","src/client/app/modules/core/utils/config.ts:20","src/client/app/modules/core/utils/config.ts:28","src/client/app/modules/core/utils/config.ts:36","src/client/app/modules/core/utils/config.ts:39","src/client/app/modules/core/utils/config.ts:4","src/client/app/modules/core/utils/config.ts:43","src/client/app/modules/core/utils/config.ts:47","src/client/app/modules/core/utils/config.ts:5","src/client/app/modules/core/utils/config.ts:51","src/client/app/modules/core/utils/config.ts:55","src/client/app/modules/core/utils/config.ts:64","src/client/app/modules/core/utils/config.ts:74","src/client/app/modules/core/utils/config.ts:85","src/client/app/modules/core/utils/config.ts:9","src/client/app/modules/core/utils/type.t","src/client/app/modules/electron/services/event.service.t","src/client/app/modules/electron/services/event.service.ts:9","src/client/app/modules/electron/utils/desktop","src/client/app/modules/i18n/actions/multilingual.action.t","src/client/app/modules/i18n/actions/multilingual.action.ts:19","src/client/app/modules/i18n/actions/multilingual.action.ts:20","src/client/app/modules/i18n/actions/multilingual.action.ts:21","src/client/app/modules/i18n/actions/multilingual.action.ts:38","src/client/app/modules/i18n/actions/multilingual.action.ts:40","src/client/app/modules/i18n/actions/multilingual.action.ts:44","src/client/app/modules/i18n/actions/multilingual.action.ts:46","src/client/app/modules/i18n/actions/multilingual.action.ts:50","src/client/app/modules/i18n/actions/multilingual.action.ts:52","src/client/app/modules/i18n/common/category.common.t","src/client/app/modules/i18n/components/index.t","src/client/app/modules/i18n/components/lang","src/client/app/modules/i18n/effects/multilingual.effect.t","src/client/app/modules/i18n/effects/multilingual.effect.ts:18","src/client/app/modules/i18n/effects/multilingual.effect.ts:32","src/client/app/modules/i18n/multilingual.module.t","src/client/app/modules/i18n/reducers/multilingual.reducer.t","src/client/app/modules/i18n/services/index.t","src/client/app/modules/i18n/services/multilingual.service.t","src/client/app/modules/i18n/services/multilingual.service.ts:31","src/client/app/modules/i18n/services/multilingual.service.ts:34","src/client/app/modules/i18n/states/multilingual.state.t","src/client/app/modules/i18n/states/multilingual.state.ts:4","src/client/app/modules/i18n/testing/index.t","src/client/app/modules/i18n/testing/mocks/ng2","src/client/app/modules/ngrx/index.t","src/client/app/modules/ngrx/index.ts:48","src/client/app/modules/ngrx/index.ts:49","src/client/app/modules/puzzle/actions/act","src/client/app/modules/puzzle/actions/actions.enum.t","src/client/app/modules/puzzle/actions/actions.service.t","src/client/app/modules/puzzle/actions/actions.service.ts:12","src/client/app/modules/puzzle/actions/actions.service.ts:14","src/client/app/modules/puzzle/actions/actions.service.ts:15","src/client/app/modules/puzzle/actions/actions.service.ts:18","src/client/app/modules/puzzle/actions/actions.service.ts:26","src/client/app/modules/puzzle/actions/actions.service.ts:38","src/client/app/modules/puzzle/actions/index.t","src/client/app/modules/puzzle/common/puzzl","src/client/app/modules/puzzle/common/utils.common.t","src/client/app/modules/puzzle/common/utils.common.ts:116","src/client/app/modules/puzzle/common/utils.common.ts:125","src/client/app/modules/puzzle/common/utils.common.ts:195","src/client/app/modules/puzzle/common/utils.common.ts:211","src/client/app/modules/puzzle/common/utils.common.ts:220","src/client/app/modules/puzzle/common/utils.common.ts:24","src/client/app/modules/puzzle/common/utils.common.ts:3","src/client/app/modules/puzzle/common/utils.common.ts:39","src/client/app/modules/puzzle/common/utils.common.ts:47","src/client/app/modules/puzzle/common/utils.common.ts:7","src/client/app/modules/puzzle/common/utils.common.ts:71","src/client/app/modules/puzzle/components/base.component.t","src/client/app/modules/puzzle/components/base.component.ts:14","src/client/app/modules/puzzle/components/base.component.ts:18","src/client/app/modules/puzzle/components/base.component.ts:25","src/client/app/modules/puzzle/components/base.component.ts:29","src/client/app/modules/puzzle/components/base.component.ts:8","src/client/app/modules/puzzle/components/index.t","src/client/app/modules/puzzle/components/toolbar/toolbar","src/client/app/modules/puzzle/components/toolbar/toolbar.component.t","src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:111","src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:119","src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:128","src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:135","src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:17","src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:18","src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:19","src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:27","src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:33","src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:39","src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:57","src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:61","src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:80","src/client/app/modules/puzzle/components/toolbar/toolbar.interface.t","src/client/app/modules/puzzle/components/toolbar/toolbar.interface.ts:10","src/client/app/modules/puzzle/components/toolbar/toolbar.interface.ts:11","src/client/app/modules/puzzle/components/toolbar/toolbar.interface.ts:12","src/client/app/modules/puzzle/components/toolbar/toolbar.interface.ts:13","src/client/app/modules/puzzle/components/toolbar/toolbar.interface.ts:14","src/client/app/modules/puzzle/components/toolbar/toolbar.interface.ts:7","src/client/app/modules/puzzle/components/toolbar/toolbar.interface.ts:8","src/client/app/modules/puzzle/components/toolbar/toolbar.interface.ts:9","src/client/app/modules/puzzle/interfaces/model.interface.t","src/client/app/modules/puzzle/interfaces/model.interface.ts:3","src/client/app/modules/puzzle/puzzle.module.t","src/client/app/modules/puzzle/services/base.service.t","src/client/app/modules/puzzle/services/base.service.ts:15","src/client/app/modules/puzzle/services/base.service.ts:19","src/client/app/modules/puzzle/services/base.service.ts:26","src/client/app/modules/puzzle/services/base.service.ts:30","src/client/app/modules/puzzle/services/base.service.ts:36","src/client/app/modules/puzzle/services/base.service.ts:9","src/client/app/modules/puzzle/services/board/board.model.t","src/client/app/modules/puzzle/services/board/board.model.ts:14","src/client/app/modules/puzzle/services/board/board.model.ts:17","src/client/app/modules/puzzle/services/board/board.model.ts:18","src/client/app/modules/puzzle/services/board/board.model.ts:19","src/client/app/modules/puzzle/services/board/board.model.ts:20","src/client/app/modules/puzzle/services/board/board.model.ts:21","src/client/app/modules/puzzle/services/board/board.model.ts:26","src/client/app/modules/puzzle/services/board/board.model.ts:6","src/client/app/modules/puzzle/services/board/board.model.ts:8","src/client/app/modules/puzzle/services/board/board.service.t","src/client/app/modules/puzzle/services/board/board.service.ts:123","src/client/app/modules/puzzle/services/board/board.service.ts:168","src/client/app/modules/puzzle/services/board/board.service.ts:176","src/client/app/modules/puzzle/services/board/board.service.ts:185","src/client/app/modules/puzzle/services/board/board.service.ts:19","src/client/app/modules/puzzle/services/board/board.service.ts:193","src/client/app/modules/puzzle/services/board/board.service.ts:20","src/client/app/modules/puzzle/services/board/board.service.ts:208","src/client/app/modules/puzzle/services/board/board.service.ts:214","src/client/app/modules/puzzle/services/board/board.service.ts:22","src/client/app/modules/puzzle/services/board/board.service.ts:23","src/client/app/modules/puzzle/services/board/board.service.ts:24","src/client/app/modules/puzzle/services/board/board.service.ts:36","src/client/app/modules/puzzle/services/board/board.service.ts:40","src/client/app/modules/puzzle/services/board/board.service.ts:46","src/client/app/modules/puzzle/services/board/board.service.ts:56","src/client/app/modules/puzzle/services/board/board.service.ts:69","src/client/app/modules/puzzle/services/board/board.service.ts:88","src/client/app/modules/puzzle/services/board/row.model.t","src/client/app/modules/puzzle/services/board/row.model.ts:10","src/client/app/modules/puzzle/services/board/row.model.ts:11","src/client/app/modules/puzzle/services/board/row.model.ts:4","src/client/app/modules/puzzle/services/board/row.model.ts:6","src/client/app/modules/puzzle/services/board/row.model.ts:7","src/client/app/modules/puzzle/services/board/row.model.ts:8","src/client/app/modules/puzzle/services/board/row.model.ts:9","src/client/app/modules/puzzle/services/board/square.model.t","src/client/app/modules/puzzle/services/board/square.model.ts:10","src/client/app/modules/puzzle/services/board/square.model.ts:11","src/client/app/modules/puzzle/services/board/square.model.ts:3","src/client/app/modules/puzzle/services/board/square.model.ts:5","src/client/app/modules/puzzle/services/board/square.model.ts:6","src/client/app/modules/puzzle/services/board/square.model.ts:7","src/client/app/modules/puzzle/services/board/square.model.ts:8","src/client/app/modules/puzzle/services/board/square.model.ts:9","src/client/app/modules/puzzle/services/database/config","src/client/app/modules/puzzle/services/database/databas","src/client/app/modules/puzzle/services/database/loc","src/client/app/modules/puzzle/services/index.t","src/client/app/modules/puzzle/services/state/st","src/client/app/modules/puzzle/services/state/state.service.t","src/client/app/modules/puzzle/services/state/state.service.ts:12","src/client/app/modules/puzzle/services/state/state.service.ts:14","src/client/app/modules/puzzle/services/state/state.service.ts:15","src/client/app/modules/puzzle/services/state/state.service.ts:17","src/client/app/modules/puzzle/services/state/state.service.ts:27","src/client/app/modules/sample/effects/sample.effect.t","src/client/app/modules/sample/effects/sample.effect.ts:20","src/client/app/modules/sample/effects/sample.effect.ts:31","src/client/app/modules/sample/effects/sample.effect.ts:38","src/client/app/modules/sample/reducers/sample.reducer.t","src/client/app/modules/sample/sample.module.t","src/client/app/modules/sample/services/index.t","src/client/app/modules/sample/services/nam","src/client/app/modules/sample/states/sample.state.t","src/client/app/modules/sample/states/sample.state.ts:4","src/client/app/modules/shared/components/index.t","src/client/app/modules/shared/components/navbar/navbar.component.t","src/client/app/modules/shared/components/toolbar/toolbar.component.t","src/client/app/modules/shared/shared.module.t","src/client/app/modules/test/e2e/dropdowns.t","src/client/app/modules/test/index.t","src/client/app/modules/test/shorthand/ng2","src/client/main.desktop.t","src/client/system","src/client/web.module.t","stabl","standard","start","start.dev","startdragsquar","startup","startwith","startwith(new","state","state$.select(","state$.select(st","state.lang","state.nam","state.servic","state.service.t","state.service.ts:9","state/st","stateev","stateevent(valu","stateeventchang","statement","states/index","stateservic","stateservice.databaseservic","stateserviceinterfac","static","storag","storage.servic","storage.service.t","storage.service.ts:18","storage.service.ts:22","storage.service.ts:26","storage.service.ts:40","storage.service.ts:52","storage.service.ts:59","storage.service.ts:8","storagekey","storageservic","store","store.foreach((row","store.select(","store.take(1).subscribe((","storedevtoolsmodul","storedevtoolsmodule.instrumentonlywithextens","storefreez","storelogg","storemodul","storemodule.providestore(appreduc","strategy.t","strategy.ts:16","strategy.ts:17","strategy.ts:18","strategy.ts:19","strategy.ts:21","strategy.ts:24","strategy.ts:29","strategy.ts:31","strategy.ts:38","strategy.ts:48","strategy.ts:58","strategy.ts:60","strategy.ts:62","strategy.ts:70","strategy.ts:74","strategy.ts:75","strategy.ts:76","string","string(i","string(squareexpectedvalu","string):ani","styleurl","sub","subject","sublicens","subscrib","subscript","subscription.unsubscrib","subseq","substanti","super","super(analyt","super(databaseservic","super(opt","support","supportedlanguag","sure","svg","swap","swap(a","switch","switch(args.direct","switcher","switcher'},{'nam","switcher.component.css","switcher.component.html","switcher.component.t","switcher.component.ts:20","switcher.component.ts:21","switcher.component.ts:42","switcher.component.ts:56","switchmap","system","t","tabl","table.indexof(criteria","tables.foreach((table:str","tables.length","tables.push(t","tablesort(document.getelementbyid('coverag","tag","take","talk","target","target.log","templat","templateurl","term","test","test.watch","test_core_provid","test_core_providers(opt","test_http_provid","test_location_provid","test_multilingual_provid","testapi","therefor","think","this._act","this._actionobserv","this._board","this._board.tostr","this._boardobserv","this._boardobserver.next(board","this._boardservice.emptysquar","this._boardservice.persist(a","this._boardservice.persist(b","this._boardservice.shiftx(fals","this._boardservice.shiftx(tru","this._calcheight","this._emptysquar","this._gamestateservice.databaseservic","this._pag","this._squar","this._squares.length","this._stateev","this._stateeventobserv","this._stateeventobserver.next(valu","this._subject.emit(new","this._subject.subscribe({next","this.about","this.about.emit(thi","this.act","this.actionchang","this.actionobserv","this.actionobserver.next(valu","this.analytics.track(act","this.angulartics2.developermode(en","this.angulartics2.settings.developermod","this.board","this.board.squar","this.board.squares.foreach((squar","this.board.squares[emptysquareindices[0","this.board.squares[indice].isempti","this.board.squares[squareindices[0","this.board.squares[squareindices[1","this.board.squares[squareindices[2","this.board.squares[squareindices[3","this.board.squares[squareindices[4","this.board.squares[squareindices[5","this.board.squares[squareindices[6","this.board.squares[squareindices[7","this.boardchang","this.categori","this.changelang","this.clearsubscript","this.colcount","this.connect","this.console.error(event.messag","this.console.info(event.messag","this.console.log(event.messag","this.console.warn(event.messag","this.consolelogmsg('error","this.databas","this.delete(t","this.devmod","this.devmode(fals","this.dragoversquar","this.dragoversquare.col","this.dragoversquare.row","this.el.nativeelement.offsetparent.offsetheight","this.emptysquar","this.fiddletitl","this.height","this.http.get(`${config.is_mobile_n","this.injector.get(config.pageclass","this.internalbasehref","this.internalbasehref).endswith","this.internalpath","this.internaltitl","this.issolv","this.istoolbarpersisted('pz","this.istoolbarpersisted(options.id","this.key","this.lang","this.languag","this.locationstrategy.back","this.log.debug(`appservic","this.log.debug(`languag","this.logevent(logg","this.multilangservice.track(langchangedaction.typ","this.namelistservice.getnam","this.namelistservice.track(namelist.actiontypes.name_ad","this.navigator.languag","this.onactionchange(act","this.onboardchange(board","this.onhorizontaldragend($ev","this.onverticaldragend($ev","this.opt","this.options.actionservic","this.options.actionservice.act","this.options.hasownproperty('stateservic","this.options.minloglevel","this.options.st","this.options.stateservic","this.pag","this.page.actionbarhidden","this.persist","this.persist(squar","this.persist(this.opt","this.prepareexternalurl(url","this.push(t","this.restoretoolbaroptions(options.id","this.restoretoolbarstate('pz","this.router.navigate(command","this.router.navigatebyurl(url","this.rowcount","this.segment.eventtrack(act","this.segment.pagetrack(path","this.segment.setuserproperties(properti","this.sequence(model","this.simulatepopstate(nexturl","this.startdragsquar","this.startdragsquare.col","this.startdragsquare.row","this.stateev","this.stateeventchang","this.store.dispatch(new","this.subscript","this.subscriptions.length","this.subscriptions.map((subscript","this.subscriptions.push(_boardservice.boardchange$.subscrib","this.subscriptions.push(options.actionservice.actionchang","this.supportedlanguag","this.supportedlanguages[0].cod","this.supportedlanguages[e.newindex].cod","this.tabl","this.timeout","this.tnsdelayedtask","this.toggl","this.toggle.emit(thi","this.toolbaropt","this.transform(board","this.transform(this.opt","this.transformstore(stor","this.translate.use(state.lang","this.urlchanges.length","this.urlchanges.pop","this.urlchanges.push('replac","this.urlchanges.push(externalurl","this.urlchanges[this.urlchanges.length","this.valu","this.viewhelp","this.writetolog(ev","those","three","through","throw","thrown","tick","tick(delay","tics2.excluderoutes(rout","tics2.firstpageview(valu","tics2.virtualpageviews(valu","tics2.withbase(valu","timeout","titl","tnsdelayedtask","todo","togeth","toggl","toggletext","toggletitl","token","tool","toolbar","toolbar'},{'nam","toolbar.compon","toolbar.component.css","toolbar.component.html","toolbar.interfac","toolbarcompon","toolbarinterfac","toolbaropt","toolbaroptionsinterfac","toolbarst","top","tort","tostr","track","track(act","transform","transform(model","transform(opt","transformstor","transformstore(stor","transit","translat","translate.mock.t","translate.mock.ts:10","translate.mock.ts:11","translate.mock.ts:16","translate.mock.ts:19","translate.mock.ts:22","translate.mock.ts:25","translate.mock.ts:28","translate.mock.ts:9","translate.setdefaultlang(initialstate.lang","translate/cor","translate/http","translatehttpload","translatehttploader(http","translateload","translateloaderfactori","translateloaderfactory(http","translateloadermock","translatemock","translatemodul","translatemodule.forroot","translatepip","translateservic","translate}}:&nbsp;&nbsp","translate}}eni","treat","tree","tri","trigger","true","turn","type","type(`[${categori","type(label","typealias","typecach","typecheck","typeof","types.html#discrimin","typescript","typescripthow","ui/pag","ulimit","undefin","under","union","uniqu","unpersist","unsupport","up","updat","url","urlchang","urltre","us","usag","use(lang","useclass","usefactori","usehash","user","userag","userlang","usernam","usevalu","util","utils.generatesequence(min","utils.generatesequentialsequence(min","utils.isvalidmove(a","utils.mapcolclass(num","utils.swap(a","utils.swap(this.board.squares[squareindices[0","utils.swap(this.board.squares[squareindices[1","utils.swap(this.board.squares[squareindices[2","utils.swap(this.board.squares[squareindices[3","utils.swap(this.board.squares[squareindices[4","utils.swap(this.board.squares[squareindices[5","utils.swap(this.board.squares[squareindices[6","utils.swap(this.board.squares[squareindices[7","utils/config","utils/index","v6.5.0","valu","var","variabl","version","via","view","viewchild","viewchild('el","viewhelp","void","want","warn","warn(...err","warn(m","warranti","watch","way","web","webdriv","webmodul","well","wherev","whether","whitelist","win","win.navigator.language.split","win.navigator.useragent.tolowercas","window","window.cleartimeout(this.timeout","window.settimeout","windowmock","windowmockfrench","windowmocknolanguag","windowservic","without","work","wrap","wrapper","writetolog","writetolog(ev","x","xdescrib","xit","xit(nam","yarn","zero","zero(criteria","zoom"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n \n\n\n\n\nPuzzle 16\n\nPuzzle 16 is a game inspired by Eni Puzzle. The android and iOS versions of the\napp are currently under construction.\nTable of Contents\n\nPrerequisites\nHow to start\nRunning tests\nCompo Docs\nLicense\n\nPrerequisites\nNote you should have node v6.5.0 or higher and npm 3.10.3 or higher.\n\nTo run the NativeScript app:\n\nnpm install -g nativescript\nnpm install -g typescriptHow to start\n# install the project's dependencies\n$ npm install\n# fast install (via Yarn, https://yarnpkg.com)\n$ yarn install  # or yarn\n\n# watches your files and uses livereload by default\n$ npm start\n# api document for the app\n# npm run build.docs\n\n# generate api documentation\n$ npm run compodoc\n$ npm run serve.compodoc\n\n# to start deving with livereload site and coverage as well as continuous testing\n$ npm run start.deving\n\n# dev build\n$ npm run build.dev\n# prod build\n$ npm run build.prodRunning tests\n$ npm test\n\n# Development. Your app will be watched by karma\n# on each change all your specs will be executed.\n$ npm run test.watch\n# NB: The command above might fail with a \"EMFILE: too many open files\" error.\n# Some OS have a small limit of opened file descriptors (256) by default\n# and will result in the EMFILE error.\n# You can raise the maximum of file descriptors by running the command below:\n$ ulimit -n 10480\n\n\n# code coverage (istanbul)\n# auto-generated at the end of `npm test`\n# view coverage report:\n$ npm run serve.coverage\n\n# e2e (aka. end-to-end, integration) - In three different shell windows\n# Make sure you don't have a global instance of Protractor\n\n# npm install webdriver-manager You can learn more about Protractor Interactive Mode here\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\nOverview\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_PuzzleModule\n\n\n\ncluster_PuzzleModule_imports\n\n\n\ncluster_SampleModule\n\n\n\ncluster_SampleModule_exports\n\n\n\ncluster_WebModule\n\n\n\ncluster_WebModule_imports\n\n\n\ncluster_WebModule_bootstrap\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nSharedModule->CoreModule\n\n\n\n\n\nSampleModule\n\nSampleModule\n\nSampleModule -->\n\nSharedModule->SampleModule\n\n\n\n\n\nMultilingualModule\n\nMultilingualModule\n\n\n\nPuzzleModule\n\nPuzzleModule\n\nPuzzleModule -->\n\nMultilingualModule->PuzzleModule\n\n\n\nSampleModule -->\n\nMultilingualModule->SampleModule\n\n\n\n\n\nSharedModule \n\nSharedModule \n\nSharedModule  -->\n\nSampleModule->SharedModule \n\n\n\n\n\nWebModule\n\nWebModule\n\nWebModule -->\n\nSampleModule->WebModule\n\n\n\n\n\nAnalyticsModule\n\nAnalyticsModule\n\nWebModule -->\n\nAnalyticsModule->WebModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nWebModule->AppComponent \n\n\n\n\n\n\n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            7 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        8 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 directive\n                    \n                \n            \n            \n                \n                    \n                        \n                        19 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        26 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        23 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2017 Brady Houseknecht\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\nModules\n\n    \n            \n                \n                    \n                        AnalyticsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MultilingualModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PuzzleModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SampleModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WebModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AnalyticsModule.html":{"url":"modules/AnalyticsModule.html","title":"module - AnalyticsModule","body":"\n                   \n\n\n\n\n  Modules\n  AnalyticsModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/client/app/modules/analytics/analytics.module.ts\n        \n\n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { Angulartics2Module, Angulartics2Segment } from 'angulartics2';\n\n\nimport { ANALYTICS_PROVIDERS } from './services/index';\n\n@NgModule({\n  imports: [\n    Angulartics2Module.forRoot([\n      Angulartics2Segment\n    ])\n  ],\n  providers: [\n    ...ANALYTICS_PROVIDERS\n  ]\n})\nexport class AnalyticsModule {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n  Modules\n  CoreModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nSharedModule->CoreModule\n\n\n\n\n\n\n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/client/app/modules/core/core.module.ts\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { HttpModule } from '@angular/http';\n\n\nimport { SharedModule } from '../shared/index';\nimport { CORE_DIRECTIVES } from './directives/index';\nimport { CORE_PROVIDERS } from './services/index';\nimport { Config } from './utils/index';\n\ninterface ICoreModuleOptions {\n  window?: any;\n  console?: any;\n}\n\n@NgModule({\n  imports: [\n    SharedModule\n  ],\n  declarations: [\n    ...CORE_DIRECTIVES\n  ],\n  exports: [\n    ...CORE_DIRECTIVES\n  ],\n  providers: [\n    ...CORE_PROVIDERS,\n  ]\n})\nexport class CoreModule {\n  // configuredProviders: *required to configure WindowService and ConsoleService per platform\n  static forRoot(configuredProviders: Array): ModuleWithProviders {\n    return {\n      ngModule: CoreModule,\n      providers: configuredProviders\n    };\n  }\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    if (parentModule) {\n      throw new Error('CoreModule already loaded; Import in root module only.');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MultilingualModule.html":{"url":"modules/MultilingualModule.html","title":"module - MultilingualModule","body":"\n                   \n\n\n\n\n  Modules\n  MultilingualModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/client/app/modules/i18n/multilingual.module.ts\n        \n\n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders, Optional, SkipSelf, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule, Http } from '@angular/http';\n\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\n\nimport { Config } from '../core/index';\nimport { MULTILANG_COMPONENTS } from './components/index';\nimport { MULTILANG_PROVIDERS } from './services/index';\n\nexport function translateLoaderFactory(http: Http) {\n  return new TranslateHttpLoader(http, `${Config.IS_MOBILE_NATIVE() ? '/' : ''}assets/i18n/`, '.json');\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpModule,\n    FormsModule,\n    TranslateModule.forRoot([{\n      provide: TranslateLoader,\n      deps: [Http],\n      useFactory: (translateLoaderFactory)\n    }]),\n  ],\n  declarations: [\n    ...MULTILANG_COMPONENTS\n  ],\n  providers: [\n    ...MULTILANG_PROVIDERS,\n  ],\n  exports: [\n    ...MULTILANG_COMPONENTS,\n    TranslateModule\n  ],\n  schemas: [\n    NO_ERRORS_SCHEMA,\n    CUSTOM_ELEMENTS_SCHEMA\n  ]\n})\nexport class MultilingualModule {\n\n  // optional usage\n  // ideally we could use this to override TranslateModule, but it requires the static above at moment\n  static forRoot(configuredProviders: Array): ModuleWithProviders {\n    return {\n      ngModule: MultilingualModule,\n      providers: configuredProviders\n    };\n  }\n\n  constructor(@Optional() @SkipSelf() parentModule: MultilingualModule) {\n    if (parentModule) {\n      throw new Error('MultilingualModule already loaded; Import in root module only.');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PuzzleModule.html":{"url":"modules/PuzzleModule.html","title":"module - PuzzleModule","body":"\n                   \n\n\n\n\n  Modules\n  PuzzleModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PuzzleModule\n\n\n\ncluster_PuzzleModule_imports\n\n\n\n\nMultilingualModule\n\nMultilingualModule\n\n\n\nPuzzleModule\n\nPuzzleModule\n\nPuzzleModule -->\n\nMultilingualModule->PuzzleModule\n\n\n\n\n\n\n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/client/app/modules/puzzle/puzzle.module.ts\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                            \n                                    MultilingualModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {NgModule, Optional, SkipSelf, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {HttpModule} from '@angular/http';\nimport {RouterModule} from '@angular/router';\nimport {PUZZLE_COMPONENTS} from './components/index';\nimport {ACTION_PROVIDERS} from './actions/index';\nimport {PUZZLE_PROVIDERS} from './services/index';\nimport { MultilingualModule } from '../i18n/multilingual.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpModule,\n    RouterModule,\n    MultilingualModule\n  ],\n  providers: [\n    ACTION_PROVIDERS,\n    PUZZLE_PROVIDERS\n  ],\n  declarations: [\n    PUZZLE_COMPONENTS\n  ],\n  exports: [\n    PUZZLE_COMPONENTS\n  ],\n  schemas: [\n    NO_ERRORS_SCHEMA,\n    CUSTOM_ELEMENTS_SCHEMA\n  ],\n})\nexport class PuzzleModule {\n\n  constructor(@Optional() @SkipSelf() parentModule: PuzzleModule) {\n    if (parentModule) {\n      throw new Error('PuzzleModule already loaded; Import in root module only.');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SampleModule.html":{"url":"modules/SampleModule.html","title":"module - SampleModule","body":"\n                   \n\n\n\n\n  Modules\n  SampleModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SampleModule\n\n\n\ncluster_SampleModule_imports\n\n\n\ncluster_SampleModule_exports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nSampleModule\n\nSampleModule\n\nSampleModule -->\n\nSharedModule->SampleModule\n\n\n\n\n\nMultilingualModule\n\nMultilingualModule\n\nSampleModule -->\n\nMultilingualModule->SampleModule\n\n\n\n\n\nSharedModule \n\nSharedModule \n\nSharedModule  -->\n\nSampleModule->SharedModule \n\n\n\n\n\n\n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/client/app/modules/sample/sample.module.ts\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    MultilingualModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, Optional, SkipSelf, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule } from '@angular/router';\n\n\nimport { SharedModule } from '../shared/index';\nimport { SAMPLE_PROVIDERS } from './services/index';\nimport { MultilingualModule } from '../i18n/multilingual.module';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    MultilingualModule,\n  ],\n  providers: [\n    ...SAMPLE_PROVIDERS\n  ],\n  schemas: [\n    NO_ERRORS_SCHEMA,\n    CUSTOM_ELEMENTS_SCHEMA\n  ],\n  exports: [\n    SharedModule\n  ]\n})\nexport class SampleModule {\n\n  constructor(@Optional() @SkipSelf() parentModule: SampleModule) {\n    if (parentModule) {\n      throw new Error('SampleModule already loaded; Import in root module only.');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/client/app/modules/shared/shared.module.ts\n        \n\n            \n                Description\n            \n            \n                SharedModule\nOnly for shared components, directives and pipes\nDo not specify providers here\nhttps://angular.io/docs/ts/latest/cookbook/ngmodule-faq.html#!#what-kinds-of-modules-should-i-have-and-how-should-i-use-them-\n\n            \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\ns\nimport { MultilingualModule } from '../i18n/index';\nimport { SHARED_COMPONENTS } from './components/index';\n\nconst SHARED_MODULES: any[] = [\n  CommonModule,\n  HttpModule,\n  FormsModule,\n  RouterModule,\n  MultilingualModule\n];\n\n/**\n * SharedModule\n * Only for shared components, directives and pipes\n * Do not specify providers here\n * https://angular.io/docs/ts/latest/cookbook/ngmodule-faq.html#!#what-kinds-of-modules-should-i-have-and-how-should-i-use-them-\n */\n\n@NgModule({\n  imports: [\n    ...SHARED_MODULES\n  ],\n  declarations: [\n    ...SHARED_COMPONENTS\n  ],\n  schemas: [\n    NO_ERRORS_SCHEMA,\n    CUSTOM_ELEMENTS_SCHEMA,\n  ],\n  exports: [\n    ...SHARED_MODULES,\n    ...SHARED_COMPONENTS,\n  ]\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WebModule.html":{"url":"modules/WebModule.html","title":"module - WebModule","body":"\n                   \n\n\n\n\n  Modules\n  WebModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WebModule\n\n\n\ncluster_WebModule_imports\n\n\n\ncluster_WebModule_bootstrap\n\n\n\n\nAnalyticsModule\n\nAnalyticsModule\n\n\n\nWebModule\n\nWebModule\n\nWebModule -->\n\nAnalyticsModule->WebModule\n\n\n\n\n\nSampleModule\n\nSampleModule\n\nWebModule -->\n\nSampleModule->WebModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nWebModule->AppComponent \n\n\n\n\n\n\n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/client/web.module.ts\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                            \n                                    AnalyticsModule\n                            \n                            \n                                    SampleModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { Http } from '@angular/http';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\n\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { TranslateLoader } from '@ngx-translate/core';\n\nimport { APP_COMPONENTS, AppComponent } from './app/components/index';\nimport { routes } from './app/components/app.routes';\n\nimport { WindowService, StorageService, ConsoleService, createConsoleTarget, provideConsoleTarget, LogTarget, LogLevel, ConsoleTarget } from './app/modules/core/services/index';\nimport { CoreModule, Config } from './app/modules/core/index';\nimport { AnalyticsModule } from './app/modules/analytics/index';\nimport { MultilingualModule, Languages, translateLoaderFactory, MultilingualEffects } from './app/modules/i18n/index';\nimport { SampleModule, SampleEffects } from './app/modules/sample/index';\nimport { AppReducer } from './app/modules/ngrx/index';\n\nConfig.PLATFORM_TARGET = Config.PLATFORMS.WEB;\nif (String('') === 'dev') {\n  Config.DEBUG.LEVEL_4 = true;\n}\n\nlet routerModule = RouterModule.forRoot(routes);\n\nif (String('') === 'true') {\n  Config.PLATFORM_TARGET = Config.PLATFORMS.DESKTOP;\n  routerModule = RouterModule.forRoot(routes, { useHash: true });\n}\n\ndeclare var window, console, localStorage;\n\nexport function win() {\n  return window;\n}\nexport function storage() {\n  return localStorage;\n}\nexport function cons() {\n  return console;\n}\nexport function consoleLogTarget(consoleService: ConsoleService) {\n  return new ConsoleTarget(consoleService, { minLogLevel: LogLevel.Debug });\n}\n\nlet DEV_IMPORTS: any[] = [];\n\nif (String('') === 'dev') {\n  DEV_IMPORTS = [\n    ...DEV_IMPORTS,\n    StoreDevtoolsModule.instrumentOnlyWithExtension()\n  ];\n}\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    CoreModule.forRoot([\n      { provide: WindowService, useFactory: (win) },\n      { provide: StorageService, useFactory: (storage) },\n      { provide: ConsoleService, useFactory: (cons) },\n      { provide: LogTarget, useFactory: (consoleLogTarget), deps: [ConsoleService], multi: true }\n    ]),\n    routerModule,\n    AnalyticsModule,\n    MultilingualModule.forRoot([{\n      provide: TranslateLoader,\n      deps: [Http],\n      useFactory: (translateLoaderFactory)\n    }]),\n    SampleModule,\n    // configure app state\n    StoreModule.provideStore(AppReducer),\n    EffectsModule.run(MultilingualEffects),\n    EffectsModule.run(SampleEffects),\n    // dev environment only imports\n    DEV_IMPORTS,\n  ],\n  declarations: [\n    APP_COMPONENTS\n  ],\n  providers: [\n    {\n      provide: APP_BASE_HREF,\n      useValue: ''\n    },\n    // override with supported languages\n    {\n      provide: Languages,\n      useValue: Config.GET_SUPPORTED_LANGUAGES()\n    },\n    {\n      provide: LocationStrategy,\n      useClass: HashLocationStrategy\n    }\n  ],\n  bootstrap: [AppComponent]\n})\n\nexport class WebModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AboutComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/client/app/components/about/about.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n            \n                moduleId\n                module.id\n            \n\n\n\n\n            \n                selector\n                sd-about\n            \n\n            \n                styleUrls\n                about.component.css\n            \n\n\n\n            \n                templateUrl\n                about.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Private _page\n                            \n                            \n                                 el\n                            \n                            \n                                 height\n                            \n                            \n                                Private page\n                            \n                            \n                                 timeOut\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                Private _calcHeight\n                            \n                            \n                                 ngOnInit\n                            \n                            \n                                 onWindowResize\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(injector: Injector)\n                        \n                    \n                            \n                                \n                                    Defined in src/client/app/components/about/about.component.ts:30\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      injector\n                                                      \n                                                                Injector\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            Private _calcHeight\n                        \n                    \n                    \n                        \n                                \n                            _calcHeight()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/client/app/components/about/about.component.ts:55\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             ngOnInit\n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/client/app/components/about/about.component.ts:39\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             onWindowResize\n                        \n                    \n                    \n                        \n    onWindowResize(event: any)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/client/app/components/about/about.component.ts:46\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      event\n                                                      \n                                                              any\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            Private _page\n                        \n                    \n                    \n                        \n                            _page:     any\n    \n                        \n                    \n                        \n                            \n                                Type :     any\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/client/app/components/about/about.component.ts:21\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             el\n                        \n                    \n                    \n                        \n                            el:     ElementRef\n    \n                        \n                    \n                        \n                            \n                                Type :     ElementRef\n    \n                            \n                        \n                        \n                            \n                                Decorators : ViewChild\n                            \n                        \n                            \n                                \n                                    Defined in src/client/app/components/about/about.component.ts:14\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             height\n                        \n                    \n                    \n                        \n                            height:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/client/app/components/about/about.component.ts:15\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Private page\n                        \n                    \n                    \n                        \n                            page:     \n    \n                        \n                    \n                            \n                                \n                                    Defined in src/client/app/components/about/about.component.ts:22\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             timeOut\n                        \n                    \n                    \n                        \n                            timeOut:     any\n    \n                        \n                    \n                        \n                            \n                                Type :     any\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/client/app/components/about/about.component.ts:16\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n    \n        import {Injector, Component, OnInit, ElementRef, ViewChild} from '@angular/core';\nimport {Config} from '../../modules/core/index';\n\n@Component({\n  moduleId: module.id,\n  selector: 'sd-about',\n  templateUrl: 'about.component.html',\n  styleUrls: [\n    'about.component.css',\n  ],\n})\nexport class AboutComponent implements OnInit {\n\n  @ViewChild('el') el: ElementRef;\n  height: number;\n  timeOut: any;\n\n\n  // Just one way you could handle the {N} `ui/page` Page class\n  // in a shared component...\n  private _page: any;\n  private get page() {\n    if (Config.PageClass) {\n      if (!this._page) {\n        this._page = this.injector.get(Config.PageClass);\n      }\n\n      return this._page;\n    }\n  }\n\n  constructor(private injector: Injector) {\n    // This is here as an example\n    // if (this.page) {\n    //   this.page.actionBarHidden = true;\n    // }\n  }\n\n  ngOnInit() {\n    if (typeof document === 'object' && document.title) {\n      document.title = 'About';\n      this._calcHeight();\n    }\n  }\n\n  onWindowResize(event: any) {\n    if (this.timeOut) {\n      window.clearTimeout(this.timeOut);\n    }\n    this.timeOut = window.setTimeout(() => {\n      this._calcHeight();\n    }, 64);\n  }\n\n  private _calcHeight() {\n    if (typeof document === 'object' && document.title) {\n      this.height = this.el.nativeElement.offsetParent.offsetHeight - (48 * 2) - 16;\n    }\n  }\n\n\n}\n\n    \n\n    \n        \n  {{'ABOUT_CONTENT_1' | translate}}Eni Puzzle{{'ABOUT_CONTENT_2' | translate}}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{\\'ABOUT_CONTENT_1\\' | translate}}Eni Puzzle{{\\'ABOUT_CONTENT_2\\' | translate}}'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'sd-about'},{'name': 'AppComponent', 'selector': 'sd-app'},{'name': 'HomeComponent', 'selector': 'sd-home'},{'name': 'LangSwitcherComponent', 'selector': 'lang-switcher'},{'name': 'NavbarComponent', 'selector': 'sd-navbar'},{'name': 'PuzzleComponent', 'selector': 'sd-puzzle'},{'name': 'ToolbarComponent', 'selector': 'pz-toolbar'},{'name': 'ToolbarComponent', 'selector': 'sd-toolbar'}];\n    var DIRECTIVES = [{'name': 'PlatformDirective', 'selector': '[platform]'}];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/client/app/components/app.component.ts\n\n\n    \n        Description\n    \n    \n        This class represents the main application component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n            \n                moduleId\n                module.id\n            \n\n\n\n\n            \n                selector\n                sd-app\n            \n\n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Public analytics\n                            \n                            \n                                Public log\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(analytics: AnalyticsService, log: LogService, appService: AppService)\n                        \n                    \n                            \n                                \n                                    Defined in src/client/app/components/app.component.ts:20\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      analytics\n                                                      \n                                                                AnalyticsService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      log\n                                                      \n                                                                LogService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      appService\n                                                      \n                                                                AppService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            Public analytics\n                        \n                    \n                    \n                        \n                            analytics:     AnalyticsService\n    \n                        \n                    \n                        \n                            \n                                Type :     AnalyticsService\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/client/app/components/app.component.ts:22\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public log\n                        \n                    \n                    \n                        \n                            log:     LogService\n    \n                        \n                    \n                        \n                            \n                                Type :     LogService\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/client/app/components/app.component.ts:23\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n    \n        import './operators';\n\n// libs\nimport { Component, OnInit } from '@angular/core';\n\n\nimport { AnalyticsService } from '../modules/analytics/services/index';\nimport { LogService, AppService } from '../modules/core/services/index';\nimport { Config } from '../modules/core/utils/index';\n\n/**\n * This class represents the main application component.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'sd-app',\n  templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n  constructor(\n    public analytics: AnalyticsService,\n    public log: LogService,\n    private appService: AppService\n  ) {\n    log.debug(`Config env: ${Config.ENVIRONMENT().ENV}`);\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'sd-about'},{'name': 'AppComponent', 'selector': 'sd-app'},{'name': 'HomeComponent', 'selector': 'sd-home'},{'name': 'LangSwitcherComponent', 'selector': 'lang-switcher'},{'name': 'NavbarComponent', 'selector': 'sd-navbar'},{'name': 'PuzzleComponent', 'selector': 'sd-puzzle'},{'name': 'ToolbarComponent', 'selector': 'pz-toolbar'},{'name': 'ToolbarComponent', 'selector': 'sd-toolbar'}];\n    var DIRECTIVES = [{'name': 'PlatformDirective', 'selector': '[platform]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/client/app/components/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n            \n                moduleId\n                module.id\n            \n\n\n\n\n            \n                selector\n                sd-home\n            \n\n            \n                styleUrls\n                home.component.css\n            \n\n\n\n            \n                templateUrl\n                home.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                 el\n                            \n                            \n                                 height\n                            \n                            \n                                Public routerExt\n                            \n                            \n                                 timeOut\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                Private _calcHeight\n                            \n                            \n                                 ngOnInit\n                            \n                            \n                                 onWindowResize\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(routerExt: RouterExtensions)\n                        \n                    \n                            \n                                \n                                    Defined in src/client/app/components/home/home.component.ts:17\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      routerExt\n                                                      \n                                                                RouterExtensions\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            Private _calcHeight\n                        \n                    \n                    \n                        \n                                \n                            _calcHeight()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/client/app/components/home/home.component.ts:41\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             ngOnInit\n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/client/app/components/home/home.component.ts:22\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             onWindowResize\n                        \n                    \n                    \n                        \n    onWindowResize(event: any)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/client/app/components/home/home.component.ts:32\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      event\n                                                      \n                                                              any\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                             el\n                        \n                    \n                    \n                        \n                            el:     ElementRef\n    \n                        \n                    \n                        \n                            \n                                Type :     ElementRef\n    \n                            \n                        \n                        \n                            \n                                Decorators : ViewChild\n                            \n                        \n                            \n                                \n                                    Defined in src/client/app/components/home/home.component.ts:15\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             height\n                        \n                    \n                    \n                        \n                            height:     number\n    \n                        \n                    \n                        \n                            \n                                Type :     number\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/client/app/components/home/home.component.ts:16\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public routerExt\n                        \n                    \n                    \n                        \n                            routerExt:     RouterExtensions\n    \n                        \n                    \n                        \n                            \n                                Type :     RouterExtensions\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/client/app/components/home/home.component.ts:19\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             timeOut\n                        \n                    \n                    \n                        \n                            timeOut:     any\n    \n                        \n                    \n                        \n                            \n                                Type :     any\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/client/app/components/home/home.component.ts:17\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n    \n        import {Component, ElementRef, ViewChild, OnInit} from '@angular/core';\n\n\nimport {RouterExtensions} from '../../modules/core/services/index';\n\n@Component({\n  moduleId: module.id,\n  selector: 'sd-home',\n  templateUrl: 'home.component.html',\n  styleUrls: ['home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  @ViewChild('el') el: ElementRef;\n  height: number;\n  timeOut: any;\n\n  constructor(public routerExt: RouterExtensions) {\n  }\n\n  ngOnInit() {\n\n    if (typeof document === 'object' && document.title) {\n      document.title = 'home';\n      this._calcHeight();\n    }\n\n\n  }\n\n  onWindowResize(event: any) {\n    if (this.timeOut) {\n      window.clearTimeout(this.timeOut);\n    }\n    this.timeOut = window.setTimeout(() => {\n      this._calcHeight();\n    }, 64);\n  }\n\n  private _calcHeight() {\n    if (typeof document === 'object' && document.title) {\n      this.height = this.el.nativeElement.offsetParent.offsetHeight - (48 * 2);\n\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            {{'PLAY' | translate}}\n        \n        \n            {{'ABOUT' | translate}}\n        \n        \n            {{'GOOGLE_PLAY' | translate}}\n        \n        \n            {{'APP_STORE' | translate}}\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{\\'PLAY\\' | translate}}                            {{\\'ABOUT\\' | translate}}                            {{\\'GOOGLE_PLAY\\' | translate}}                            {{\\'APP_STORE\\' | translate}}            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'sd-about'},{'name': 'AppComponent', 'selector': 'sd-app'},{'name': 'HomeComponent', 'selector': 'sd-home'},{'name': 'LangSwitcherComponent', 'selector': 'lang-switcher'},{'name': 'NavbarComponent', 'selector': 'sd-navbar'},{'name': 'PuzzleComponent', 'selector': 'sd-puzzle'},{'name': 'ToolbarComponent', 'selector': 'pz-toolbar'},{'name': 'ToolbarComponent', 'selector': 'sd-toolbar'}];\n    var DIRECTIVES = [{'name': 'PlatformDirective', 'selector': '[platform]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LangSwitcherComponent.html":{"url":"components/LangSwitcherComponent.html","title":"component - LangSwitcherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LangSwitcherComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/client/app/modules/i18n/components/lang-switcher.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n            \n                moduleId\n                module.id\n            \n\n\n\n\n            \n                selector\n                lang-switcher\n            \n\n            \n                styleUrls\n                lang-switcher.component.css\n            \n\n\n\n            \n                templateUrl\n                lang-switcher.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Public lang\n                            \n                            \n                                Public supportedLanguages\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                 changeLang\n                            \n                            \n                                 ngOnInit\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(store: Store, log: LogService, languages: , viewHelper: )\n                        \n                    \n                            \n                                \n                                    Defined in src/client/app/modules/i18n/components/lang-switcher.component.ts:21\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      store\n                                                      \n                                                                Store\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      log\n                                                      \n                                                                LogService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      languages\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      viewHelper\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                             changeLang\n                        \n                    \n                    \n                        \n    changeLang(e: any)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/client/app/modules/i18n/components/lang-switcher.component.ts:42\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      e\n                                                      \n                                                              any\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             ngOnInit\n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/client/app/modules/i18n/components/lang-switcher.component.ts:56\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            Public lang\n                        \n                    \n                    \n                        \n                            lang:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/client/app/modules/i18n/components/lang-switcher.component.ts:20\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Public supportedLanguages\n                        \n                    \n                    \n                        \n                            supportedLanguages:     Array\n    \n                        \n                    \n                        \n                            \n                                Type :     Array\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/client/app/modules/i18n/components/lang-switcher.component.ts:21\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\n\nimport { Config, ILang, LogService } from '../../core/index';\nimport { IAppState } from '../../ngrx/index';\nimport { ElectronEventService } from '../../electron/index';\nimport * as multilingual from '../actions/index';\nimport { MultilingualService, Languages, LanguageViewHelper } from '../services/index';\n\n@Component({\n  moduleId: module.id,\n  selector: 'lang-switcher',\n  templateUrl: 'lang-switcher.component.html',\n  styleUrls: ['lang-switcher.component.css'],\n})\nexport class LangSwitcherComponent {\n\n  public lang: string;\n  public supportedLanguages: Array;\n\n  constructor(\n    private store: Store,\n    private log: LogService,\n    @Inject(Languages) private languages,\n    @Inject(LanguageViewHelper) private viewHelper\n  ) {\n    store.take(1).subscribe((s: any) => {\n      // s && s.18n - ensures testing works in all cases (since some tests dont use i18n state)\n      this.lang = s && s.i18n ? s.i18n.lang : '';\n    });\n\n    if (Config.IS_DESKTOP()) {\n      // allow electron menu to talk to component\n      ElectronEventService.on('changeLang').subscribe((e: any) => {\n        this.changeLang({ target: { value: e.detail.value } });\n      });\n    }\n  }\n\n  changeLang(e: any) {\n    let lang = this.supportedLanguages[0].code; // fallback to default 'en'\n\n    if (Config.IS_MOBILE_NATIVE()) {\n      if (e) {\n        lang = this.supportedLanguages[e.newIndex].code;\n      }\n    } else if (e && e.target) {\n      lang = e.target.value;\n    }\n    this.log.debug(`Language change: ${lang}`);\n    this.store.dispatch(new multilingual.ChangeAction(lang));\n  }\n\n  ngOnInit() {\n    this.supportedLanguages = this.languages;\n    if (Config.IS_MOBILE_NATIVE() && this.viewHelper) {\n      // {N} 3.0 requires SegmentedBarItem class for items\n      // when binding to SegmentedBar\n      this.supportedLanguages = this.viewHelper;\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        \n            {{'CHANGE_LANGUAGE' | translate}}:&nbsp;&nbsp;\n            \n                \n                    {{l.title | translate}}\n                \n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{\\'CHANGE_LANGUAGE\\' | translate}}:                                                  {{l.title | translate}}                                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'sd-about'},{'name': 'AppComponent', 'selector': 'sd-app'},{'name': 'HomeComponent', 'selector': 'sd-home'},{'name': 'LangSwitcherComponent', 'selector': 'lang-switcher'},{'name': 'NavbarComponent', 'selector': 'sd-navbar'},{'name': 'PuzzleComponent', 'selector': 'sd-puzzle'},{'name': 'ToolbarComponent', 'selector': 'pz-toolbar'},{'name': 'ToolbarComponent', 'selector': 'sd-toolbar'}];\n    var DIRECTIVES = [{'name': 'PlatformDirective', 'selector': '[platform]'}];\n    var ACTUAL_COMPONENT = {'name': 'LangSwitcherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/client/app/modules/shared/components/navbar/navbar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n            \n                moduleId\n                module.id\n            \n\n\n\n\n            \n                selector\n                sd-navbar\n            \n\n            \n                styleUrls\n                navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                navbar.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  moduleId: module.id,\n  selector: 'sd-navbar',\n  templateUrl: 'navbar.component.html',\n  styleUrls: [\n    'navbar.component.css',\n  ],\n})\nexport class NavbarComponent {\n}\n\n    \n\n    \n        \n  {{'HOME' | translate}}\n  {{'ABOUT' | translate}}\n  {{'PUZZLE' | translate}}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{\\'HOME\\' | translate}}  {{\\'ABOUT\\' | translate}}  {{\\'PUZZLE\\' | translate}}'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'sd-about'},{'name': 'AppComponent', 'selector': 'sd-app'},{'name': 'HomeComponent', 'selector': 'sd-home'},{'name': 'LangSwitcherComponent', 'selector': 'lang-switcher'},{'name': 'NavbarComponent', 'selector': 'sd-navbar'},{'name': 'PuzzleComponent', 'selector': 'sd-puzzle'},{'name': 'ToolbarComponent', 'selector': 'pz-toolbar'},{'name': 'ToolbarComponent', 'selector': 'sd-toolbar'}];\n    var DIRECTIVES = [{'name': 'PlatformDirective', 'selector': '[platform]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PuzzleComponent.html":{"url":"components/PuzzleComponent.html","title":"component - PuzzleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PuzzleComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/client/app/components/puzzle/puzzle.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n            \n                moduleId\n                module.id\n            \n\n\n            \n                providers\n                \n                    \n                        LocalStorageService\n                        PuzzleStateService\n                        BoardService\n                        ActionsService\n                    \n                \n            \n\n\n            \n                selector\n                sd-puzzle\n            \n\n            \n                styleUrls\n                puzzle.component.css\n            \n\n\n\n            \n                templateUrl\n                ./puzzle.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                 board\n                            \n                            \n                                 database\n                            \n                            \n                                 dragOverSquare\n                            \n                            \n                                 fiddleTitle\n                            \n                            \n                                 startDragSquare\n                            \n                            \n                                 subscriptions\n                            \n                            \n                                 tnsDelayedTask\n                            \n                            \n                                 toolbarOptions\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                Protected clearSubscriptions\n                            \n                            \n                                 isToolbarPersisted\n                            \n                            \n                                 ngOnDestroy\n                            \n                            \n                                 ngOnInit\n                            \n                            \n                                 onBoardChange\n                            \n                            \n                                 onHorizontalDragEnd\n                            \n                            \n                                 onSquareClick\n                            \n                            \n                                 onSquareDragEnd\n                            \n                            \n                                 onSquareDragOver\n                            \n                            \n                                 onSquareDragStart\n                            \n                            \n                                 onSquarePan\n                            \n                            \n                                 onSquareSwipe\n                            \n                            \n                                 onSquareTap\n                            \n                            \n                                 onVerticalDragEnd\n                            \n                            \n                                 restoreToolbarState\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(injector: Injector, _boardService: BoardService, _gameStateService: PuzzleStateService, _actionService: ActionsService)\n                        \n                    \n                            \n                                \n                                    Defined in src/client/app/components/puzzle/puzzle.component.ts:31\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      injector\n                                                      \n                                                                Injector\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      _boardService\n                                                      \n                                                                BoardService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      _gameStateService\n                                                      \n                                                                PuzzleStateService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      _actionService\n                                                      \n                                                                ActionsService\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            Protected clearSubscriptions\n                        \n                    \n                    \n                        \n                                \n                            clearSubscriptions()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/client/app/components/puzzle/puzzle.component.ts:134\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             isToolbarPersisted\n                        \n                    \n                    \n                        \n    isToolbarPersisted(id: string)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/client/app/components/puzzle/puzzle.component.ts:145\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      id\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     boolean\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             ngOnDestroy\n                        \n                    \n                    \n                        \n    ngOnDestroy()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/client/app/components/puzzle/puzzle.component.ts:64\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             ngOnInit\n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/client/app/components/puzzle/puzzle.component.ts:59\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             onBoardChange\n                        \n                    \n                    \n                        \n    onBoardChange(board: Board)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/client/app/components/puzzle/puzzle.component.ts:163\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      board\n                                                      \n                                                              Board\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             onHorizontalDragEnd\n                        \n                    \n                    \n                        \n    onHorizontalDragEnd($event: any, square: Square)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/client/app/components/puzzle/puzzle.component.ts:114\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      $event\n                                                      \n                                                              any\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      square\n                                                      \n                                                              Square\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             onSquareClick\n                        \n                    \n                    \n                        \n    onSquareClick($event: any)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/client/app/components/puzzle/puzzle.component.ts:68\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      $event\n                                                      \n                                                              any\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             onSquareDragEnd\n                        \n                    \n                    \n                        \n    onSquareDragEnd($event: any, square: Square)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/client/app/components/puzzle/puzzle.component.ts:93\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      $event\n                                                      \n                                                              any\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      square\n                                                      \n                                                              Square\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             onSquareDragOver\n                        \n                    \n                    \n                        \n    onSquareDragOver($event: any, square: Square)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/client/app/components/puzzle/puzzle.component.ts:81\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      $event\n                                                      \n                                                              any\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      square\n                                                      \n                                                              Square\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             onSquareDragStart\n                        \n                    \n                    \n                        \n    onSquareDragStart($event: any, square: Square)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/client/app/components/puzzle/puzzle.component.ts:88\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      $event\n                                                      \n                                                              any\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      square\n                                                      \n                                                              Square\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             onSquarePan\n                        \n                    \n                    \n                        \n    onSquarePan(args: any, square: Square)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/client/app/components/puzzle/puzzle.component.ts:182\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      args\n                                                      \n                                                              any\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      square\n                                                      \n                                                              Square\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             onSquareSwipe\n                        \n                    \n                    \n                        \n    onSquareSwipe(args: any, square: Square)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/client/app/components/puzzle/puzzle.component.ts:207\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      args\n                                                      \n                                                              any\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      square\n                                                      \n                                                              Square\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             onSquareTap\n                        \n                    \n                    \n                        \n    onSquareTap(args: any, square: Square)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/client/app/components/puzzle/puzzle.component.ts:168\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      args\n                                                      \n                                                              any\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      square\n                                                      \n                                                              Square\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             onVerticalDragEnd\n                        \n                    \n                    \n                        \n    onVerticalDragEnd($event: any, square: Square)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/client/app/components/puzzle/puzzle.component.ts:106\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      $event\n                                                      \n                                                              any\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      square\n                                                      \n                                                              Square\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             restoreToolbarState\n                        \n                    \n                    \n                        \n    restoreToolbarState(id: string)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/client/app/components/puzzle/puzzle.component.ts:153\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      id\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     string\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                             board\n                        \n                    \n                    \n                        \n                            board:     Board\n    \n                        \n                    \n                        \n                            \n                                Type :     Board\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/client/app/components/puzzle/puzzle.component.ts:27\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             database\n                        \n                    \n                    \n                        \n                            database:     DatabaseServiceInterface\n    \n                        \n                    \n                        \n                            \n                                Type :     DatabaseServiceInterface\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/client/app/components/puzzle/puzzle.component.ts:141\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             dragOverSquare\n                        \n                    \n                    \n                        \n                            dragOverSquare:     Square\n    \n                        \n                    \n                        \n                            \n                                Type :     Square\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/client/app/components/puzzle/puzzle.component.ts:30\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             fiddleTitle\n                        \n                    \n                    \n                        \n                            fiddleTitle:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/client/app/components/puzzle/puzzle.component.ts:26\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             startDragSquare\n                        \n                    \n                    \n                        \n                            startDragSquare:     Square\n    \n                        \n                    \n                        \n                            \n                                Type :     Square\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/client/app/components/puzzle/puzzle.component.ts:29\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             subscriptions\n                        \n                    \n                    \n                        \n                            subscriptions:     Array\n    \n                        \n                    \n                        \n                            \n                                Type :     Array\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/client/app/components/puzzle/puzzle.component.ts:28\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             tnsDelayedTask\n                        \n                    \n                    \n                        \n                            tnsDelayedTask:     any\n    \n                        \n                    \n                        \n                            \n                                Type :     any\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/client/app/components/puzzle/puzzle.component.ts:31\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             toolbarOptions\n                        \n                    \n                    \n                        \n                            toolbarOptions:     ToolbarOptionsInterface\n    \n                        \n                    \n                        \n                            \n                                Type :     ToolbarOptionsInterface\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/client/app/components/puzzle/puzzle.component.ts:25\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n    \n        import {Component, OnDestroy, Injector, OnInit} from '@angular/core';\nimport {ISubscription} from 'rxjs/Subscription';\nimport {\n  ToolbarOptionsInterface,\n  ActionsService,\n  DatabaseServiceInterface,\n  LocalStorageService,\n  PuzzleConfig,\n  BoardService,\n  Board,\n  Square,\n  Utils\n} from '../../modules/puzzle/index';\nimport {PuzzleStateService} from './puzzle-state.service';\n\n\n@Component({\n  selector: 'sd-puzzle',\n  moduleId: module.id,\n  providers: [LocalStorageService, PuzzleStateService, BoardService, ActionsService],\n  templateUrl: './puzzle.component.html',\n  styleUrls: ['./puzzle.component.css']\n})\nexport class PuzzleComponent implements OnInit, OnDestroy {\n  toolbarOptions: ToolbarOptionsInterface;\n  fiddleTitle: string;\n  board: Board;\n  subscriptions: Array;\n  startDragSquare: Square;\n  dragOverSquare: Square;\n  tnsDelayedTask: any;\n\n  constructor(private injector: Injector,\n              private _boardService: BoardService,\n              private _gameStateService: PuzzleStateService,\n              private _actionService: ActionsService) {\n    this.startDragSquare = null;\n    this.dragOverSquare = null;\n    this.fiddleTitle = PuzzleConfig.title;\n    this.subscriptions = [];\n\n    this.toolbarOptions = {\n      id: 'pz-toolbar',\n      state: this.isToolbarPersisted('pz-toolbar') === true ? this.restoreToolbarState('pz-toolbar') : 'PLAY',\n      toggleText: 'Play',\n      actionService: _actionService,\n      stateService: _gameStateService,\n      isBack: false\n    };\n\n    this.subscriptions.push(_boardService.boardChange$.subscribe(\n      (board: any) => this.onBoardChange(board)\n    ));\n\n    _boardService.init(_gameStateService, new Board(8, 8));\n\n  }\n\n  ngOnInit() {\n    if (typeof document === 'object' && document.title) {\n      document.title = 'Puzzle';\n    }\n  }\n  ngOnDestroy() {\n    this.clearSubscriptions();\n  }\n\n  onSquareClick($event: any): void {\n    let a: Square = $event,\n      b: Square = this._boardService.emptySquare ? this._boardService.emptySquare : null;\n    if (a && b && !this.dragOverSquare && !this.startDragSquare) {\n      if (!a.isEmpty && Utils.isValidMove(a, b)) {\n        Utils.swap(a, b);\n        this._boardService.persist(a);\n        this._boardService.persist(b);\n        this._boardService.emptySquare = a;\n      }\n    }\n  }\n\n  onSquareDragOver($event: any, square: Square) {\n    if (this.startDragSquare) {\n      this.dragOverSquare = square;\n    }\n  }\n\n\n  onSquareDragStart($event: any, square: Square) {\n    this.startDragSquare = square;\n    $event.dataTransfer.dropEffect = 'move';\n  }\n\n  onSquareDragEnd($event: any, square: Square) {\n    if(this.startDragSquare && this.dragOverSquare) {\n      if (this.startDragSquare.row === this.dragOverSquare.row) {\n        return this.onHorizontalDragEnd($event, square);\n      }\n      /*if (this.startDragSquare.col === this.dragOverSquare.col) {\n       return this.onVerticalDragEnd($event, square);\n       }*/\n    }\n    this.startDragSquare = null;\n    this.dragOverSquare = null;\n  }\n\n  onVerticalDragEnd($event: any, square: Square) {\n\n\n\n    this.startDragSquare = null;\n    this.dragOverSquare = null;\n  }\n\n  onHorizontalDragEnd($event: any, square: Square) {\n    let repX: number = Math.abs(this.startDragSquare.col - this.dragOverSquare.col),\n      i: number = 1;\n    if (repX) {\n      for (; i  {\n            this._boardService.shiftX(false, square);\n          }, i * 66);\n        } else {\n          setTimeout(() => {\n            this._boardService.shiftX(true, square);\n          }, i * 66);\n        }\n      }\n    }\n    this.startDragSquare = null;\n    this.dragOverSquare = null;\n  }\n\n  protected clearSubscriptions(): void {\n    this.subscriptions.map((subscription: ISubscription) => {\n      subscription.unsubscribe();\n    });\n    this.subscriptions = [];\n  }\n\n  get database(): DatabaseServiceInterface {\n    return this._gameStateService.databaseService;\n  }\n\n  isToolbarPersisted(id: string): boolean {\n    let databaseService: DatabaseServiceInterface = this.database;\n    if (databaseService) {\n      return databaseService.exists(id);\n    }\n    return false;\n  }\n\n  restoreToolbarState(id: string): string {\n    let databaseService: DatabaseServiceInterface = this.database,\n      toolbarState: string = null;\n\n    if (databaseService) {\n      toolbarState = databaseService.pull(id);\n    }\n    return toolbarState;\n  }\n\n  onBoardChange(board: Board) {\n    console.log(board.toString());\n    this.board = board;\n  }\n\n  onSquareTap(args: any, square: Square) {\n    console.log('onSquareTap >' + square.cssClass);\n    let a: Square = square,\n      b: Square = this._boardService.emptySquare ? this._boardService.emptySquare : null;\n    if (a && b) {\n      if (!a.isEmpty && Utils.isValidMove(a, b)) {\n        Utils.swap(a, b);\n        this._boardService.persist(a);\n        this._boardService.persist(b);\n        this._boardService.emptySquare = a;\n      }\n    }\n  }\n\n  onSquarePan(args: any, square: Square) {\n    console.log('onSquarePan > square => ' + JSON.stringify(square));\n\n    for (var key in args) {\n      console.log('onSquarePan > args.' + key + ' = ' + args[key]);\n    }\n\n    if (args.state === 2) {\n      if (this.tnsDelayedTask) {\n        clearTimeout(this.tnsDelayedTask);\n        this.tnsDelayedTask = null;\n      }\n      if (args.deltaX  {\n          this._boardService.shiftX(true, square);\n        }, 64);\n      } else {\n        this.tnsDelayedTask = setTimeout(() => {\n          this._boardService.shiftX(false, square);\n        }, 64);\n      }\n    }\n\n  }\n\n  onSquareSwipe(args: any, square: Square) {\n\n    if (this.tnsDelayedTask) {\n      clearTimeout(this.tnsDelayedTask);\n      this.tnsDelayedTask = null;\n    }\n\n    switch(args.direction) {\n      case 1:\n        this.tnsDelayedTask = setTimeout(() => {\n          this._boardService.shiftX(false, square);\n        }, 64);\n        break;\n      case 2:\n        this.tnsDelayedTask = setTimeout(() => {\n          this._boardService.shiftX(true, square);\n        }, 64);\n        break;\n    }\n\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'sd-about'},{'name': 'AppComponent', 'selector': 'sd-app'},{'name': 'HomeComponent', 'selector': 'sd-home'},{'name': 'LangSwitcherComponent', 'selector': 'lang-switcher'},{'name': 'NavbarComponent', 'selector': 'sd-navbar'},{'name': 'PuzzleComponent', 'selector': 'sd-puzzle'},{'name': 'ToolbarComponent', 'selector': 'pz-toolbar'},{'name': 'ToolbarComponent', 'selector': 'sd-toolbar'}];\n    var DIRECTIVES = [{'name': 'PlatformDirective', 'selector': '[platform]'}];\n    var ACTUAL_COMPONENT = {'name': 'PuzzleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarComponent.html":{"url":"components/ToolbarComponent.html","title":"component - ToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolbarComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                ToolbarInterface\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n            \n                moduleId\n                module.id\n            \n\n\n\n\n            \n                selector\n                pz-toolbar\n            \n\n            \n                styleUrls\n                toolbar.component.css\n            \n\n\n\n            \n                templateUrl\n                toolbar.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                 database\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                Private clearState\n                            \n                            \n                                 isToolbarPersisted\n                            \n                            \n                                 ngOnChanges\n                            \n                            \n                                 onAboutClick\n                            \n                            \n                                 onActionChange\n                            \n                            \n                                 onToggleClick\n                            \n                            \n                                Private persist\n                            \n                            \n                                 restoreToolbarOptions\n                            \n                            \n                                 transform\n                            \n                        \n                    \n                \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                about\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor()\n                        \n                    \n                            \n                                \n                                    Defined in src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:19\n                                \n                            \n    \n                \n            \n    \n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            options\n                        \n                        \n                              \n                                Type:    ToolbarOptionsInterface\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:17\n                                \n                            \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            \n                            about\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Defined in src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:19\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            toggle\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Defined in src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:18\n                                \n                            \n                \n            \n    \n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            Private clearState\n                        \n                    \n                    \n                        \n                                \n                            clearState(id: string)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:128\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      id\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             isToolbarPersisted\n                        \n                    \n                    \n                        \n    isToolbarPersisted(id: string)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:111\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      id\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     boolean\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             ngOnChanges\n                        \n                    \n                    \n                        \n    ngOnChanges(changes: SimpleChanges)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:27\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      changes\n                                                      \n                                                              SimpleChanges\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             onAboutClick\n                        \n                    \n                    \n                        \n    onAboutClick()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:57\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             onActionChange\n                        \n                    \n                    \n                        \n    onActionChange(action: ActionsEnum)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:61\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      action\n                                                      \n                                                              ActionsEnum\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             onToggleClick\n                        \n                    \n                    \n                        \n    onToggleClick()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:39\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            Private persist\n                        \n                    \n                    \n                        \n                                \n                            persist(options: ToolbarOptionsInterface)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:135\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      options\n                                                      \n                                                              ToolbarOptionsInterface\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             restoreToolbarOptions\n                        \n                    \n                    \n                        \n    restoreToolbarOptions(id: string)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:119\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      id\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     string\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                             transform\n                        \n                    \n                    \n                        \n    transform(options: ToolbarOptionsInterface)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:80\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      options\n                                                      \n                                                              ToolbarOptionsInterface\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     ToolbarOptionsInterface\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                             database\n                        \n                    \n                    \n                        \n                            database:     DatabaseServiceInterface\n    \n                        \n                    \n                        \n                            \n                                Type :     DatabaseServiceInterface\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts:33\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n    \n        import {Component, Input, Output, OnChanges, SimpleChanges, EventEmitter} from '@angular/core';\nimport {ToolbarInterface} from './toolbar.interface';\nimport {ToolbarOptionsInterface} from './toolbar-options.interface';\nimport {ActionsEnum, DatabaseServiceInterface, StateServiceInterface} from '../../index';\nimport {BaseComponent} from '../base.component';\n\n@Component({\n  moduleId: module.id,\n  selector: 'pz-toolbar',\n  templateUrl: 'toolbar.component.html',\n  styleUrls: [\n    'toolbar.component.css',\n  ],\n})\nexport class ToolbarComponent extends BaseComponent implements ToolbarInterface, OnChanges {\n\n  @Input() options: ToolbarOptionsInterface;\n  @Output() toggle: EventEmitter;\n  @Output() about: EventEmitter;\n\n  constructor() {\n    super();\n    this.toggle = new EventEmitter();\n    this.about = new EventEmitter();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.options) {\n      this.options = this.transform(this.options);\n    }\n  }\n\n  get database(): DatabaseServiceInterface {\n    let stateService: StateServiceInterface = this.options &&\n    this.options.hasOwnProperty('stateService') ? this.options.stateService : null;\n    return stateService ? stateService.databaseService : null;\n  }\n\n  onToggleClick(): void {\n    let action: ActionsEnum = this.options && this.options.actionService ? this.options.actionService.action : null;\n\n\n    if (this.options.state === 'PLAY') {\n      this.options.state = 'SOLVE';\n    } else {\n      this.options.state = 'PLAY';\n    }\n    this.persist(this.options);\n    this.options = this.transform(this.options);\n    if (action !== null) {\n      action = this.options.state === 'PLAY' ? ActionsEnum.SOLVE : ActionsEnum.PLAY;\n      this.options.actionService.action = action;\n    }\n    this.toggle.emit(this);\n  }\n\n  onAboutClick(): void {\n    this.about.emit(this);\n  }\n\n  onActionChange(action: ActionsEnum): void {\n    let state: string = this.options ? this.options.state : null;\n    if (state) {\n      switch (action) {\n        case ActionsEnum.PLAY:\n          state = 'SOLVE';\n          break;\n        case ActionsEnum.SOLVE:\n          state = 'PLAY';\n          break;\n      }\n      if (state !== this.options.state) {\n        this.options.state = state;\n        this.persist(this.options);\n        this.transform(this.options);\n      }\n    }\n  }\n\n  transform(options: ToolbarOptionsInterface): ToolbarOptionsInterface {\n\n    let state: string = this.isToolbarPersisted(options.id) ?\n      this.restoreToolbarOptions(options.id) : options.state;\n\n    if (this.subscriptions.length === 0) {\n      if (options.actionService) {\n        this.subscriptions.push(options.actionService.actionChange$\n          .subscribe(\n            (action: any) => this.onActionChange(action)\n          ));\n      }\n    }\n\n    switch (state) {\n      case 'PLAY': {\n        options.toggleText = 'Play';\n        options.toggleTitle = 'Play game';\n      }\n        break;\n      default: {\n        options.toggleText = 'Solve';\n        options.toggleTitle = 'Solve puzzle';\n      }\n        break;\n    }\n\n    return options;\n\n  }\n\n  isToolbarPersisted(id: string): boolean {\n    let databaseService: DatabaseServiceInterface = this.database;\n    if (databaseService) {\n      return databaseService.exists(id);\n    }\n    return false;\n  }\n\n  restoreToolbarOptions(id: string): string {\n    let databaseService: DatabaseServiceInterface = this.database,\n      state: string = null;\n    if (databaseService) {\n      state = databaseService.pull(id);\n    }\n    return state;\n  }\n\n  private clearState(id: string) {\n    let databaseService: DatabaseServiceInterface = this.database;\n    if (databaseService) {\n      databaseService.delete(id);\n    }\n  }\n\n  private persist(options: ToolbarOptionsInterface): void {\n    let databaseService: DatabaseServiceInterface = this.database;\n\n    if (databaseService) {\n      databaseService.push(options.id, options.state);\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'sd-about'},{'name': 'AppComponent', 'selector': 'sd-app'},{'name': 'HomeComponent', 'selector': 'sd-home'},{'name': 'LangSwitcherComponent', 'selector': 'lang-switcher'},{'name': 'NavbarComponent', 'selector': 'sd-navbar'},{'name': 'PuzzleComponent', 'selector': 'sd-puzzle'},{'name': 'ToolbarComponent', 'selector': 'pz-toolbar'},{'name': 'ToolbarComponent', 'selector': 'sd-toolbar'}];\n    var DIRECTIVES = [{'name': 'PlatformDirective', 'selector': '[platform]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/PlatformDirective.html":{"url":"directives/PlatformDirective.html","title":"directive - PlatformDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  PlatformDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/core/directives/platform.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [platform]\n                    \n\n                \n            \n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(el: ElementRef, renderer: Renderer, win: WindowService)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/directives/platform.directive.ts:10\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              el\n                                                              \n                                                                        ElementRef\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              renderer\n                                                              \n                                                                        Renderer\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              win\n                                                              \n                                                                        WindowService\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, Renderer } from '@angular/core';\n\n\nimport { WindowService } from '../services/window.service';\n\n@Directive({\n  selector: '[platform]'\n})\nexport class PlatformDirective {\n\n  constructor(private el: ElementRef, private renderer: Renderer, private win: WindowService) {\n    let platformClass = 'web';\n    let agent = win.navigator.userAgent.toLowerCase();\n    if (agent.indexOf('electron') > -1) {\n      platformClass = 'desktop';\n    } else if (agent.indexOf('nativescript') > -1) {\n      platformClass = 'nativescript';\n    } \n    renderer.setElementClass(el.nativeElement, platformClass, true);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActionsService.html":{"url":"injectables/ActionsService.html","title":"injectable - ActionsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ActionsService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/puzzle/actions/actions.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Private _action\n                                    \n                                    \n                                        Private _actionObserver\n                                    \n                                    \n                                         action\n                                    \n                                    \n                                         actionChange$\n                                    \n                                    \n                                         actionObserver\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor()\n                                \n                            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/actions/actions.service.ts:38\n                                        \n                                    \n            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Private _action\n                                \n                            \n                            \n                                \n                                    _action:     ActionsEnum\n            \n                                \n                            \n                                \n                                    \n                                        Type :     ActionsEnum\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/actions/actions.service.ts:14\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Private _actionObserver\n                                \n                            \n                            \n                                \n                                    _actionObserver:     Observer\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observer\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/actions/actions.service.ts:15\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     action\n                                \n                            \n                            \n                                \n                                    action:     ActionsEnum\n            \n                                \n                            \n                                \n                                    \n                                        Type :     ActionsEnum\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/actions/actions.service.ts:26\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     actionChange$\n                                \n                            \n                            \n                                \n                                    actionChange$:     Observable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observable\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/actions/actions.service.ts:12\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     actionObserver\n                                \n                            \n                            \n                                \n                                    actionObserver:     Observer\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observer\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/actions/actions.service.ts:18\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Observer} from 'rxjs/Observer';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/share';\nimport {ActionsEnum} from './actions.enum';\nimport {ActionsServiceInterface} from './actions-service.interface';\n\n@Injectable()\nexport class ActionsService implements ActionsServiceInterface {\n\n  actionChange$: Observable;\n\n  private _action: ActionsEnum;\n  private _actionObserver: Observer;\n\n\n  get actionObserver(): Observer {\n    return this._actionObserver;\n  }\n\n  set actionObserver(value: Observer) {\n    this._actionObserver = value;\n  }\n\n  get action(): ActionsEnum {\n    return this._action;\n  }\n\n  set action(value: ActionsEnum) {\n    if (this._action !== value) {\n      this._action = value;\n      if (this.actionObserver) {\n        this.actionObserver.next(value);\n      }\n    }\n    value = null;\n  }\n\n  constructor() {\n    this._action = ActionsEnum.START;\n    this.actionChange$ = new Observable(\n      (observer: any) => this.actionObserver = observer\n    ).share();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnalyticsService.html":{"url":"injectables/AnalyticsService.html","title":"injectable - AnalyticsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AnalyticsService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/analytics/services/analytics.service.ts\n        \n\n            \n                Description\n            \n            \n                Wrapper for Angulartics2\n\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public devMode\n                                    \n                                    \n                                        Public identify\n                                    \n                                    \n                                        Public pageTrack\n                                    \n                                    \n                                        Public track\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(angulartics2: Angulartics2, segment: Angulartics2Segment)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/client/app/modules/analytics/services/analytics.service.ts:22\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              angulartics2\n                                                              \n                                                                        Angulartics2\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              segment\n                                                              \n                                                                        Angulartics2Segment\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public devMode\n                                \n                            \n                            \n                                \n                                        \n                                    devMode(enable?: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/analytics/services/analytics.service.ts:68\n                                        \n                                    \n            \n                            \n                                \n                                        Control whether analytics are tracked\n            true: dev mode on, therefore do not track anything\n            false: dev mode off, track everything\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              enable\n                                                              \n                                                                      boolean\n                                                              \n                                                              \n                                                                  true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public identify\n                                \n                            \n                            \n                                \n                                        \n                                    identify(properties: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/analytics/services/analytics.service.ts:57\n                                        \n                                    \n            \n                            \n                                \n                                        Identify authenticated users\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              properties\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public pageTrack\n                                \n                            \n                            \n                                \n                                        \n                                    pageTrack(path: string, location: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/analytics/services/analytics.service.ts:48\n                                        \n                                    \n            \n                            \n                                \n                                        Called automatically by default with Angular 2 Routing\n            However, that can be turned off and this could be used manually\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              path\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              location\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public track\n                                \n                            \n                            \n                                \n                                        \n                                    track(action: string, properties: IAnalyticsProperties)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/analytics/services/analytics.service.ts:38\n                                        \n                                    \n            \n                            \n                                \n                                        Track actions, events, etc.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              action\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              properties\n                                                              \n                                                                      IAnalyticsProperties\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\n\n// libs\nimport * as _ from 'lodash';\nimport { Angulartics2, Angulartics2Segment } from 'angulartics2';\n\nexport interface IAnalyticsProperties {\n  category?: string;\n  label?: string;\n  value?: number;\n}\n\nexport interface IAnalytics {\n  track(action: string, properties: IAnalyticsProperties): void;\n}\n\n/**\n * Wrapper for Angulartics2\n */\n@Injectable()\nexport class AnalyticsService implements IAnalytics {\n\n  constructor(private angulartics2: Angulartics2, private segment: Angulartics2Segment) {\n    // options\n    // https://github.com/angulartics/angulartics2/blob/master/src/core/angulartics2.ts#L90-L104\n    tics2.virtualPageviews(value: boolean);\n    tics2.excludeRoutes(routes: Array);\n    tics2.firstPageview(value: boolean);\n    tics2.withBase(value: string);\n\n    this.devMode(false);\n  }\n\n  /**\n   * Track actions, events, etc.\n   **/\n  public track(action: string, properties: IAnalyticsProperties): void {\n    if (!this.devMode()) {\n      this.segment.eventTrack(action, properties);\n    }\n  }\n\n  /**\n   * Called automatically by default with Angular 2 Routing\n   * However, that can be turned off and this could be used manually\n   **/\n  public pageTrack(path: string, location: any) {\n    if (!this.devMode()) {\n      this.segment.pageTrack(path, location);\n    }\n  }\n\n  /**\n   * Identify authenticated users\n   **/\n  public identify(properties: any) {\n    if (!this.devMode()) {\n      this.segment.setUserProperties(properties);\n    }\n  }\n\n  /**\n   * Control whether analytics are tracked\n   * true: dev mode on, therefore do not track anything\n   * false: dev mode off, track everything\n   **/\n  public devMode(enable?: boolean): boolean {\n    if (typeof enable !== 'undefined') {\n      this.angulartics2.developerMode(enable);\n    }\n    return this.angulartics2.settings.developerMode;\n  }\n}\n\n/**\n * Base class\n * Standardizes tracking actions and categorization\n */\nexport class Analytics implements IAnalytics {\n  // sub-classes should define their category\n  public category: string;\n\n  constructor(@Inject(AnalyticsService) public analytics: AnalyticsService) {\n\n  }\n\n  /**\n   * Track actions, events, etc.\n   **/\n  track(action: string, properties: IAnalyticsProperties): void {\n    this.analytics.track(action, _.extend(properties, { category: this.category }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/core/services/app.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public analytics\n                                    \n                                    \n                                        Public log\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(analytics: AnalyticsService, log: LogService)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/app.service.ts:9\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              analytics\n                                                              \n                                                                        AnalyticsService\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              log\n                                                              \n                                                                        LogService\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public analytics\n                                \n                            \n                            \n                                \n                                    analytics:     AnalyticsService\n            \n                                \n                            \n                                \n                                    \n                                        Type :     AnalyticsService\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/app.service.ts:10\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public log\n                                \n                            \n                            \n                                \n                                    log:     LogService\n            \n                                \n                            \n                                \n                                    \n                                        Type :     LogService\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/app.service.ts:10\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n\nimport { AnalyticsService } from '../../../modules/analytics/services/analytics.service';\nimport { LogService } from './logging/log.service';\nimport { Config } from '../utils/config';\n\n@Injectable()\nexport class AppService {\n  constructor(public analytics: AnalyticsService, public log: LogService) {\n    this.log.debug(`AppService -> Config env: ${Config.ENVIRONMENT().ENV}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BoardService.html":{"url":"injectables/BoardService.html","title":"injectable - BoardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  BoardService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/puzzle/services/board/board.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Private _board\n                                    \n                                    \n                                        Private _boardObserver\n                                    \n                                    \n                                        Private _emptySquare\n                                    \n                                    \n                                         board\n                                    \n                                    \n                                         boardChange$\n                                    \n                                    \n                                         database\n                                    \n                                    \n                                         emptySquare\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         init\n                                    \n                                    \n                                         isSquarePersisted\n                                    \n                                    \n                                         persist\n                                    \n                                    \n                                         restoreSquareOptions\n                                    \n                                    \n                                         sequence\n                                    \n                                    \n                                         shiftX\n                                    \n                                    \n                                         slide\n                                    \n                                    \n                                         transform\n                                    \n                                    \n                                         transformStore\n                                    \n                                    \n                                         unPersist\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor()\n                                \n                            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/board.service.ts:46\n                                        \n                                    \n            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     init\n                                \n                            \n                            \n                                \n            init(stateService: StateServiceInterface, model: Board)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/board.service.ts:56\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              stateService\n                                                              \n                                                                      StateServiceInterface\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              model\n                                                              \n                                                                      Board\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     isSquarePersisted\n                                \n                            \n                            \n                                \n            isSquarePersisted(id: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/board.service.ts:168\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              id\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     persist\n                                \n                            \n                            \n                                \n            persist(options: Square)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/board.service.ts:193\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              options\n                                                              \n                                                                      Square\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     restoreSquareOptions\n                                \n                            \n                            \n                                \n            restoreSquareOptions(id: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/board.service.ts:176\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              id\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Square\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     sequence\n                                \n                            \n                            \n                                \n            sequence(model: Board, expect: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/board.service.ts:69\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              model\n                                                              \n                                                                      Board\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              expect\n                                                              \n                                                                      boolean\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     number[]\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     shiftX\n                                \n                            \n                            \n                                \n            shiftX(left: boolean, square: Square)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/board.service.ts:214\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              left\n                                                              \n                                                                      boolean\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              square\n                                                              \n                                                                      Square\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     slide\n                                \n                            \n                            \n                                \n            slide(left: boolean, square: Square, reps: number)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/board.service.ts:208\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              left\n                                                              \n                                                                      boolean\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              square\n                                                              \n                                                                      Square\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              reps\n                                                              \n                                                                      number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     transform\n                                \n                            \n                            \n                                \n            transform(model: Board)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/board.service.ts:88\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              model\n                                                              \n                                                                      Board\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     []\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     transformStore\n                                \n                            \n                            \n                                \n            transformStore(store: Row[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/board.service.ts:123\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              store\n                                                              \n                                                                      Row[]\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     []\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     unPersist\n                                \n                            \n                            \n                                \n            unPersist()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/board.service.ts:185\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Private _board\n                                \n                            \n                            \n                                \n                                    _board:     Board\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Board\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/board.service.ts:22\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Private _boardObserver\n                                \n                            \n                            \n                                \n                                    _boardObserver:     Observer\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observer\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/board.service.ts:23\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Private _emptySquare\n                                \n                            \n                            \n                                \n                                    _emptySquare:     Square\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Square\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/board.service.ts:24\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     board\n                                \n                            \n                            \n                                \n                                    board:     Board\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Board\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/board.service.ts:36\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     boardChange$\n                                \n                            \n                            \n                                \n                                    boardChange$:     Observable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observable\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/board.service.ts:19\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     database\n                                \n                            \n                            \n                                \n                                    database:     DatabaseServiceInterface\n            \n                                \n                            \n                                \n                                    \n                                        Type :     DatabaseServiceInterface\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/board.service.ts:20\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     emptySquare\n                                \n                            \n                            \n                                \n                                    emptySquare:     Square\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Square\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/board.service.ts:40\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Observer} from 'rxjs/Observer';\n\nimport {Board} from './board.model';\nimport {Row} from './row.model';\nimport {Square} from './square.model';\nimport {Utils} from '../../common/utils.common';\nimport {StateServiceInterface} from '../state/state-service.interface';\nimport {DatabaseServiceInterface} from '../database/database-service.interface';\n\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/share';\n\n\n@Injectable()\nexport class BoardService {\n\n  boardChange$: Observable;\n  database: DatabaseServiceInterface;\n\n  private _board: Board;\n  private _boardObserver: Observer;\n  private _emptySquare: Square;\n\n\n  set board(board: Board) {\n    if (this._board.toString() !== board.toString()) {\n      this._board = board;\n      if (this._boardObserver) {\n        this._boardObserver.next(board);\n      }\n    }\n  }\n\n  get board(): Board {\n    return this._board;\n  }\n\n  get emptySquare(): Square {\n    return this._emptySquare;\n  }\n\n  set emptySquare(value: Square) {\n    this._emptySquare = value;\n  }\n\n  constructor() {\n    this.database = null;\n    this._board = new Board();\n    this.boardChange$ = new Observable(\n      (observer: any) => this._boardObserver = observer\n    ).share();\n  }\n\n  init(stateService: StateServiceInterface, model: Board = null) {\n\n    let board: Board = model ? new Board(model.rowCount, model.colCount, model.isSolved, model.sequence, model.expectedSequence) : null;\n\n    if (stateService && stateService.databaseService) {\n      this.database = stateService.databaseService;\n    }\n    if (board) {\n      board.squares = this.transform(board);\n      this.board = board;\n    }\n  }\n\n  sequence(model: Board, expect: boolean = false): number[] {\n    let min: number = 1,\n      rows: number = model ? model.rowCount : null,\n      cols: number = model ? model.colCount : null,\n      max: number = rows && cols ? rows * cols : 0,\n      seq: number[] = [];\n\n    if (max > 0) {\n      if (!expect) {\n        seq = Utils.generateSequence(min, max, max);\n      } else {\n        seq = Utils.generateSequentialSequence(min, max);\n      }\n    }\n\n    return seq;\n\n  }\n\n  transform(model: Board): Square[] {\n    let row: number = 1,\n      i: number = 1,\n      pos: number = 0,\n      rows: number = model.rowCount,\n      cols: number = model.colCount,\n      isSolved: boolean = model.isSolved,\n      seq: number[] = model.sequence && model.sequence.length ? model.sequence : this.sequence(model),\n      expectedSeq: number[] = model.expectedSequence && model.expectedSequence.length ? model.expectedSequence :\n        this.sequence(model, true),\n      subSeq: number[] = [],\n      expectedSubSeq: number[] = [],\n      store: Row[] = [];\n\n    for (; row {\n        index: i,\n        isLast: row === rows ? true : false,\n        seq: subSeq,\n        expectedSeq: expectedSubSeq\n      });\n      i++;\n      pos += cols;\n    }\n\n    return this.transformStore(store);\n  }\n\n  transformStore(store: Row[]): Square[] {\n    let squares: Square[] = [],\n      emptySquares: Square[] = [];\n    store.forEach((row: Row) => {\n      if (row.seq && row.expectedSeq && row.seq.length === row.expectedSeq.length) {\n        row.seq.forEach((num, i) => {\n          let colClass: string = Utils.mapColClass(num),\n            squareValue: number = i {\n                id: squareId,\n                isEmpty: squareIsEmpty,\n                row: squareRow,\n                col: squareCol,\n                value: String(i),\n                expectedValue: String(squareExpectedValue),\n                cssClass: squareClass\n              };\n          squares.push(squareOptions);\n        });\n      }\n    });\n\n    emptySquares = squares.filter((square: Square) => {\n      return square.isEmpty;\n    });\n\n    if (emptySquares.length) {\n      this.emptySquare = emptySquares[0];\n    }\n\n    if (this.emptySquare) {\n      console.log('emptySquare');\n      console.log(JSON.stringify(this.emptySquare));\n    }\n\n    return squares;\n  }\n\n  isSquarePersisted(id: string): boolean {\n    let databaseService: DatabaseServiceInterface = this.database;\n    if (databaseService) {\n      return databaseService.exists(id);\n    }\n    return false;\n  }\n\n  restoreSquareOptions(id: string): Square {\n    let databaseService: DatabaseServiceInterface = this.database,\n      squareState: Square = null;\n    if (databaseService) {\n      squareState = databaseService.pull(id);\n    }\n    return squareState;\n  }\n\n  unPersist(): void {\n    let databaseService: DatabaseServiceInterface = this.database;\n\n    if (databaseService) {\n      databaseService.zero('row');\n    }\n  }\n\n  persist(options: Square = null): void {\n    let databaseService: DatabaseServiceInterface = this.database;\n    if (databaseService) {\n      if (options) {\n        databaseService.push(options.id, options);\n      } else {\n        if (this.board && this.board.squares) {\n          this.board.squares.forEach((square: Square) => {\n            this.persist(square);\n          });\n        }\n      }\n    }\n  }\n\n  slide(left: boolean, square: Square, reps: number) {\n    for (var i = 0; i  {\n        if (s.row === square.row) {\n          squareIndices.push(index);\n        }\n      });\n      if (squareIndices.length === 8) {\n        if (left) {\n          Utils.swap(this.board.squares[squareIndices[0]], this.board.squares[squareIndices[1]]);\n          Utils.swap(this.board.squares[squareIndices[1]], this.board.squares[squareIndices[2]]);\n          Utils.swap(this.board.squares[squareIndices[2]], this.board.squares[squareIndices[3]]);\n          Utils.swap(this.board.squares[squareIndices[3]], this.board.squares[squareIndices[4]]);\n          Utils.swap(this.board.squares[squareIndices[4]], this.board.squares[squareIndices[5]]);\n          Utils.swap(this.board.squares[squareIndices[5]], this.board.squares[squareIndices[6]]);\n          Utils.swap(this.board.squares[squareIndices[6]], this.board.squares[squareIndices[7]]);\n        } else {\n          Utils.swap(this.board.squares[squareIndices[7]], this.board.squares[squareIndices[6]]);\n          Utils.swap(this.board.squares[squareIndices[6]], this.board.squares[squareIndices[5]]);\n          Utils.swap(this.board.squares[squareIndices[5]], this.board.squares[squareIndices[4]]);\n          Utils.swap(this.board.squares[squareIndices[4]], this.board.squares[squareIndices[3]]);\n          Utils.swap(this.board.squares[squareIndices[3]], this.board.squares[squareIndices[2]]);\n          Utils.swap(this.board.squares[squareIndices[2]], this.board.squares[squareIndices[1]]);\n          Utils.swap(this.board.squares[squareIndices[1]], this.board.squares[squareIndices[0]]);\n        }\n\n        emptySquareIndices = squareIndices.filter((indice: number) => {\n            return this.board.squares[indice].isEmpty;\n        });\n\n        if (emptySquareIndices.length) {\n          this.emptySquare = this.board.squares[emptySquareIndices[0]];\n        }\n        this.persist();\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleService.html":{"url":"injectables/ConsoleService.html","title":"injectable - ConsoleService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ConsoleService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/core/services/console.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public debug\n                                    \n                                    \n                                        Public error\n                                    \n                                    \n                                        Public info\n                                    \n                                    \n                                        Public log\n                                    \n                                    \n                                        Public warn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public debug\n                                \n                            \n                            \n                                \n                                        \n                                    debug(m: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/console.service.ts:11\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              m\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public error\n                                \n                            \n                            \n                                \n                                        \n                                    error(m: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/console.service.ts:12\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              m\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public info\n                                \n                            \n                            \n                                \n                                        \n                                    info(m: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/console.service.ts:14\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              m\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public log\n                                \n                            \n                            \n                                \n                                        \n                                    log(m: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/console.service.ts:10\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              m\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public warn\n                                \n                            \n                            \n                                \n                                        \n                                    warn(m: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/console.service.ts:13\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              m\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n\nimport { IConsole } from '../interfaces/iconsole';\n\n@Injectable()\nexport class ConsoleService implements IConsole {\n  \n  public log(m: any): void { return; }\n  public debug(m: any): void { return; }\n  public error(m: any): void { return; }\n  public warn(m: any): void { return; }\n  public info(m: any): void { return; }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleTarget.html":{"url":"injectables/ConsoleTarget.html","title":"injectable - ConsoleTarget","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ConsoleTarget\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/core/services/logging/console.target.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         writeToLog\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(console: ConsoleService, options: LogTargetOptions)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/logging/console.target.ts:6\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              console\n                                                              \n                                                                        ConsoleService\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              options\n                                                              \n                                                                        LogTargetOptions\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     writeToLog\n                                \n                            \n                            \n                                \n            writeToLog(event: LogEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/logging/console.target.ts:11\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              event\n                                                              \n                                                                      LogEvent\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Injectable, Provider } from '@angular/core';\nimport { LogTargetBase, LogEvent, LogLevel, LogTargetOptions, LogTarget } from './log.target';\nimport { ConsoleService } from '../console.service';\n\n@Injectable()\nexport class ConsoleTarget extends LogTargetBase {\n  constructor(private console: ConsoleService, options: LogTargetOptions) {\n    super(options);\n  }\n\n  writeToLog(event: LogEvent) {\n    switch (event.level) {\n      case LogLevel.Debug:\n        this.console.log(event.message);\n        break;\n      case LogLevel.Info:\n        this.console.info(event.message);\n        break;\n      case LogLevel.Warning:\n        this.console.warn(event.message);\n        break;\n      case LogLevel.Error:\n        this.console.error(event.message);\n        break;\n    }\n    return Promise.resolve();\n  }\n}\n\nexport function createConsoleTarget(level: LogLevel, consoleService: ConsoleService) {\n  return new ConsoleTarget(consoleService, { minLogLevel: level });\n}\n\nexport function provideConsoleTarget(logLevel: LogLevel): Provider {\n  return {\n    provide: LogTarget, deps: [ConsoleService],\n    multi: true,\n    useFactory: (c: ConsoleService) => new ConsoleTarget(c, { minLogLevel: logLevel })\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/puzzle/services/database/local-storage.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         tables\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         connect\n                                    \n                                    \n                                         delete\n                                    \n                                    \n                                         exists\n                                    \n                                    \n                                         pull\n                                    \n                                    \n                                         push\n                                    \n                                    \n                                         zero\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     connect\n                                \n                            \n                            \n                                \n            connect()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/database/local-storage.service.ts:18\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     delete\n                                \n                            \n                            \n                                \n            delete(table: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/database/local-storage.service.ts:22\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              table\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     exists\n                                \n                            \n                            \n                                \n            exists(table: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/database/local-storage.service.ts:52\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              table\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     pull\n                                \n                            \n                            \n                                \n            pull(table: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/database/local-storage.service.ts:26\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              table\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     push\n                                \n                            \n                            \n                                \n            push(table: string, value: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/database/local-storage.service.ts:40\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              table\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              value\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     zero\n                                \n                            \n                            \n                                \n            zero(criteria: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/database/local-storage.service.ts:59\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              criteria\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     tables\n                                \n                            \n                            \n                                \n                                    tables:     string[]\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string[]\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/database/local-storage.service.ts:8\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {DatabaseServiceInterface} from './database-service.interface';\nimport {StorageService} from '../../../core/services/storage.service';\n\n@Injectable()\nexport class LocalStorageService implements DatabaseServiceInterface {\n\n  get tables(): string [] {\n    let tables: string[] = [];\n    if (this.connect()) {\n      for (let table in localStorage) {\n        tables.push(table);\n      }\n    }\n    return tables;\n  }\n\n  connect(): boolean {\n    return localStorage ? true : false;\n  }\n\n  delete(table: string): boolean {\n    return this.push(table, null);\n  }\n\n  pull(table: string):any {\n    if (this.connect()) {\n      if (localStorage.hasOwnProperty(table)) {\n        try {\n          return JSON.parse(localStorage[table]);\n        } catch (e) {\n          return {};\n        }\n      }\n    }\n\n    return null;\n  }\n\n  push(table: string, value: any): boolean {\n    if (this.connect()) {\n      if (!value) {\n        localStorage.removeItem(table);\n      } else {\n        localStorage[table] = JSON.stringify(value);\n      }\n      return true;\n    }\n    return false;\n  }\n\n  exists(table:string): boolean {\n    if (this.connect()) {\n      return localStorage.hasOwnProperty(table);\n    }\n    return false;\n  }\n\n  zero(criteria: string = null): void {\n    let tables: string[] = this.tables;\n    if (tables.length) {\n      tables.forEach((table:string) => {\n        if (criteria) {\n          if (table.indexOf(criteria) !== -1) {\n            this.delete(table);\n          }\n        } else {\n          this.delete(table);\n        }\n      });\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogService.html":{"url":"injectables/LogService.html","title":"injectable - LogService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LogService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/core/services/logging/log.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public debug\n                                    \n                                    \n                                        Public error\n                                    \n                                    \n                                        Public info\n                                    \n                                    \n                                        Private logEvent\n                                    \n                                    \n                                        Public warn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(targets: LogTarget[])\n                                \n                            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/logging/log.service.ts:10\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              targets\n                                                              \n                                                                        LogTarget[]\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public debug\n                                \n                            \n                            \n                                \n                                        \n                                    debug(...msg: any[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/logging/log.service.ts:16\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              msg\n                                                              \n                                                                      any[]\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public error\n                                \n                            \n                            \n                                \n                                        \n                                    error(...err: any[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/logging/log.service.ts:25\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              err\n                                                              \n                                                                      any[]\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public info\n                                \n                            \n                            \n                                \n                                        \n                                    info(...err: any[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/logging/log.service.ts:41\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              err\n                                                              \n                                                                      any[]\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Private logEvent\n                                \n                            \n                            \n                                \n                                        \n                                    logEvent(target: LogTarget, message: string | Object, level: LogLevel)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/logging/log.service.ts:48\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              target\n                                                              \n                                                                      LogTarget\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              message\n                                                              \n                                                                      string | Object\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              level\n                                                              \n                                                                      LogLevel\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public warn\n                                \n                            \n                            \n                                \n                                        \n                                    warn(...err: any[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/logging/log.service.ts:33\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              err\n                                                              \n                                                                      any[]\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Injectable, Inject, forwardRef } from '@angular/core';\nimport * as _ from 'lodash';\n\nimport { Config } from '../../utils/config';\nimport { ConsoleService } from '../console.service';\nimport { LogTarget, LogEvent, LogLevel } from './log.target';\n\n@Injectable()\nexport class LogService {\n\n  constructor( @Inject(LogTarget) private targets: LogTarget[]) {\n  }\n\n  // debug (standard output)\n  public debug(...msg) {\n    if (Config.DEBUG.LEVEL_4) {\n      // console.debug does not work on {N} apps... use `log`\n      return Promise.all(_.map(this.targets, logger => this.logEvent(logger, msg, LogLevel.Debug)));\n    }\n    return Promise.resolve();\n  }\n\n  // error\n  public error(...err) {\n    if (Config.DEBUG.LEVEL_4 || Config.DEBUG.LEVEL_3) {\n      return Promise.all(_.map(this.targets, logger => this.logEvent(logger, err, LogLevel.Error)));\n    }\n    return Promise.resolve();\n  }\n\n  // warn\n  public warn(...err) {\n    if (Config.DEBUG.LEVEL_4 || Config.DEBUG.LEVEL_2) {\n      return Promise.all(_.map(this.targets, logger => this.logEvent(logger, err, LogLevel.Warning)));\n    }\n    return Promise.resolve();\n  }\n\n  // info\n  public info(...err) {\n    if (Config.DEBUG.LEVEL_4 || Config.DEBUG.LEVEL_1) {\n      return Promise.all(_.map(this.targets, logger => this.logEvent(logger, err, LogLevel.Info)));\n    }\n    return Promise.resolve();\n  }\n\n  private logEvent(target: LogTarget, message: string | Object, level: LogLevel) {\n    return target.log({ level: level, message: message });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockLocationStrategy.html":{"url":"injectables/MockLocationStrategy.html","title":"injectable - MockLocationStrategy","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  MockLocationStrategy\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/core/testing/mocks/mock-location-strategy.ts\n        \n\n            \n                Description\n            \n            \n                A mock implementation of {@link LocationStrategy} that allows tests to fire simulated\nlocation events.\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         _subject\n                                    \n                                    \n                                         internalBaseHref\n                                    \n                                    \n                                         internalPath\n                                    \n                                    \n                                         internalTitle\n                                    \n                                    \n                                         urlChanges\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         back\n                                    \n                                    \n                                         forward\n                                    \n                                    \n                                         getBaseHref\n                                    \n                                    \n                                         onPopState\n                                    \n                                    \n                                         path\n                                    \n                                    \n                                         prepareExternalUrl\n                                    \n                                    \n                                         pushState\n                                    \n                                    \n                                         replaceState\n                                    \n                                    \n                                         simulatePopState\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor()\n                                \n                            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/testing/mocks/mock-location-strategy.ts:21\n                                        \n                                    \n            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     back\n                                \n                            \n                            \n                                \n            back()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/testing/mocks/mock-location-strategy.ts:62\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     forward\n                                \n                            \n                            \n                                \n            forward()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/testing/mocks/mock-location-strategy.ts:70\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getBaseHref\n                                \n                            \n                            \n                                \n            getBaseHref()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/testing/mocks/mock-location-strategy.ts:60\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     onPopState\n                                \n                            \n                            \n                                \n            onPopState(fn: function)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/testing/mocks/mock-location-strategy.ts:58\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              fn\n                                                              \n                                                                      function\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     path\n                                \n                            \n                            \n                                \n            path(includeHash: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/testing/mocks/mock-location-strategy.ts:29\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              includeHash\n                                                              \n                                                                      boolean\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     prepareExternalUrl\n                                \n                            \n                            \n                                \n            prepareExternalUrl(internal: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/testing/mocks/mock-location-strategy.ts:31\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              internal\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     pushState\n                                \n                            \n                            \n                                \n            pushState(ctx: any, title: string, path: string, query: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/testing/mocks/mock-location-strategy.ts:38\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              ctx\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              title\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              path\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              query\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     replaceState\n                                \n                            \n                            \n                                \n            replaceState(ctx: any, title: string, path: string, query: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/testing/mocks/mock-location-strategy.ts:48\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              ctx\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              title\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              path\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              query\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     simulatePopState\n                                \n                            \n                            \n                                \n            simulatePopState(url: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/testing/mocks/mock-location-strategy.ts:24\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              url\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     _subject\n                                \n                            \n                            \n                                \n                                    _subject:     EventEmitter\n            \n                                \n                            \n                                \n                                    \n                                        Type :     EventEmitter\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/testing/mocks/mock-location-strategy.ts:21\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     internalBaseHref\n                                \n                            \n                            \n                                \n                                    internalBaseHref:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : /\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/testing/mocks/mock-location-strategy.ts:16\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     internalPath\n                                \n                            \n                            \n                                \n                                    internalPath:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : /\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/testing/mocks/mock-location-strategy.ts:17\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     internalTitle\n                                \n                            \n                            \n                                \n                                    internalTitle:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/testing/mocks/mock-location-strategy.ts:18\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     urlChanges\n                                \n                            \n                            \n                                \n                                    urlChanges:     string[]\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string[]\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/testing/mocks/mock-location-strategy.ts:19\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import { LocationStrategy } from '@angular/common';\nimport { Injectable, EventEmitter } from '@angular/core';\n\n/**\n * A mock implementation of {@link LocationStrategy} that allows tests to fire simulated\n * location events.\n *\n * @stable\n */\n@Injectable()\nexport class MockLocationStrategy extends LocationStrategy {\n  internalBaseHref: string = '/';\n  internalPath: string = '/';\n  internalTitle: string = '';\n  urlChanges: string[] = [];\n  /** @internal */\n  _subject: EventEmitter = new EventEmitter();\n  constructor() { super(); }\n\n  simulatePopState(url: string): void {\n    this.internalPath = url;\n    this._subject.emit(new MockPopStateEvent(this.path()));\n  }\n\n  path(includeHash: boolean = false): string { return this.internalPath; }\n\n  prepareExternalUrl(internal: string): string {\n    if ((internal).startsWith('/') && (this.internalBaseHref).endsWith('/')) {\n      return this.internalBaseHref + internal.substring(1);\n    }\n    return this.internalBaseHref + internal;\n  }\n\n  pushState(ctx: any, title: string, path: string, query: string): void {\n    this.internalTitle = title;\n\n    var url = path + (query.length > 0 ? ('?' + query) : '');\n    this.internalPath = url;\n\n    var externalUrl = this.prepareExternalUrl(url);\n    this.urlChanges.push(externalUrl);\n  }\n\n  replaceState(ctx: any, title: string, path: string, query: string): void {\n    this.internalTitle = title;\n\n    var url = path + (query.length > 0 ? ('?' + query) : '');\n    this.internalPath = url;\n\n    var externalUrl = this.prepareExternalUrl(url);\n    this.urlChanges.push('replace: ' + externalUrl);\n  }\n\n  onPopState(fn: (value: any) => void): void { this._subject.subscribe({next: fn}); }\n\n  getBaseHref(): string { return this.internalBaseHref; }\n\n  back(): void {\n    if (this.urlChanges.length > 0) {\n      this.urlChanges.pop();\n      var nextUrl = this.urlChanges.length > 0 ? this.urlChanges[this.urlChanges.length - 1] : '';\n      this.simulatePopState(nextUrl);\n    }\n  }\n\n  forward(): void { throw 'not implemented'; }\n}\n\nclass MockPopStateEvent {\n  pop: boolean = true;\n  type: string = 'popstate';\n  constructor(public newUrl: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MultilingualEffects.html":{"url":"injectables/MultilingualEffects.html","title":"injectable - MultilingualEffects","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  MultilingualEffects\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/i18n/effects/multilingual.effect.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         change$\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(store: Store, actions$: Actions, multilangService: MultilingualService, languages: )\n                                \n                            \n                                    \n                                        \n                                            Defined in src/client/app/modules/i18n/effects/multilingual.effect.ts:32\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              store\n                                                              \n                                                                        Store\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              actions$\n                                                              \n                                                                        Actions\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              multilangService\n                                                              \n                                                                        MultilingualService\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              languages\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     change$\n                                \n                            \n                            \n                                \n                                    change$:     Observable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observable\n            \n                                    \n                                \n                                \n                                    \n                                        Decorators : Effect\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/i18n/effects/multilingual.effect.ts:18\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\n\n// libs\nimport { Store, Action } from '@ngrx/store';\nimport { Effect, Actions } from '@ngrx/effects';\nimport { includes, map } from 'lodash';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\n\n\nimport { MultilingualService, Languages } from '../services/multilingual.service';\nimport * as multilingual from '../actions/multilingual.action';\n\n@Injectable()\nexport class MultilingualEffects {\n\n  @Effect() change$: Observable = this.actions$\n    .ofType(multilingual.ActionTypes.CHANGE)\n    .map(action => {\n      let lang = action.payload;\n      if (includes(map(this.languages, 'code'), lang)) {\n        let langChangedAction = new multilingual.LangChangedAction(lang);\n        // track analytics\n        this.multilangService.track(langChangedAction.type, { label: langChangedAction.payload });\n        // change state\n        return new multilingual.LangChangedAction(lang);\n      } else {\n        // not supported (here for example)\n        return new multilingual.LangUnsupportedAction(lang);\n      }\n    });\n\n  constructor(\n    private store: Store,\n    private actions$: Actions,\n    private multilangService: MultilingualService,\n    @Inject(Languages) private languages\n  ) { }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MultilingualService.html":{"url":"injectables/MultilingualService.html","title":"injectable - MultilingualService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  MultilingualService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/i18n/services/multilingual.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public analytics\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(analytics: AnalyticsService, translate: TranslateService, win: WindowService, store: Store)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/client/app/modules/i18n/services/multilingual.service.ts:31\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              analytics\n                                                              \n                                                                        AnalyticsService\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              translate\n                                                              \n                                                                        TranslateService\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              win\n                                                              \n                                                                        WindowService\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              store\n                                                              \n                                                                        Store\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public analytics\n                                \n                            \n                            \n                                \n                                    analytics:     AnalyticsService\n            \n                                \n                            \n                                \n                                    \n                                        Type :     AnalyticsService\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/i18n/services/multilingual.service.ts:34\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, InjectionToken } from '@angular/core';\n\n// libs\nimport { Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\n\n\nimport { Analytics, AnalyticsService } from '../../analytics/index';\nimport { ILang } from '../../core/index';\nimport { WindowService } from '../../core/services/window.service';\nimport { IAppState } from '../../ngrx/index';\n\n\nimport { CATEGORY } from '../common/category.common';\nimport { IMultilingualState, initialState } from '../states/index';\nimport { ChangeAction } from '../actions/index';\n\n// provide supported languages at runtime\nexport const Languages: InjectionToken> = new InjectionToken('Languages');\n// optional view helper for language handling\n// {N} uses this to provide specific classes to SegmentedBar view bindings\nexport const LanguageViewHelper: InjectionToken> = new InjectionToken('LanguageViewHelper');\nexport const LanguageProviders = [\n  { provide: Languages, useValue: [] },\n  { provide: LanguageViewHelper, useValue: null }\n];\n\n// service\n@Injectable()\nexport class MultilingualService extends Analytics {\n\n  constructor(\n    public analytics: AnalyticsService,\n    private translate: TranslateService,\n    private win: WindowService,\n    private store: Store\n  ) {\n    super(analytics);\n    this.category = CATEGORY;\n\n    // this language will be used as a fallback when a translation isn't found in the current language\n    translate.setDefaultLang(initialState.lang);\n\n    // use browser/platform lang if available\n    let userLang = win.navigator.language.split('-')[0];\n\n    // subscribe to changes\n    store.select(s => s.i18n).subscribe((state: IMultilingualState) => {\n      // update ng2-translate which will cause translations to occur wherever the TranslatePipe is used in the view\n      this.translate.use(state.lang);\n    });\n\n    // init the lang\n    this.store.dispatch(new ChangeAction(userLang));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NameListService.html":{"url":"injectables/NameListService.html","title":"injectable - NameListService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  NameListService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/sample/services/name-list.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public analytics\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         getNames\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(analytics: AnalyticsService, http: Http)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/client/app/modules/sample/services/name-list.service.ts:16\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              analytics\n                                                              \n                                                                        AnalyticsService\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              http\n                                                              \n                                                                        Http\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getNames\n                                \n                            \n                            \n                                \n            getNames()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/sample/services/name-list.service.ts:26\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public analytics\n                                \n                            \n                            \n                                \n                                    analytics:     AnalyticsService\n            \n                                \n                            \n                                \n                                    \n                                        Type :     AnalyticsService\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/sample/services/name-list.service.ts:19\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n\n// libs\nimport { Observable } from 'rxjs/Observable';\n\n\nimport { Config } from '../../core/index';\nimport { Analytics, AnalyticsService } from '../../analytics/index';\n\n\nimport { NameList } from '../actions/index';\n\n@Injectable()\nexport class NameListService extends Analytics {\n\n  constructor(\n    public analytics: AnalyticsService,\n    private http: Http\n  ) {\n    super(analytics);\n    this.category = NameList.CATEGORY;\n  }\n\n  getNames(): Observable> {\n    return this.http.get(`${Config.IS_MOBILE_NATIVE() ? '/' : ''}assets/data.json`)\n      .map(res => res.json());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PuzzleStateService.html":{"url":"injectables/PuzzleStateService.html","title":"injectable - PuzzleStateService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  PuzzleStateService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/components/puzzle/puzzle-state.service.ts\n        \n\n\n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(databaseService: LocalStorageService)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/client/app/components/puzzle/puzzle-state.service.ts:9\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              databaseService\n                                                              \n                                                                        LocalStorageService\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport 'rxjs/add/operator/share';\nimport {\n  StateService,\n  LocalStorageService\n} from '../../modules/puzzle/index';\n\n@Injectable()\nexport class PuzzleStateService extends StateService {\n  constructor(databaseService: LocalStorageService) {\n    super(databaseService);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RouterExtensions.html":{"url":"injectables/RouterExtensions.html","title":"injectable - RouterExtensions","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  RouterExtensions\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/core/services/router-extensions.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public router\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public back\n                                    \n                                    \n                                        Public navigate\n                                    \n                                    \n                                        Public navigateByUrl\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(router: Router, locationStrategy: LocationStrategy)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/router-extensions.service.ts:26\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              router\n                                                              \n                                                                        Router\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              locationStrategy\n                                                              \n                                                                        LocationStrategy\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public back\n                                \n                            \n                            \n                                \n                                        \n                                    back()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/router-extensions.service.ts:38\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public navigate\n                                \n                            \n                            \n                                \n                                        \n                                    navigate(commands: Array, extras?: ExtendedNavigationExtras)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/router-extensions.service.ts:30\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              commands\n                                                              \n                                                                      Array\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              extras\n                                                              \n                                                                      ExtendedNavigationExtras\n                                                              \n                                                              \n                                                                  true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Promise\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public navigateByUrl\n                                \n                            \n                            \n                                \n                                        \n                                    navigateByUrl(url: string | UrlTree, options?: ExtendedNavigationExtras)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/router-extensions.service.ts:34\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              url\n                                                              \n                                                                      string | UrlTree\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              options\n                                                              \n                                                                      ExtendedNavigationExtras\n                                                              \n                                                              \n                                                                  true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Promise\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public router\n                                \n                            \n                            \n                                \n                                    router:     Router\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Router\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/router-extensions.service.ts:28\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { LocationStrategy } from '@angular/common';\nimport { Router, UrlTree, NavigationExtras } from '@angular/router';\n\nexport interface ExtendedNavigationExtras extends NavigationExtras {\n  // Options for nativescript\n  clearHistory?: boolean;\n  animated?: boolean;\n  transition?: { // See -> https://docs.nativescript.org/api-reference/interfaces/_ui_frame_.navigationtransition.html\n    name?: string;\n    instance?: any;\n    duration?: number;\n    curve?: any;\n  };\n  // END - Options for nativescript\n}\n\nexport interface IRouterExtensions {\n  navigate(commands: Array, extras?: ExtendedNavigationExtras): Promise;\n  navigateByUrl(url: string | UrlTree, options?: ExtendedNavigationExtras): Promise;\n  back(): void;\n}\n\n@Injectable()\nexport class RouterExtensions implements IRouterExtensions {\n\n  constructor(public router: Router, private locationStrategy: LocationStrategy) { }\n\n  public navigate(commands: Array, extras?: ExtendedNavigationExtras): Promise {\n    return this.router.navigate(commands, extras);\n  }\n\n  public navigateByUrl(url: string | UrlTree, options?: ExtendedNavigationExtras): Promise {\n    return this.router.navigateByUrl(url);\n  }\n\n  public back() {\n    this.locationStrategy.back();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RouterExtensionsMock.html":{"url":"injectables/RouterExtensionsMock.html","title":"injectable - RouterExtensionsMock","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  RouterExtensionsMock\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/core/testing/mocks/router-extensions.mock.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         back\n                                    \n                                    \n                                         navigate\n                                    \n                                    \n                                         navigateByUrl\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     back\n                                \n                            \n                            \n                                \n            back()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/testing/mocks/router-extensions.mock.ts:18\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     navigate\n                                \n                            \n                            \n                                \n            navigate(commands: Array, extras?: ExtendedNavigationExtras)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/testing/mocks/router-extensions.mock.ts:10\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              commands\n                                                              \n                                                                      Array\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              extras\n                                                              \n                                                                      ExtendedNavigationExtras\n                                                              \n                                                              \n                                                                  true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Promise\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     navigateByUrl\n                                \n                            \n                            \n                                \n            navigateByUrl(url: string | UrlTree, options?: ExtendedNavigationExtras)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/testing/mocks/router-extensions.mock.ts:14\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              url\n                                                              \n                                                                      string | UrlTree\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              options\n                                                              \n                                                                      ExtendedNavigationExtras\n                                                              \n                                                              \n                                                                  true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Promise\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { UrlTree } from '@angular/router';\n\n\nimport { IRouterExtensions, ExtendedNavigationExtras } from '../../services';\n\n@Injectable()\nexport class RouterExtensionsMock implements IRouterExtensions {\n  navigate(commands: Array, extras?: ExtendedNavigationExtras): Promise {\n    return Promise.resolve(true);\n  }\n\n  navigateByUrl(url: string | UrlTree, options?: ExtendedNavigationExtras): Promise {\n    return Promise.resolve(true);\n  }\n\n  back(): void {\n    return;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SampleEffects.html":{"url":"injectables/SampleEffects.html","title":"injectable - SampleEffects","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SampleEffects\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/sample/effects/sample.effect.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         add$\n                                    \n                                    \n                                         init$\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(store: Store, actions$: Actions, nameListService: NameListService)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/client/app/modules/sample/effects/sample.effect.ts:38\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              store\n                                                              \n                                                                        Store\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              actions$\n                                                              \n                                                                        Actions\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              nameListService\n                                                              \n                                                                        NameListService\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     add$\n                                \n                            \n                            \n                                \n                                    add$:     Observable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observable\n            \n                                    \n                                \n                                \n                                    \n                                        Decorators : Effect\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/sample/effects/sample.effect.ts:31\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     init$\n                                \n                            \n                            \n                                \n                                    init$:     Observable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observable\n            \n                                    \n                                \n                                \n                                    \n                                        Decorators : Effect\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/sample/effects/sample.effect.ts:20\n                                        \n                                    \n            \n                            \n                                \n                                    This effect makes use of the startWith operator to trigger\n            the effect immediately on startup.\n            \n                                \n                            \n            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n// libs\nimport { Store, Action } from '@ngrx/store';\nimport { Effect, Actions } from '@ngrx/effects';\nimport { Observable } from 'rxjs/Observable';\n\n\nimport { NameListService } from '../services/name-list.service';\nimport { NameList } from '../actions/index';\n\n@Injectable()\nexport class SampleEffects {\n\n  /**\n   * This effect makes use of the `startWith` operator to trigger\n   * the effect immediately on startup.\n   */\n  @Effect() init$: Observable = this.actions$\n    .ofType(NameList.ActionTypes.INIT)\n    .startWith(new NameList.InitAction)\n    .switchMap(() => this.nameListService.getNames())\n    .map(payload => {\n      let names = payload;\n      return new NameList.InitializedAction(names);\n    })\n    // nothing reacting to failure at moment but you could if you want (here for example)\n    .catch(() => Observable.of(new NameList.InitFailedAction()));\n\n  @Effect() add$: Observable = this.actions$\n    .ofType(NameList.ActionTypes.ADD)\n    .map(action => {\n      let name = action.payload;\n      // analytics\n      this.nameListService.track(NameList.ActionTypes.NAME_ADDED, { label: name });\n      return new NameList.NameAddedAction(name);\n    });\n\n  constructor(\n    private store: Store,\n    private actions$: Actions,\n    private nameListService: NameListService\n  ) { }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateService.html":{"url":"injectables/StateService.html","title":"injectable - StateService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StateService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/puzzle/services/state/state.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Private _stateEvent\n                                    \n                                    \n                                        Private _stateEventObserver\n                                    \n                                    \n                                        Public databaseService\n                                    \n                                    \n                                         stateEvent\n                                    \n                                    \n                                         stateEventChange$\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(databaseService: LocalStorageService)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/state/state.service.ts:15\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              databaseService\n                                                              \n                                                                        LocalStorageService\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Private _stateEvent\n                                \n                            \n                            \n                                \n                                    _stateEvent:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/state/state.service.ts:14\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Private _stateEventObserver\n                                \n                            \n                            \n                                \n                                    _stateEventObserver:     Observer\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observer\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/state/state.service.ts:15\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public databaseService\n                                \n                            \n                            \n                                \n                                    databaseService:     LocalStorageService\n            \n                                \n                            \n                                \n                                    \n                                        Type :     LocalStorageService\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/state/state.service.ts:17\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     stateEvent\n                                \n                            \n                            \n                                \n                                    stateEvent:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/state/state.service.ts:27\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     stateEventChange$\n                                \n                            \n                            \n                                \n                                    stateEventChange$:     Observable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observable\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/state/state.service.ts:12\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Observer} from 'rxjs/Observer';\nimport 'rxjs/add/operator/share';\nimport {LocalStorageService} from './../database/local-storage.service';\nimport {StateServiceInterface} from './state-service.interface';\n\n@Injectable()\nexport class StateService implements StateServiceInterface {\n\n\n  stateEventChange$: Observable;\n\n  private _stateEvent: string;\n  private _stateEventObserver: Observer;\n\n  constructor(public databaseService: LocalStorageService) {\n\n    this._stateEvent = 'init';\n\n    this.stateEventChange$ = new Observable(\n      (observer:any) => this._stateEventObserver = observer\n    ).share();\n\n  }\n\n  get stateEvent(): string {\n    return this._stateEvent;\n  }\n\n  set stateEvent(value: string) {\n    if (this.stateEvent !== value) {\n      this.stateEvent = value;\n      if (this._stateEventObserver) {\n        this._stateEventObserver.next(value);\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/core/services/storage.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         getItem\n                                    \n                                    \n                                         removeItem\n                                    \n                                    \n                                         setItem\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getItem\n                                \n                            \n                            \n                                \n            getItem(key: StorageKey)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/storage.service.ts:14\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              key\n                                                              \n                                                                      StorageKey\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     removeItem\n                                \n                            \n                            \n                                \n            removeItem(key: StorageKey)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/storage.service.ts:19\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              key\n                                                              \n                                                                      StorageKey\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     setItem\n                                \n                            \n                            \n                                \n            setItem(key: StorageKey, value: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/storage.service.ts:10\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              key\n                                                              \n                                                                      StorageKey\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              value\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n\nimport { IStorage, StorageKey } from '../interfaces/istorage';\n\n@Injectable()\nexport class StorageService implements IStorage {\n\n  setItem(key: StorageKey, value: any): void {\n    localStorage.setItem('' + key, value === null ? null : JSON.stringify(value));\n  }\n\n  getItem(key: StorageKey): any {\n    const value = localStorage.getItem('' + key);\n    return value === null ? null : JSON.parse(value);\n  }\n\n  removeItem(key: StorageKey): void {\n    localStorage.removeItem('' + key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WindowService.html":{"url":"injectables/WindowService.html","title":"injectable - WindowService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  WindowService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/core/services/window.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public location\n                                    \n                                    \n                                        Public navigator\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public alert\n                                    \n                                    \n                                        Public confirm\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public alert\n                                \n                            \n                            \n                                \n                                        \n                                    alert(msg: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/window.service.ts:12\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              msg\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public confirm\n                                \n                            \n                            \n                                \n                                        \n                                    confirm(msg: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/window.service.ts:13\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              msg\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public location\n                                \n                            \n                            \n                                \n                                    location:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/window.service.ts:11\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public navigator\n                                \n                            \n                            \n                                \n                                    navigator:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/window.service.ts:10\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n\nimport { IWindow } from '../interfaces/iwindow';\n\n@Injectable()\nexport class WindowService implements IWindow {\n  \n  public navigator: any = {};\n  public location: any = {};\n  public alert(msg: string): void { return; }\n  public confirm(msg: string): void { return; }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Analytics.html":{"url":"classes/Analytics.html","title":"class - Analytics","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  Analytics\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/analytics/services/analytics.service.ts\n        \n\n            \n                Description\n            \n            \n                Base class\nStandardizes tracking actions and categorization\n\n            \n\n\n            \n                Implements\n            \n            \n                        IAnalytics\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public analytics\n                                    \n                                    \n                                        Public category\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         track\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(analytics: AnalyticsService)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/client/app/modules/analytics/services/analytics.service.ts:82\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              analytics\n                                                              \n                                                                        AnalyticsService\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     track\n                                \n                            \n                            \n                                \n            track(action: string, properties: IAnalyticsProperties)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/analytics/services/analytics.service.ts:91\n                                        \n                                    \n            \n                            \n                                \n                                        Track actions, events, etc.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              action\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              properties\n                                                              \n                                                                      IAnalyticsProperties\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public analytics\n                                \n                            \n                            \n                                \n                                    analytics:     AnalyticsService\n            \n                                \n                            \n                                \n                                    \n                                        Type :     AnalyticsService\n            \n                                    \n                                \n                                \n                                    \n                                        Decorators : Inject\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/analytics/services/analytics.service.ts:84\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public category\n                                \n                            \n                            \n                                \n                                    category:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/analytics/services/analytics.service.ts:82\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\n\n// libs\nimport * as _ from 'lodash';\nimport { Angulartics2, Angulartics2Segment } from 'angulartics2';\n\nexport interface IAnalyticsProperties {\n  category?: string;\n  label?: string;\n  value?: number;\n}\n\nexport interface IAnalytics {\n  track(action: string, properties: IAnalyticsProperties): void;\n}\n\n/**\n * Wrapper for Angulartics2\n */\n@Injectable()\nexport class AnalyticsService implements IAnalytics {\n\n  constructor(private angulartics2: Angulartics2, private segment: Angulartics2Segment) {\n    // options\n    // https://github.com/angulartics/angulartics2/blob/master/src/core/angulartics2.ts#L90-L104\n    tics2.virtualPageviews(value: boolean);\n    tics2.excludeRoutes(routes: Array);\n    tics2.firstPageview(value: boolean);\n    tics2.withBase(value: string);\n\n    this.devMode(false);\n  }\n\n  /**\n   * Track actions, events, etc.\n   **/\n  public track(action: string, properties: IAnalyticsProperties): void {\n    if (!this.devMode()) {\n      this.segment.eventTrack(action, properties);\n    }\n  }\n\n  /**\n   * Called automatically by default with Angular 2 Routing\n   * However, that can be turned off and this could be used manually\n   **/\n  public pageTrack(path: string, location: any) {\n    if (!this.devMode()) {\n      this.segment.pageTrack(path, location);\n    }\n  }\n\n  /**\n   * Identify authenticated users\n   **/\n  public identify(properties: any) {\n    if (!this.devMode()) {\n      this.segment.setUserProperties(properties);\n    }\n  }\n\n  /**\n   * Control whether analytics are tracked\n   * true: dev mode on, therefore do not track anything\n   * false: dev mode off, track everything\n   **/\n  public devMode(enable?: boolean): boolean {\n    if (typeof enable !== 'undefined') {\n      this.angulartics2.developerMode(enable);\n    }\n    return this.angulartics2.settings.developerMode;\n  }\n}\n\n/**\n * Base class\n * Standardizes tracking actions and categorization\n */\nexport class Analytics implements IAnalytics {\n  // sub-classes should define their category\n  public category: string;\n\n  constructor(@Inject(AnalyticsService) public analytics: AnalyticsService) {\n\n  }\n\n  /**\n   * Track actions, events, etc.\n   **/\n  track(action: string, properties: IAnalyticsProperties): void {\n    this.analytics.track(action, _.extend(properties, { category: this.category }));\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseComponent.html":{"url":"classes/BaseComponent.html","title":"class - BaseComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  BaseComponent\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/puzzle/components/base.component.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         subscriptions\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Protected clearSubscriptions\n                                    \n                                    \n                                        Protected consoleLogMsg\n                                    \n                                    \n                                        Protected handleErrors\n                                    \n                                    \n                                         ngOnDestroy\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor()\n                                \n                            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/components/base.component.ts:8\n                                        \n                                    \n            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Protected clearSubscriptions\n                                \n                            \n                            \n                                \n                                        \n                                    clearSubscriptions()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/components/base.component.ts:18\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Protected consoleLogMsg\n                                \n                            \n                            \n                                \n                                        \n                                    consoleLogMsg(tag: string, msg: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/components/base.component.ts:29\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              tag\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              msg\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Protected handleErrors\n                                \n                            \n                            \n                                \n                                        \n                                    handleErrors(error: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/components/base.component.ts:25\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              error\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     ngOnDestroy\n                                \n                            \n                            \n                                \n            ngOnDestroy()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/components/base.component.ts:14\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     subscriptions\n                                \n                            \n                            \n                                \n                                    subscriptions:     Array\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Array\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/components/base.component.ts:8\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import {OnDestroy} from '@angular/core';\nimport {ISubscription} from 'rxjs/Subscription';\nimport {PuzzleConfig} from '../common/index';\n\n\nexport class BaseComponent implements OnDestroy {\n\n  subscriptions: Array;\n\n  constructor() {\n    this.subscriptions = [];\n  }\n\n  ngOnDestroy() {\n    this.clearSubscriptions();\n  }\n\n  protected clearSubscriptions(): void {\n    this.subscriptions.map((subscription: ISubscription) => {\n      subscription.unsubscribe();\n    });\n    this.subscriptions = [];\n  }\n\n  protected handleErrors(error: any): any {\n    this.consoleLogMsg('ERROR', error);\n  }\n\n  protected consoleLogMsg(tag: string, msg: string): void {\n    if (PuzzleConfig.isDev === true) {\n      console.log(tag + ': ' + msg);\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseService.html":{"url":"classes/BaseService.html","title":"class - BaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  BaseService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/puzzle/services/base.service.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         subscriptions\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Protected clearSubscriptions\n                                    \n                                    \n                                        Protected consoleLogMsg\n                                    \n                                    \n                                        Protected consoleLogRecord\n                                    \n                                    \n                                        Protected handleErrors\n                                    \n                                    \n                                         ngOnDestroy\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor()\n                                \n                            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/base.service.ts:9\n                                        \n                                    \n            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Protected clearSubscriptions\n                                \n                            \n                            \n                                \n                                        \n                                    clearSubscriptions()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/base.service.ts:19\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Protected consoleLogMsg\n                                \n                            \n                            \n                                \n                                        \n                                    consoleLogMsg(tag: string, msg: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/base.service.ts:30\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              tag\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              msg\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Protected consoleLogRecord\n                                \n                            \n                            \n                                \n                                        \n                                    consoleLogRecord(i: , model: ModelInterface)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/base.service.ts:36\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              i\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              model\n                                                              \n                                                                      ModelInterface\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Protected handleErrors\n                                \n                            \n                            \n                                \n                                        \n                                    handleErrors(error: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/base.service.ts:26\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              error\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     ngOnDestroy\n                                \n                            \n                            \n                                \n            ngOnDestroy()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/base.service.ts:15\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     subscriptions\n                                \n                            \n                            \n                                \n                                    subscriptions:     Array\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Array\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/base.service.ts:9\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import {OnDestroy} from '@angular/core';\nimport {ISubscription} from 'rxjs/Subscription';\nimport {PuzzleConfig} from '../common/index';\nimport {ModelInterface} from '../interfaces/model.interface';\n\n\nexport class BaseService implements OnDestroy {\n\n  subscriptions: Array;\n\n  constructor() {\n    this.subscriptions = [];\n  }\n\n  ngOnDestroy() {\n    this.clearSubscriptions();\n  }\n\n  protected clearSubscriptions(): void {\n    this.subscriptions.map((subscription: ISubscription) => {\n      subscription.unsubscribe();\n    });\n    this.subscriptions = [];\n  }\n\n  protected handleErrors(error: any): any {\n    this.consoleLogMsg('ERROR', error);\n  }\n\n  protected consoleLogMsg(tag: string, msg: string): void {\n    if (PuzzleConfig.isDev === true) {\n      console.log(tag + ': ' + msg);\n    }\n  }\n\n  protected consoleLogRecord(i, model: ModelInterface): void {\n    if (PuzzleConfig.isDev === true) {\n      console.log('record #' + i + ' = ' + model.toString());\n    }\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Board.html":{"url":"classes/Board.html","title":"class - Board","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  Board\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/puzzle/services/board/board.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ModelInterface\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Private _squares\n                                    \n                                    \n                                        Public colCount\n                                    \n                                    \n                                        Public expectedSequence\n                                    \n                                    \n                                        Public isSolved\n                                    \n                                    \n                                        Public rowCount\n                                    \n                                    \n                                        Public sequence\n                                    \n                                    \n                                         squares\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         toString\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(rowCount: number, colCount: number, isSolved: boolean, sequence: number[], expectedSequence: number[])\n                                \n                            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/board.model.ts:14\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              rowCount\n                                                              \n                                                                        number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              colCount\n                                                              \n                                                                        number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              isSolved\n                                                              \n                                                                        boolean\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              sequence\n                                                              \n                                                                        number[]\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              expectedSequence\n                                                              \n                                                                        number[]\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     toString\n                                \n                            \n                            \n                                \n            toString()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/board.model.ts:26\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     string\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Private _squares\n                                \n                            \n                            \n                                \n                                    _squares:     Square[]\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Square[]\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/board.model.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public colCount\n                                \n                            \n                            \n                                \n                                    colCount:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : 0\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/board.model.ts:18\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public expectedSequence\n                                \n                            \n                            \n                                \n                                    expectedSequence:     number[]\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number[]\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/board.model.ts:21\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public isSolved\n                                \n                            \n                            \n                                \n                                    isSolved:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : false\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/board.model.ts:19\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public rowCount\n                                \n                            \n                            \n                                \n                                    rowCount:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : 0\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/board.model.ts:17\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public sequence\n                                \n                            \n                            \n                                \n                                    sequence:     number[]\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number[]\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/board.model.ts:20\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     squares\n                                \n                            \n                            \n                                \n                                    squares:     Square[]\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Square[]\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/board.model.ts:8\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import { Square } from './square.model';\nimport { ModelInterface } from '../../interfaces/model.interface';\n\nexport class Board implements ModelInterface {\n\n  private _squares: Square[];\n\n  get squares(): Square[] {\n    return this._squares;\n  }\n\n  set squares(value: Square[]) {\n    this._squares = value;\n  }\n\n  constructor(\n    public rowCount: number = 0,\n    public colCount: number = 0,\n    public isSolved: boolean = false,\n    public sequence: number[] = [],\n    public expectedSequence: number[] = []\n  ) {\n    this._squares = [];\n  }\n\n  toString(): string {\n    return '{ rows: ' + this.rowCount + ', cols: ' + this.colCount + ', isSolved: ' +\n      this.isSolved + ', sequence: ' + JSON.stringify(this.sequence) +\n      ', expectedSequence: ' + JSON.stringify(this.expectedSequence) +\n      ', squares:' + this._squares.length + ' }';\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeAction.html":{"url":"classes/ChangeAction.html","title":"class - ChangeAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeAction\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/i18n/actions/multilingual.action.ts\n        \n\n            \n                Description\n            \n            \n                Every action is comprised of at least a type and an optional\npayload. Expressing actions as classes enables powerful\ntype checking in reducer functions.\nSee Discriminated Unions: https://www.typescriptlang.org/docs/handbook/advanced-types.html#discriminated-unions\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public payload\n                                    \n                                    \n                                         type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(payload: string)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/client/app/modules/i18n/actions/multilingual.action.ts:38\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              payload\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public payload\n                                \n                            \n                            \n                                \n                                    payload:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/i18n/actions/multilingual.action.ts:40\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     type\n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                    \n                                        \n                                            Defined in src/client/app/modules/i18n/actions/multilingual.action.ts:38\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\n\nimport { type } from '../../core/utils/type';\n\n\nimport { CATEGORY } from '../common/category.common';\n\n/**\n * For each action type in an action group, make a simple\n * enum object for all of this group's action types.\n *\n * The 'type' utility function coerces strings into string\n * literal types and runs a simple check to guarantee all\n * action types in the application are unique.\n */\nexport interface IMultilingualActions {\n  CHANGE: string;\n  LANG_CHANGED: string;\n  LANG_UNSUPPORTED: string;\n}\n\nexport const ActionTypes: IMultilingualActions = {\n  CHANGE:           type(`[${CATEGORY}] Change`),\n  LANG_CHANGED:     type(`[${CATEGORY}] Lang Changed`),\n  LANG_UNSUPPORTED: type(`[${CATEGORY}] Lang Unsupported`)\n};\n\n/**\n * Every action is comprised of at least a type and an optional\n * payload. Expressing actions as classes enables powerful\n * type checking in reducer functions.\n *\n * See Discriminated Unions: https://www.typescriptlang.org/docs/handbook/advanced-types.html#discriminated-unions\n */\nexport class ChangeAction implements Action {\n  type = ActionTypes.CHANGE;\n\n  constructor(public payload: string) { }\n}\n\nexport class LangChangedAction implements Action {\n  type = ActionTypes.LANG_CHANGED;\n\n  constructor(public payload: string) { }\n}\n\nexport class LangUnsupportedAction implements Action {\n  type = ActionTypes.LANG_UNSUPPORTED;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Export a type alias of all actions in this action group\n * so that reducers can easily compose action types\n */\nexport type Actions\n  = ChangeAction\n  | LangChangedAction\n  | LangUnsupportedAction;\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Config.html":{"url":"classes/Config.html","title":"class - Config","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  Config\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/core/utils/config.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public DEBUG\n                                    \n                                    \n                                        Public PageClass\n                                    \n                                    \n                                        Public PLATFORM_TARGET\n                                    \n                                    \n                                        Public PLATFORMS\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public ENVIRONMENT\n                                    \n                                    \n                                        Public GET_SUPPORTED_LANGUAGES\n                                    \n                                    \n                                        Public IS_DEBUG_MODE\n                                    \n                                    \n                                        Public IS_DESKTOP\n                                    \n                                    \n                                        Public IS_MOBILE_HYBRID\n                                    \n                                    \n                                        Public IS_MOBILE_NATIVE\n                                    \n                                    \n                                        Public IS_WEB\n                                    \n                                    \n                                        Public RESET\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public ENVIRONMENT\n                                \n                            \n                            \n                                \n                                        \n                                    ENVIRONMENT()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/utils/config.ts:55\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     EnvConfig\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public GET_SUPPORTED_LANGUAGES\n                                \n                            \n                            \n                                \n                                        \n                                    GET_SUPPORTED_LANGUAGES()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/utils/config.ts:64\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     {}\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public IS_DEBUG_MODE\n                                \n                            \n                            \n                                \n                                        \n                                    IS_DEBUG_MODE()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/utils/config.ts:74\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public IS_DESKTOP\n                                \n                            \n                            \n                                \n                                        \n                                    IS_DESKTOP()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/utils/config.ts:51\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public IS_MOBILE_HYBRID\n                                \n                            \n                            \n                                \n                                        \n                                    IS_MOBILE_HYBRID()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/utils/config.ts:47\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public IS_MOBILE_NATIVE\n                                \n                            \n                            \n                                \n                                        \n                                    IS_MOBILE_NATIVE()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/utils/config.ts:43\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public IS_WEB\n                                \n                            \n                            \n                                \n                                        \n                                    IS_WEB()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/utils/config.ts:39\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public RESET\n                                \n                            \n                            \n                                \n                                        \n                                    RESET()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/utils/config.ts:85\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public DEBUG\n                                \n                            \n                            \n                                \n                                    DEBUG:     \n            \n                                \n                            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/utils/config.ts:20\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public PageClass\n                                \n                            \n                            \n                                \n                                    PageClass:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/utils/config.ts:17\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public PLATFORM_TARGET\n                                \n                            \n                            \n                                \n                                    PLATFORM_TARGET:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/utils/config.ts:36\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public PLATFORMS\n                                \n                            \n                            \n                                \n                                    PLATFORMS:     IPlatforms\n            \n                                \n                            \n                                \n                                    \n                                        Type :     IPlatforms\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/utils/config.ts:28\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        export interface EnvConfig {\n  API?: string;\n  ENV?: string;\n}\n\nexport interface IPlatforms {\n  WEB: string;\n  MOBILE_NATIVE: string;\n  MOBILE_HYBRID: string;\n  DESKTOP: string;\n}\n\nexport class Config {\n\n  public static PageClass: any;\n\n\n  public static DEBUG = {\n    LEVEL_1: false, // .info only\n    LEVEL_2: false, // .warn only\n    LEVEL_3: false, // .error only\n    LEVEL_4: false  // .log + all the above\n  };\n\n  // supported platforms\n  public static PLATFORMS: IPlatforms = {\n    WEB: 'web',\n    MOBILE_NATIVE: 'mobile_native',\n    MOBILE_HYBRID: 'mobile_hybrid',\n    DESKTOP: 'desktop'\n  };\n\n  // current target (defaults to web)\n  public static PLATFORM_TARGET: string = Config.PLATFORMS.WEB;\n\n  // convenient platform checks\n  public static IS_WEB(): boolean {\n    return Config.PLATFORM_TARGET === Config.PLATFORMS.WEB;\n  }\n\n  public static IS_MOBILE_NATIVE(): boolean {\n    return Config.PLATFORM_TARGET === Config.PLATFORMS.MOBILE_NATIVE;\n  }\n\n  public static IS_MOBILE_HYBRID(): boolean {\n    return Config.PLATFORM_TARGET === Config.PLATFORMS.MOBILE_HYBRID;\n  }\n\n  public static IS_DESKTOP(): boolean {\n    return Config.PLATFORM_TARGET === Config.PLATFORMS.DESKTOP;\n  }\n\n  public static ENVIRONMENT(): EnvConfig {\n    try {\n      return JSON.parse('');\n    } catch (exp) {\n      return {};\n    }\n  }\n\n  // supported languages\n  public static GET_SUPPORTED_LANGUAGES() {\n    return [\n      { code: 'en', title: 'English' },\n      { code: 'es', title: 'Spanish' },\n      { code: 'fr', title: 'French' },\n      { code: 'ru', title: 'Russian' },\n      { code: 'bg', title: 'Bulgarian' }\n    ];\n  }\n\n  public static IS_DEBUG_MODE(): boolean {\n    for (let key in Config.DEBUG) {\n      if (Config.DEBUG[key]) {\n        // if any level is on, debug mode is on\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // reset debug defaults\n  public static RESET() {\n    for (let key in Config.DEBUG) {\n      Config.DEBUG[key] = false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigMock.html":{"url":"classes/ConfigMock.html","title":"class - ConfigMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigMock\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/core/testing/mocks/ng2-config.mock.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         getSettings\n                                    \n                                    \n                                         init\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getSettings\n                                \n                            \n                            \n                                \n            getSettings(group?: string, key?: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/testing/mocks/ng2-config.mock.ts:6\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              group\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                                  true\n                                                              \n                                                              \n                                                            \n                                                            \n                                                              key\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                                  true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     init\n                                \n                            \n                            \n                                \n            init()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/testing/mocks/ng2-config.mock.ts:2\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     any\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export class ConfigMock {\n  init(): any {\n    return null;\n  }\n\n  getSettings(group?: string, key?: string): any {\n    return {\n      i18n: {\n        defaultLanguage: {\n          code: 'en',\n          title: 'English'\n        },\n        availableLanguages: [\n          {\n            code: 'en',\n            title: 'English'\n          }\n        ]\n      },\n      logging: {\n        DEBUG: {\n          LEVEL_1: false,\n          LEVEL_2: false,\n          LEVEL_3: false,\n          LEVEL_4: false\n        }\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigMockMultilang.html":{"url":"classes/ConfigMockMultilang.html","title":"class - ConfigMockMultilang","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigMockMultilang\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/i18n/testing/mocks/ng2-config-multilang.mock.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         getSettings\n                                    \n                                    \n                                         init\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getSettings\n                                \n                            \n                            \n                                \n            getSettings(group?: string, key?: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/i18n/testing/mocks/ng2-config-multilang.mock.ts:6\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              group\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                                  true\n                                                              \n                                                              \n                                                            \n                                                            \n                                                              key\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                                  true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     init\n                                \n                            \n                            \n                                \n            init()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/i18n/testing/mocks/ng2-config-multilang.mock.ts:2\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     any\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export class ConfigMockMultilang {\n  init(): any {\n    return null;\n  }\n\n  getSettings(group?: string, key?: string): any {\n    return {\n      i18n: {\n        defaultLanguage: {\n          code: 'en',\n          title: 'English'\n        },\n        availableLanguages: [\n          { code: 'en', title: 'English' },\n          { code: 'es', title: 'Spanish' },\n          { code: 'fr', title: 'French' },\n          { code: 'ru', title: 'Russian' },\n          { code: 'bg', title: 'Bulgarian' }\n        ]\n      },\n      logging: {\n        DEBUG: {\n          LEVEL_1: false,\n          LEVEL_2: false,\n          LEVEL_3: false,\n          LEVEL_4: false\n        }\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigRecord.html":{"url":"classes/ConfigRecord.html","title":"class - ConfigRecord","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigRecord\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/puzzle/services/database/config-record.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ModelInterface\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public key\n                                    \n                                    \n                                        Public value\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         toString\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(key: string, value: string)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/database/config-record.model.ts:3\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              key\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              value\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     toString\n                                \n                            \n                            \n                                \n            toString()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/database/config-record.model.ts:7\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     string\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public key\n                                \n                            \n                            \n                                \n                                    key:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/database/config-record.model.ts:5\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public value\n                                \n                            \n                            \n                                \n                                    value:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/database/config-record.model.ts:5\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import { ModelInterface } from '../../interfaces/model.interface';\n\nexport class ConfigRecord implements ModelInterface {\n\n  constructor(public key: string, public value: string) {}\n\n  toString(): string {\n    return '{ key: ' + this.key + ', value: ' + this.value + ' }';\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DesktopConfig.html":{"url":"classes/DesktopConfig.html","title":"class - DesktopConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  DesktopConfig\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/electron/utils/desktop-config.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public GET_SUPPORTED_LANGUAGES\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public GET_SUPPORTED_LANGUAGES\n                                \n                            \n                            \n                                \n                                        \n                                    GET_SUPPORTED_LANGUAGES()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/electron/utils/desktop-config.ts:6\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     Array<>\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { ILang } from '../../core/index';\n\nexport class DesktopConfig {\n\n  public static GET_SUPPORTED_LANGUAGES(): Array {\n    return [\n      { code: 'en', title: 'English' },\n      { code: 'es', title: 'Spanish' },\n      { code: 'fr', title: 'French' },\n      { code: 'ru', title: 'Russian' },\n      { code: 'bg', title: 'Bulgarian' }\n    ];\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ElectronEventService.html":{"url":"classes/ElectronEventService.html","title":"class - ElectronEventService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  ElectronEventService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/electron/services/event.service.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public on\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public on\n                                \n                            \n                            \n                                \n                                        \n                                    on(name: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/electron/services/event.service.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              name\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/fromEvent';\n\ndeclare var window: any;\n\nexport class ElectronEventService {\n\n  public static on(name: string): Observable {\n    return Observable.fromEvent(window, name);\n  }\n\n  // TODO: add more helpers for menu setup and more...  \n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LangChangedAction.html":{"url":"classes/LangChangedAction.html","title":"class - LangChangedAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  LangChangedAction\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/i18n/actions/multilingual.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public payload\n                                    \n                                    \n                                         type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(payload: string)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/client/app/modules/i18n/actions/multilingual.action.ts:44\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              payload\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public payload\n                                \n                            \n                            \n                                \n                                    payload:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/i18n/actions/multilingual.action.ts:46\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     type\n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                    \n                                        \n                                            Defined in src/client/app/modules/i18n/actions/multilingual.action.ts:44\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\n\nimport { type } from '../../core/utils/type';\n\n\nimport { CATEGORY } from '../common/category.common';\n\n/**\n * For each action type in an action group, make a simple\n * enum object for all of this group's action types.\n *\n * The 'type' utility function coerces strings into string\n * literal types and runs a simple check to guarantee all\n * action types in the application are unique.\n */\nexport interface IMultilingualActions {\n  CHANGE: string;\n  LANG_CHANGED: string;\n  LANG_UNSUPPORTED: string;\n}\n\nexport const ActionTypes: IMultilingualActions = {\n  CHANGE:           type(`[${CATEGORY}] Change`),\n  LANG_CHANGED:     type(`[${CATEGORY}] Lang Changed`),\n  LANG_UNSUPPORTED: type(`[${CATEGORY}] Lang Unsupported`)\n};\n\n/**\n * Every action is comprised of at least a type and an optional\n * payload. Expressing actions as classes enables powerful\n * type checking in reducer functions.\n *\n * See Discriminated Unions: https://www.typescriptlang.org/docs/handbook/advanced-types.html#discriminated-unions\n */\nexport class ChangeAction implements Action {\n  type = ActionTypes.CHANGE;\n\n  constructor(public payload: string) { }\n}\n\nexport class LangChangedAction implements Action {\n  type = ActionTypes.LANG_CHANGED;\n\n  constructor(public payload: string) { }\n}\n\nexport class LangUnsupportedAction implements Action {\n  type = ActionTypes.LANG_UNSUPPORTED;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Export a type alias of all actions in this action group\n * so that reducers can easily compose action types\n */\nexport type Actions\n  = ChangeAction\n  | LangChangedAction\n  | LangUnsupportedAction;\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LangUnsupportedAction.html":{"url":"classes/LangUnsupportedAction.html","title":"class - LangUnsupportedAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  LangUnsupportedAction\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/i18n/actions/multilingual.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public payload\n                                    \n                                    \n                                         type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(payload: string)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/client/app/modules/i18n/actions/multilingual.action.ts:50\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              payload\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public payload\n                                \n                            \n                            \n                                \n                                    payload:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/i18n/actions/multilingual.action.ts:52\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     type\n                                \n                            \n                            \n                                \n                                    type:     \n            \n                                \n                            \n                                    \n                                        \n                                            Defined in src/client/app/modules/i18n/actions/multilingual.action.ts:50\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\n\nimport { type } from '../../core/utils/type';\n\n\nimport { CATEGORY } from '../common/category.common';\n\n/**\n * For each action type in an action group, make a simple\n * enum object for all of this group's action types.\n *\n * The 'type' utility function coerces strings into string\n * literal types and runs a simple check to guarantee all\n * action types in the application are unique.\n */\nexport interface IMultilingualActions {\n  CHANGE: string;\n  LANG_CHANGED: string;\n  LANG_UNSUPPORTED: string;\n}\n\nexport const ActionTypes: IMultilingualActions = {\n  CHANGE:           type(`[${CATEGORY}] Change`),\n  LANG_CHANGED:     type(`[${CATEGORY}] Lang Changed`),\n  LANG_UNSUPPORTED: type(`[${CATEGORY}] Lang Unsupported`)\n};\n\n/**\n * Every action is comprised of at least a type and an optional\n * payload. Expressing actions as classes enables powerful\n * type checking in reducer functions.\n *\n * See Discriminated Unions: https://www.typescriptlang.org/docs/handbook/advanced-types.html#discriminated-unions\n */\nexport class ChangeAction implements Action {\n  type = ActionTypes.CHANGE;\n\n  constructor(public payload: string) { }\n}\n\nexport class LangChangedAction implements Action {\n  type = ActionTypes.LANG_CHANGED;\n\n  constructor(public payload: string) { }\n}\n\nexport class LangUnsupportedAction implements Action {\n  type = ActionTypes.LANG_UNSUPPORTED;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Export a type alias of all actions in this action group\n * so that reducers can easily compose action types\n */\nexport type Actions\n  = ChangeAction\n  | LangChangedAction\n  | LangUnsupportedAction;\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogTarget.html":{"url":"classes/LogTarget.html","title":"class - LogTarget","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  LogTarget\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/core/services/logging/log.target.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         log\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     log\n                                \n                            \n                            \n                                \n                                        \n                                    log(event: LogEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/logging/log.target.ts:18\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              event\n                                                              \n                                                                      LogEvent\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Promise\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export enum LogLevel {\n  Debug = 0,\n  Info = 1,\n  Warning = 2,\n  Error = 4\n}\n\nexport interface LogEvent {\n  message: string | Object;\n  level: LogLevel;\n}\n\nexport abstract class LogTargetOptions {\n  minLogLevel: LogLevel;\n}\n\nexport abstract class LogTarget {\n  abstract log(event: LogEvent): Promise;\n}\n\nexport abstract class LogTargetBase implements LogTarget {\n  constructor(protected options: LogTargetOptions) {\n  }\n\n  log(event: LogEvent): Promise {\n    if (event.level >= this.options.minLogLevel) {\n      return this.writeToLog(event);\n    }\n    return Promise.resolve();\n  }\n\n  protected abstract writeToLog(event: LogEvent): Promise;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogTargetBase.html":{"url":"classes/LogTargetBase.html","title":"class - LogTargetBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  LogTargetBase\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/core/services/logging/log.target.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        LogTarget\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         log\n                                    \n                                    \n                                        Protected writeToLog\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(options: LogTargetOptions)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/logging/log.target.ts:21\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              options\n                                                              \n                                                                        LogTargetOptions\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     log\n                                \n                            \n                            \n                                \n            log(event: LogEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/logging/log.target.ts:25\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              event\n                                                              \n                                                                      LogEvent\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Promise\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Protected writeToLog\n                                \n                            \n                            \n                                \n                                        \n                                    writeToLog(event: LogEvent)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/logging/log.target.ts:32\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              event\n                                                              \n                                                                      LogEvent\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Promise\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export enum LogLevel {\n  Debug = 0,\n  Info = 1,\n  Warning = 2,\n  Error = 4\n}\n\nexport interface LogEvent {\n  message: string | Object;\n  level: LogLevel;\n}\n\nexport abstract class LogTargetOptions {\n  minLogLevel: LogLevel;\n}\n\nexport abstract class LogTarget {\n  abstract log(event: LogEvent): Promise;\n}\n\nexport abstract class LogTargetBase implements LogTarget {\n  constructor(protected options: LogTargetOptions) {\n  }\n\n  log(event: LogEvent): Promise {\n    if (event.level >= this.options.minLogLevel) {\n      return this.writeToLog(event);\n    }\n    return Promise.resolve();\n  }\n\n  protected abstract writeToLog(event: LogEvent): Promise;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogTargetOptions.html":{"url":"classes/LogTargetOptions.html","title":"class - LogTargetOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  LogTargetOptions\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/core/services/logging/log.target.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         minLogLevel\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     minLogLevel\n                                \n                            \n                            \n                                \n                                    minLogLevel:     LogLevel\n            \n                                \n                            \n                                \n                                    \n                                        Type :     LogLevel\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/logging/log.target.ts:14\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        export enum LogLevel {\n  Debug = 0,\n  Info = 1,\n  Warning = 2,\n  Error = 4\n}\n\nexport interface LogEvent {\n  message: string | Object;\n  level: LogLevel;\n}\n\nexport abstract class LogTargetOptions {\n  minLogLevel: LogLevel;\n}\n\nexport abstract class LogTarget {\n  abstract log(event: LogEvent): Promise;\n}\n\nexport abstract class LogTargetBase implements LogTarget {\n  constructor(protected options: LogTargetOptions) {\n  }\n\n  log(event: LogEvent): Promise {\n    if (event.level >= this.options.minLogLevel) {\n      return this.writeToLog(event);\n    }\n    return Promise.resolve();\n  }\n\n  protected abstract writeToLog(event: LogEvent): Promise;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockPopStateEvent.html":{"url":"classes/MockPopStateEvent.html","title":"class - MockPopStateEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  MockPopStateEvent\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/core/testing/mocks/mock-location-strategy.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public newUrl\n                                    \n                                    \n                                         pop\n                                    \n                                    \n                                         type\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(newUrl: string)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/testing/mocks/mock-location-strategy.ts:75\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              newUrl\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public newUrl\n                                \n                            \n                            \n                                \n                                    newUrl:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/testing/mocks/mock-location-strategy.ts:76\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     pop\n                                \n                            \n                            \n                                \n                                    pop:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : true\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/testing/mocks/mock-location-strategy.ts:74\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     type\n                                \n                            \n                            \n                                \n                                    type:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : popstate\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/testing/mocks/mock-location-strategy.ts:75\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import { LocationStrategy } from '@angular/common';\nimport { Injectable, EventEmitter } from '@angular/core';\n\n/**\n * A mock implementation of {@link LocationStrategy} that allows tests to fire simulated\n * location events.\n *\n * @stable\n */\n@Injectable()\nexport class MockLocationStrategy extends LocationStrategy {\n  internalBaseHref: string = '/';\n  internalPath: string = '/';\n  internalTitle: string = '';\n  urlChanges: string[] = [];\n  /** @internal */\n  _subject: EventEmitter = new EventEmitter();\n  constructor() { super(); }\n\n  simulatePopState(url: string): void {\n    this.internalPath = url;\n    this._subject.emit(new MockPopStateEvent(this.path()));\n  }\n\n  path(includeHash: boolean = false): string { return this.internalPath; }\n\n  prepareExternalUrl(internal: string): string {\n    if ((internal).startsWith('/') && (this.internalBaseHref).endsWith('/')) {\n      return this.internalBaseHref + internal.substring(1);\n    }\n    return this.internalBaseHref + internal;\n  }\n\n  pushState(ctx: any, title: string, path: string, query: string): void {\n    this.internalTitle = title;\n\n    var url = path + (query.length > 0 ? ('?' + query) : '');\n    this.internalPath = url;\n\n    var externalUrl = this.prepareExternalUrl(url);\n    this.urlChanges.push(externalUrl);\n  }\n\n  replaceState(ctx: any, title: string, path: string, query: string): void {\n    this.internalTitle = title;\n\n    var url = path + (query.length > 0 ? ('?' + query) : '');\n    this.internalPath = url;\n\n    var externalUrl = this.prepareExternalUrl(url);\n    this.urlChanges.push('replace: ' + externalUrl);\n  }\n\n  onPopState(fn: (value: any) => void): void { this._subject.subscribe({next: fn}); }\n\n  getBaseHref(): string { return this.internalBaseHref; }\n\n  back(): void {\n    if (this.urlChanges.length > 0) {\n      this.urlChanges.pop();\n      var nextUrl = this.urlChanges.length > 0 ? this.urlChanges[this.urlChanges.length - 1] : '';\n      this.simulatePopState(nextUrl);\n    }\n  }\n\n  forward(): void { throw 'not implemented'; }\n}\n\nclass MockPopStateEvent {\n  pop: boolean = true;\n  type: string = 'popstate';\n  constructor(public newUrl: string) {}\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PuzzleConfig.html":{"url":"classes/PuzzleConfig.html","title":"class - PuzzleConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  PuzzleConfig\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/puzzle/common/puzzle-config.common.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Static dbFile\n                                    \n                                    \n                                        Static isDev\n                                    \n                                    \n                                        Static title\n                                    \n                                    \n                                        Static transition\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Static dbFile\n                                \n                            \n                            \n                                \n                                    dbFile:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : puzzle.db\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/common/puzzle-config.common.ts:4\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Static isDev\n                                \n                            \n                            \n                                \n                                    isDev:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : false\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/common/puzzle-config.common.ts:3\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Static title\n                                \n                            \n                            \n                                \n                                    title:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : 16 Puzzle\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/common/puzzle-config.common.ts:2\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Static transition\n                                \n                            \n                            \n                                \n                                    transition:     Object\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Object\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/common/puzzle-config.common.ts:5\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        export class PuzzleConfig {\n  static title: string = '16 Puzzle';\n  static isDev: boolean = false;\n  static dbFile: string = 'puzzle.db';\n  static transition: Object = {\n    transition: {\n      name: 'flip',\n      curve: 'linear'\n    }\n  };\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Row.html":{"url":"classes/Row.html","title":"class - Row","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  Row\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/puzzle/services/board/row.model.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public emptySquare\n                                    \n                                    \n                                        Public expectedSeq\n                                    \n                                    \n                                        Public index\n                                    \n                                    \n                                        Public isLast\n                                    \n                                    \n                                        Public seq\n                                    \n                                    \n                                        Public squares\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(index: number, isLast: boolean, squares: Square[], seq: number[], expectedSeq: number[], emptySquare: Square)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/row.model.ts:4\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              index\n                                                              \n                                                                        number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              isLast\n                                                              \n                                                                        boolean\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              squares\n                                                              \n                                                                        Square[]\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              seq\n                                                              \n                                                                        number[]\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              expectedSeq\n                                                              \n                                                                        number[]\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              emptySquare\n                                                              \n                                                                        Square\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public emptySquare\n                                \n                            \n                            \n                                \n                                    emptySquare:     Square\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Square\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/row.model.ts:11\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public expectedSeq\n                                \n                            \n                            \n                                \n                                    expectedSeq:     number[]\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number[]\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/row.model.ts:10\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public index\n                                \n                            \n                            \n                                \n                                    index:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/row.model.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public isLast\n                                \n                            \n                            \n                                \n                                    isLast:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/row.model.ts:7\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public seq\n                                \n                            \n                            \n                                \n                                    seq:     number[]\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number[]\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/row.model.ts:9\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public squares\n                                \n                            \n                            \n                                \n                                    squares:     Square[]\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Square[]\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/row.model.ts:8\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import {Square} from './square.model';\n\n\nexport class Row {\n\n  constructor(public index: number,\n              public isLast: boolean,\n              public squares: Square[],\n              public seq: number[],\n              public expectedSeq: number[],\n              public emptySquare: Square = null) {\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Square.html":{"url":"classes/Square.html","title":"class - Square","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  Square\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/puzzle/services/board/square.model.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public col\n                                    \n                                    \n                                        Public cssClass\n                                    \n                                    \n                                        Public expectedValue\n                                    \n                                    \n                                        Public id\n                                    \n                                    \n                                        Public isEmpty\n                                    \n                                    \n                                        Public row\n                                    \n                                    \n                                        Public value\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(id: string, isEmpty: boolean, row: number, col: number, value: string, expectedValue: string, cssClass: string)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/square.model.ts:3\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              id\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              isEmpty\n                                                              \n                                                                        boolean\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              row\n                                                              \n                                                                        number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              col\n                                                              \n                                                                        number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              value\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              expectedValue\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              cssClass\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public col\n                                \n                            \n                            \n                                \n                                    col:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/square.model.ts:8\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public cssClass\n                                \n                            \n                            \n                                \n                                    cssClass:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/square.model.ts:11\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public expectedValue\n                                \n                            \n                            \n                                \n                                    expectedValue:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/square.model.ts:10\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public id\n                                \n                            \n                            \n                                \n                                    id:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/square.model.ts:5\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public isEmpty\n                                \n                            \n                            \n                                \n                                    isEmpty:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/square.model.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public row\n                                \n                            \n                            \n                                \n                                    row:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/square.model.ts:7\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public value\n                                \n                            \n                            \n                                \n                                    value:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/board/square.model.ts:9\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import { Row } from './row.model';\n\nexport class Square {\n\n  constructor(public id: string,\n              public isEmpty: boolean,\n              public row: number,\n              public col: number,\n              public value: string,\n              public expectedValue: string,\n              public cssClass: string) {}\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TranslateLoaderMock.html":{"url":"classes/TranslateLoaderMock.html","title":"class - TranslateLoaderMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  TranslateLoaderMock\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/i18n/testing/mocks/ng2-translate-loader.mock.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TranslateLoaderMock {\n  \n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TranslateMock.html":{"url":"classes/TranslateMock.html","title":"class - TranslateMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  TranslateMock\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/i18n/testing/mocks/ng2-translate.mock.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public onLangChange\n                                    \n                                    \n                                        Public onTranslationChange\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public get\n                                    \n                                    \n                                        Public getLangs\n                                    \n                                    \n                                        Public getTranslation\n                                    \n                                    \n                                        Public reloadLang\n                                    \n                                    \n                                        Public setDefaultLang\n                                    \n                                    \n                                        Public use\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public get\n                                \n                            \n                            \n                                \n                                        \n                                    get(key: string | Array, interpolateParams?: Object)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/i18n/testing/mocks/ng2-translate.mock.ts:19\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              key\n                                                              \n                                                                      string | Array\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              interpolateParams\n                                                              \n                                                                      Object\n                                                              \n                                                              \n                                                                  true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public getLangs\n                                \n                            \n                            \n                                \n                                        \n                                    getLangs()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/i18n/testing/mocks/ng2-translate.mock.ts:25\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     {}\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public getTranslation\n                                \n                            \n                            \n                                \n                                        \n                                    getTranslation(lang: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/i18n/testing/mocks/ng2-translate.mock.ts:11\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              lang\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public reloadLang\n                                \n                            \n                            \n                                \n                                        \n                                    reloadLang(lang: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/i18n/testing/mocks/ng2-translate.mock.ts:28\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              lang\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public setDefaultLang\n                                \n                            \n                            \n                                \n                                        \n                                    setDefaultLang(lang: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/i18n/testing/mocks/ng2-translate.mock.ts:22\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              lang\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public use\n                                \n                            \n                            \n                                \n                                        \n                                    use(lang: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/i18n/testing/mocks/ng2-translate.mock.ts:16\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              lang\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public onLangChange\n                                \n                            \n                            \n                                \n                                    onLangChange:     EventEmitter\n            \n                                \n                            \n                                \n                                    \n                                        Type :     EventEmitter\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/i18n/testing/mocks/ng2-translate.mock.ts:9\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public onTranslationChange\n                                \n                            \n                            \n                                \n                                    onTranslationChange:     EventEmitter\n            \n                                \n                            \n                                \n                                    \n                                        Type :     EventEmitter\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/i18n/testing/mocks/ng2-translate.mock.ts:10\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter } from '@angular/core';\n\n// libs\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/of';\n\nexport class TranslateMock {\n  public onLangChange: EventEmitter = new EventEmitter();\n  public onTranslationChange: EventEmitter = new EventEmitter();\n  public getTranslation(lang: string): any {\n    return {\n      'TEST': 'test'\n    };\n  }\n  public use(lang: string) {\n    // console.log(lang);\n  }\n  public get(key: string | Array, interpolateParams?: Object): Observable {\n    return Observable.of(key);\n  }\n  public setDefaultLang(lang: string) {\n    return;\n  }\n  public getLangs() {\n    return ['en'];\n  }\n  public reloadLang(lang: string): Observable {\n    return Observable.of('en');\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Utils.html":{"url":"classes/Utils.html","title":"class - Utils","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  Utils\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/puzzle/common/utils.common.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Static generateGameSequence\n                                    \n                                    \n                                        Static generateSequence\n                                    \n                                    \n                                        Static generateSequentialSequence\n                                    \n                                    \n                                        Static isEven\n                                    \n                                    \n                                        Static isValid\n                                    \n                                    \n                                        Static isValidMove\n                                    \n                                    \n                                        Static mapColClass\n                                    \n                                    \n                                        Static mapLevelDimensions\n                                    \n                                    \n                                        Static overlay\n                                    \n                                    \n                                        Static parseSubSequence\n                                    \n                                    \n                                        Static swap\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Static generateGameSequence\n                                \n                            \n                            \n                                \n                                        \n                                    generateGameSequence(min: , max: , count: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/common/utils.common.ts:39\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              min\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              max\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              count\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     {}\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Static generateSequence\n                                \n                            \n                            \n                                \n                                        \n                                    generateSequence(min: , max: , count: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/common/utils.common.ts:7\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              min\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              max\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              count\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     {}\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Static generateSequentialSequence\n                                \n                            \n                            \n                                \n                                        \n                                    generateSequentialSequence(min: , max: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/common/utils.common.ts:24\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              min\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              max\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     {}\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Static isEven\n                                \n                            \n                            \n                                \n                                        \n                                    isEven(x: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/common/utils.common.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              x\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Static isValid\n                                \n                            \n                            \n                                \n                                        \n                                    isValid(sequence: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/common/utils.common.ts:47\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              sequence\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Static isValidMove\n                                \n                            \n                            \n                                \n                                        \n                                    isValidMove(a: any, b: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/common/utils.common.ts:211\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              a\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              b\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Static mapColClass\n                                \n                            \n                            \n                                \n                                        \n                                    mapColClass(value: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/common/utils.common.ts:125\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              value\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     \"col-a\" | \"col-b\" | \"col-c\" | \"col-d\" | \"col-e\" | \"col-f\" | \"col-g\" | \"col-h\"\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Static mapLevelDimensions\n                                \n                            \n                            \n                                \n                                        \n                                    mapLevelDimensions(level: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/common/utils.common.ts:71\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              level\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     { cols: number; rows: number; }\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Static overlay\n                                \n                            \n                            \n                                \n                                        \n                                    overlay(updates: , obj: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/common/utils.common.ts:116\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              updates\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              obj\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Static parseSubSequence\n                                \n                            \n                            \n                                \n                                        \n                                    parseSubSequence(sequence: , pos: , range: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/common/utils.common.ts:195\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              sequence\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              pos\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              range\n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     {}\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Static swap\n                                \n                            \n                            \n                                \n                                        \n                                    swap(a: any, b: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/common/utils.common.ts:220\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              a\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              b\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export class Utils {\n\n  static isEven(x) {\n    return (x % 2) === 0;\n  }\n\n  static generateSequence(min, max, count) {\n\n    let range = [],\n      number = 0,\n      i = 0;\n\n    while (i  0) {\n      while (i  x && b \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WindowMock.html":{"url":"classes/WindowMock.html","title":"class - WindowMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  WindowMock\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/core/testing/mocks/window.mock.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public location\n                                    \n                                    \n                                        Public navigator\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public alert\n                                    \n                                    \n                                        Public confirm\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public alert\n                                \n                            \n                            \n                                \n                                        \n                                    alert(msg: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/testing/mocks/window.mock.ts:7\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              msg\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public confirm\n                                \n                            \n                            \n                                \n                                        \n                                    confirm(msg: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/testing/mocks/window.mock.ts:10\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              msg\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public location\n                                \n                            \n                            \n                                \n                                    location:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/testing/mocks/window.mock.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public navigator\n                                \n                            \n                            \n                                \n                                    navigator:     any\n            \n                                \n                            \n                                \n                                    \n                                        Type :     any\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/testing/mocks/window.mock.ts:2\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        export class WindowMock {\n  public navigator: any = {\n    language: 'en-US',\n    userAgent: 'testing'\n  };\n  public location: any = {};\n  public alert(msg: string): void {\n    return;\n  }\n  public confirm(msg: string): void {\n    return;\n  }\n}\n\nexport class WindowMockFrench extends WindowMock {\n  constructor() {\n    super();\n    this.navigator.language = 'fr-US';\n  }\n}\n\nexport class WindowMockNoLanguage extends WindowMock {\n  constructor() {\n    super();\n    this.navigator.language = undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WindowMockFrench.html":{"url":"classes/WindowMockFrench.html","title":"class - WindowMockFrench","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  WindowMockFrench\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/core/testing/mocks/window.mock.ts\n        \n\n\n            \n                Extends\n            \n            \n                    WindowMock\n            \n\n\n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor()\n                                \n                            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/testing/mocks/window.mock.ts:15\n                                        \n                                    \n            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        export class WindowMock {\n  public navigator: any = {\n    language: 'en-US',\n    userAgent: 'testing'\n  };\n  public location: any = {};\n  public alert(msg: string): void {\n    return;\n  }\n  public confirm(msg: string): void {\n    return;\n  }\n}\n\nexport class WindowMockFrench extends WindowMock {\n  constructor() {\n    super();\n    this.navigator.language = 'fr-US';\n  }\n}\n\nexport class WindowMockNoLanguage extends WindowMock {\n  constructor() {\n    super();\n    this.navigator.language = undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WindowMockNoLanguage.html":{"url":"classes/WindowMockNoLanguage.html","title":"class - WindowMockNoLanguage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  WindowMockNoLanguage\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/core/testing/mocks/window.mock.ts\n        \n\n\n            \n                Extends\n            \n            \n                    WindowMock\n            \n\n\n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor()\n                                \n                            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/testing/mocks/window.mock.ts:22\n                                        \n                                    \n            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        export class WindowMock {\n  public navigator: any = {\n    language: 'en-US',\n    userAgent: 'testing'\n  };\n  public location: any = {};\n  public alert(msg: string): void {\n    return;\n  }\n  public confirm(msg: string): void {\n    return;\n  }\n}\n\nexport class WindowMockFrench extends WindowMock {\n  constructor() {\n    super();\n    this.navigator.language = 'fr-US';\n  }\n}\n\nexport class WindowMockNoLanguage extends WindowMock {\n  constructor() {\n    super();\n    this.navigator.language = undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionsServiceInterface.html":{"url":"interfaces/ActionsServiceInterface.html","title":"interface - ActionsServiceInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionsServiceInterface\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/puzzle/actions/actions-service.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        actionChange$\n                                \n                                \n                                        actionObserver\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     ActionsEnum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ActionsEnum\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/actions/actions-service.interface.ts:8\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        actionChange$\n                                    \n                                \n                                \n                                    \n                                        actionChange$:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/actions/actions-service.interface.ts:9\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        actionObserver\n                                    \n                                \n                                \n                                    \n                                        actionObserver:     Observer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observer\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/actions/actions-service.interface.ts:10\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {ActionsEnum} from './actions.enum';\nimport {Observable} from 'rxjs/Observable';\nimport {Observer} from 'rxjs/Observer';\n\n\nexport interface ActionsServiceInterface {\n\n  action: ActionsEnum;\n  actionChange$: Observable;\n  actionObserver: Observer;\n\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatabaseServiceInterface.html":{"url":"interfaces/DatabaseServiceInterface.html","title":"interface - DatabaseServiceInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatabaseServiceInterface\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/puzzle/services/database/database-service.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        tables\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                     connect\n                                \n                                \n                                     delete\n                                \n                                \n                                     exists\n                                \n                                \n                                     pull\n                                \n                                \n                                     push\n                                \n                                \n                                     zero\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     connect\n                                \n                            \n                            \n                                \n            connect()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/database/database-service.interface.ts:5\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     delete\n                                \n                            \n                            \n                                \n            delete(table: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/database/database-service.interface.ts:6\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              table\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     exists\n                                \n                            \n                            \n                                \n            exists(table: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/database/database-service.interface.ts:9\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              table\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     pull\n                                \n                            \n                            \n                                \n            pull(table: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/database/database-service.interface.ts:7\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              table\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     push\n                                \n                            \n                            \n                                \n            push(table: string, value: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/database/database-service.interface.ts:8\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              table\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              value\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     zero\n                                \n                            \n                            \n                                \n            zero(criteria: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/database/database-service.interface.ts:10\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              criteria\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tables\n                                    \n                                \n                                \n                                    \n                                        tables:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/database/database-service.interface.ts:4\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {StateServiceInterface} from './../state/state-service.interface';\n\nexport interface DatabaseServiceInterface {\n  readonly tables: string[];\n  connect(): boolean;\n  delete(table: string): boolean;\n  pull(table: string):any;\n  push(table: string, value: any): boolean;\n  exists(table: string): boolean;\n  zero(criteria: string): void;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EnvConfig.html":{"url":"interfaces/EnvConfig.html","title":"interface - EnvConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EnvConfig\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/core/utils/config.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        API\n                                \n                                \n                                        ENV\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        API\n                                    \n                                \n                                \n                                    \n                                        API:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/core/utils/config.ts:4\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ENV\n                                    \n                                \n                                \n                                    \n                                        ENV:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/core/utils/config.ts:5\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export interface EnvConfig {\n  API?: string;\n  ENV?: string;\n}\n\nexport interface IPlatforms {\n  WEB: string;\n  MOBILE_NATIVE: string;\n  MOBILE_HYBRID: string;\n  DESKTOP: string;\n}\n\nexport class Config {\n\n  public static PageClass: any;\n\n\n  public static DEBUG = {\n    LEVEL_1: false, // .info only\n    LEVEL_2: false, // .warn only\n    LEVEL_3: false, // .error only\n    LEVEL_4: false  // .log + all the above\n  };\n\n  // supported platforms\n  public static PLATFORMS: IPlatforms = {\n    WEB: 'web',\n    MOBILE_NATIVE: 'mobile_native',\n    MOBILE_HYBRID: 'mobile_hybrid',\n    DESKTOP: 'desktop'\n  };\n\n  // current target (defaults to web)\n  public static PLATFORM_TARGET: string = Config.PLATFORMS.WEB;\n\n  // convenient platform checks\n  public static IS_WEB(): boolean {\n    return Config.PLATFORM_TARGET === Config.PLATFORMS.WEB;\n  }\n\n  public static IS_MOBILE_NATIVE(): boolean {\n    return Config.PLATFORM_TARGET === Config.PLATFORMS.MOBILE_NATIVE;\n  }\n\n  public static IS_MOBILE_HYBRID(): boolean {\n    return Config.PLATFORM_TARGET === Config.PLATFORMS.MOBILE_HYBRID;\n  }\n\n  public static IS_DESKTOP(): boolean {\n    return Config.PLATFORM_TARGET === Config.PLATFORMS.DESKTOP;\n  }\n\n  public static ENVIRONMENT(): EnvConfig {\n    try {\n      return JSON.parse('');\n    } catch (exp) {\n      return {};\n    }\n  }\n\n  // supported languages\n  public static GET_SUPPORTED_LANGUAGES() {\n    return [\n      { code: 'en', title: 'English' },\n      { code: 'es', title: 'Spanish' },\n      { code: 'fr', title: 'French' },\n      { code: 'ru', title: 'Russian' },\n      { code: 'bg', title: 'Bulgarian' }\n    ];\n  }\n\n  public static IS_DEBUG_MODE(): boolean {\n    for (let key in Config.DEBUG) {\n      if (Config.DEBUG[key]) {\n        // if any level is on, debug mode is on\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // reset debug defaults\n  public static RESET() {\n    for (let key in Config.DEBUG) {\n      Config.DEBUG[key] = false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExtendedNavigationExtras.html":{"url":"interfaces/ExtendedNavigationExtras.html","title":"interface - ExtendedNavigationExtras","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExtendedNavigationExtras\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/core/services/router-extensions.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NavigationExtras\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        animated\n                                \n                                \n                                        clearHistory\n                                \n                                \n                                        transition\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        animated\n                                    \n                                \n                                \n                                    \n                                        animated:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/router-extensions.service.ts:9\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clearHistory\n                                    \n                                \n                                \n                                    \n                                        clearHistory:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/router-extensions.service.ts:8\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transition\n                                    \n                                \n                                \n                                    \n                                        transition:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/router-extensions.service.ts:10\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { LocationStrategy } from '@angular/common';\nimport { Router, UrlTree, NavigationExtras } from '@angular/router';\n\nexport interface ExtendedNavigationExtras extends NavigationExtras {\n  // Options for nativescript\n  clearHistory?: boolean;\n  animated?: boolean;\n  transition?: { // See -> https://docs.nativescript.org/api-reference/interfaces/_ui_frame_.navigationtransition.html\n    name?: string;\n    instance?: any;\n    duration?: number;\n    curve?: any;\n  };\n  // END - Options for nativescript\n}\n\nexport interface IRouterExtensions {\n  navigate(commands: Array, extras?: ExtendedNavigationExtras): Promise;\n  navigateByUrl(url: string | UrlTree, options?: ExtendedNavigationExtras): Promise;\n  back(): void;\n}\n\n@Injectable()\nexport class RouterExtensions implements IRouterExtensions {\n\n  constructor(public router: Router, private locationStrategy: LocationStrategy) { }\n\n  public navigate(commands: Array, extras?: ExtendedNavigationExtras): Promise {\n    return this.router.navigate(commands, extras);\n  }\n\n  public navigateByUrl(url: string | UrlTree, options?: ExtendedNavigationExtras): Promise {\n    return this.router.navigateByUrl(url);\n  }\n\n  public back() {\n    this.locationStrategy.back();\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAnalytics.html":{"url":"interfaces/IAnalytics.html","title":"interface - IAnalytics","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAnalytics\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/analytics/services/analytics.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                     track\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     track\n                                \n                            \n                            \n                                \n            track(action: string, properties: IAnalyticsProperties)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/analytics/services/analytics.service.ts:15\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              action\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              properties\n                                                              \n                                                                      IAnalyticsProperties\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\n\n// libs\nimport * as _ from 'lodash';\nimport { Angulartics2, Angulartics2Segment } from 'angulartics2';\n\nexport interface IAnalyticsProperties {\n  category?: string;\n  label?: string;\n  value?: number;\n}\n\nexport interface IAnalytics {\n  track(action: string, properties: IAnalyticsProperties): void;\n}\n\n/**\n * Wrapper for Angulartics2\n */\n@Injectable()\nexport class AnalyticsService implements IAnalytics {\n\n  constructor(private angulartics2: Angulartics2, private segment: Angulartics2Segment) {\n    // options\n    // https://github.com/angulartics/angulartics2/blob/master/src/core/angulartics2.ts#L90-L104\n    tics2.virtualPageviews(value: boolean);\n    tics2.excludeRoutes(routes: Array);\n    tics2.firstPageview(value: boolean);\n    tics2.withBase(value: string);\n\n    this.devMode(false);\n  }\n\n  /**\n   * Track actions, events, etc.\n   **/\n  public track(action: string, properties: IAnalyticsProperties): void {\n    if (!this.devMode()) {\n      this.segment.eventTrack(action, properties);\n    }\n  }\n\n  /**\n   * Called automatically by default with Angular 2 Routing\n   * However, that can be turned off and this could be used manually\n   **/\n  public pageTrack(path: string, location: any) {\n    if (!this.devMode()) {\n      this.segment.pageTrack(path, location);\n    }\n  }\n\n  /**\n   * Identify authenticated users\n   **/\n  public identify(properties: any) {\n    if (!this.devMode()) {\n      this.segment.setUserProperties(properties);\n    }\n  }\n\n  /**\n   * Control whether analytics are tracked\n   * true: dev mode on, therefore do not track anything\n   * false: dev mode off, track everything\n   **/\n  public devMode(enable?: boolean): boolean {\n    if (typeof enable !== 'undefined') {\n      this.angulartics2.developerMode(enable);\n    }\n    return this.angulartics2.settings.developerMode;\n  }\n}\n\n/**\n * Base class\n * Standardizes tracking actions and categorization\n */\nexport class Analytics implements IAnalytics {\n  // sub-classes should define their category\n  public category: string;\n\n  constructor(@Inject(AnalyticsService) public analytics: AnalyticsService) {\n\n  }\n\n  /**\n   * Track actions, events, etc.\n   **/\n  track(action: string, properties: IAnalyticsProperties): void {\n    this.analytics.track(action, _.extend(properties, { category: this.category }));\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAnalyticsProperties.html":{"url":"interfaces/IAnalyticsProperties.html","title":"interface - IAnalyticsProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAnalyticsProperties\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/analytics/services/analytics.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        category\n                                \n                                \n                                        label\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                    \n                                \n                                \n                                    \n                                        category:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/analytics/services/analytics.service.ts:9\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/analytics/services/analytics.service.ts:10\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/analytics/services/analytics.service.ts:11\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\n\n// libs\nimport * as _ from 'lodash';\nimport { Angulartics2, Angulartics2Segment } from 'angulartics2';\n\nexport interface IAnalyticsProperties {\n  category?: string;\n  label?: string;\n  value?: number;\n}\n\nexport interface IAnalytics {\n  track(action: string, properties: IAnalyticsProperties): void;\n}\n\n/**\n * Wrapper for Angulartics2\n */\n@Injectable()\nexport class AnalyticsService implements IAnalytics {\n\n  constructor(private angulartics2: Angulartics2, private segment: Angulartics2Segment) {\n    // options\n    // https://github.com/angulartics/angulartics2/blob/master/src/core/angulartics2.ts#L90-L104\n    tics2.virtualPageviews(value: boolean);\n    tics2.excludeRoutes(routes: Array);\n    tics2.firstPageview(value: boolean);\n    tics2.withBase(value: string);\n\n    this.devMode(false);\n  }\n\n  /**\n   * Track actions, events, etc.\n   **/\n  public track(action: string, properties: IAnalyticsProperties): void {\n    if (!this.devMode()) {\n      this.segment.eventTrack(action, properties);\n    }\n  }\n\n  /**\n   * Called automatically by default with Angular 2 Routing\n   * However, that can be turned off and this could be used manually\n   **/\n  public pageTrack(path: string, location: any) {\n    if (!this.devMode()) {\n      this.segment.pageTrack(path, location);\n    }\n  }\n\n  /**\n   * Identify authenticated users\n   **/\n  public identify(properties: any) {\n    if (!this.devMode()) {\n      this.segment.setUserProperties(properties);\n    }\n  }\n\n  /**\n   * Control whether analytics are tracked\n   * true: dev mode on, therefore do not track anything\n   * false: dev mode off, track everything\n   **/\n  public devMode(enable?: boolean): boolean {\n    if (typeof enable !== 'undefined') {\n      this.angulartics2.developerMode(enable);\n    }\n    return this.angulartics2.settings.developerMode;\n  }\n}\n\n/**\n * Base class\n * Standardizes tracking actions and categorization\n */\nexport class Analytics implements IAnalytics {\n  // sub-classes should define their category\n  public category: string;\n\n  constructor(@Inject(AnalyticsService) public analytics: AnalyticsService) {\n\n  }\n\n  /**\n   * Track actions, events, etc.\n   **/\n  track(action: string, properties: IAnalyticsProperties): void {\n    this.analytics.track(action, _.extend(properties, { category: this.category }));\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAppState.html":{"url":"interfaces/IAppState.html","title":"interface - IAppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAppState\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/ngrx/index.ts\n        \n\n            \n                Description\n            \n            \n                As mentioned, we treat each reducer like a table in a database. This means\nour top level state interface is just a map of keys to inner state types.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        i18n\n                                \n                                \n                                        sample\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        i18n\n                                    \n                                \n                                \n                                    \n                                        i18n:     \n\n                                    \n                                \n\n\n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/ngrx/index.ts:48\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sample\n                                    \n                                \n                                \n                                    \n                                        sample:     \n\n                                    \n                                \n\n\n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/ngrx/index.ts:49\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs/Observable';\n// import { combineLatest } from 'rxjs/observable/combineLatest';\nimport { ActionReducer } from '@ngrx/store';\nimport '@ngrx/core/add/operator/select';\n\n/**\n * The compose function is one of our most handy tools. In basic terms, you give\n * it any number of functions and it returns a function. This new function\n * takes a value and chains it through every composed function, returning\n * the output.\n *\n * More: https://drboolean.gitbooks.io/mostly-adequate-guide/content/ch5.html\n */\nimport { compose } from '@ngrx/core/compose';\n\n/**\n * storeFreeze prevents state from being mutated. When mutation occurs, an\n * exception will be thrown. This is useful during development mode to\n * ensure that none of the reducers accidentally mutates the state.\n */\nimport { storeFreeze } from 'ngrx-store-freeze';\n\n/**\n * combineReducers is another useful metareducer that takes a map of reducer\n * functions and creates a new reducer that stores the gathers the values\n * of each reducer and stores them using the reducer's key. Think of it\n * almost like a database, where every reducer is a table in the db.\n *\n * More: https://egghead.io/lessons/javascript-redux-implementing-combinereducers-from-scratch\n */\nimport { combineReducers } from '@ngrx/store';\n\n/**\n * Every reducer module's default export is the reducer function itself. In\n * addition, each module should export a type or interface that describes\n * the state of the reducer plus any selector functions. The `* as`\n * notation packages up all of the exports into a single object.\n */\nimport * as fromMultilingual from '../i18n/index';\nimport * as fromSample from '../sample/index';\n\n/**\n * As mentioned, we treat each reducer like a table in a database. This means\n * our top level state interface is just a map of keys to inner state types.\n */\nexport interface IAppState {\n  i18n: fromMultilingual.IMultilingualState;\n  sample: fromSample.ISampleState;\n}\n\n/**\n * Because metareducers take a reducer function and return a new reducer,\n * we can use our compose helper to chain them together. Here we are\n * using combineReducers to make our top level reducer, and then\n * wrapping that in storeLogger. Remember that compose applies\n * the result from right to left.\n */\nconst reducers = {\n  i18n: fromMultilingual.reducer,\n  sample: fromSample.reducer\n};\n\n// ensure state is frozen as extra level of security when developing\n// helps maintain immutability\nconst developmentReducer: ActionReducer = compose(storeFreeze, combineReducers)(reducers);\n// for production, dev has already been cleared so no need\nconst productionReducer: ActionReducer = combineReducers(reducers);\n\nexport function AppReducer(state: any, action: any) {\n  if (String('') === 'dev') {\n    return developmentReducer(state, action);\n  } else {\n    return productionReducer(state, action);\n  }\n}\n\nexport function getMultilingualState(state$: Observable): Observable {\n  return state$.select(s => s.i18n);\n}\nexport function getNameListState(state$: Observable): Observable {\n  return state$.select(s => s.sample);\n}\n\nexport const getLang: any = compose(fromMultilingual.getLang, getMultilingualState);\nexport const getNames: any = compose(fromSample.getNames, getNameListState);\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IConsole.html":{"url":"interfaces/IConsole.html","title":"interface - IConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IConsole\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/core/interfaces/iconsole.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                     debug\n                                \n                                \n                                     error\n                                \n                                \n                                     info\n                                \n                                \n                                     log\n                                \n                                \n                                     warn\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     debug\n                                \n                            \n                            \n                                \n            debug(m: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/interfaces/iconsole.ts:4\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              m\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     error\n                                \n                            \n                            \n                                \n            error(m: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/interfaces/iconsole.ts:5\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              m\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     info\n                                \n                            \n                            \n                                \n            info(m: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/interfaces/iconsole.ts:7\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              m\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     log\n                                \n                            \n                            \n                                \n            log(m: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/interfaces/iconsole.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              m\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     warn\n                                \n                            \n                            \n                                \n            warn(m: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/interfaces/iconsole.ts:6\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              m\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface IConsole {\n  log(m: any): void;\n  debug(m: any): void;\n  error(m: any): void;\n  warn(m: any): void;\n  info(m: any): void;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICoreModuleOptions.html":{"url":"interfaces/ICoreModuleOptions.html","title":"interface - ICoreModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICoreModuleOptions\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/core/core.module.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        console\n                                \n                                \n                                        window\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        console\n                                    \n                                \n                                \n                                    \n                                        console:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/core/core.module.ts:16\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        window\n                                    \n                                \n                                \n                                    \n                                        window:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/core/core.module.ts:15\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { NgModule, ModuleWithProviders, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { HttpModule } from '@angular/http';\n\n\nimport { SharedModule } from '../shared/index';\nimport { CORE_DIRECTIVES } from './directives/index';\nimport { CORE_PROVIDERS } from './services/index';\nimport { Config } from './utils/index';\n\ninterface ICoreModuleOptions {\n  window?: any;\n  console?: any;\n}\n\n@NgModule({\n  imports: [\n    SharedModule\n  ],\n  declarations: [\n    ...CORE_DIRECTIVES\n  ],\n  exports: [\n    ...CORE_DIRECTIVES\n  ],\n  providers: [\n    ...CORE_PROVIDERS,\n  ]\n})\nexport class CoreModule {\n  // configuredProviders: *required to configure WindowService and ConsoleService per platform\n  static forRoot(configuredProviders: Array): ModuleWithProviders {\n    return {\n      ngModule: CoreModule,\n      providers: configuredProviders\n    };\n  }\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    if (parentModule) {\n      throw new Error('CoreModule already loaded; Import in root module only.');\n    }\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILang.html":{"url":"interfaces/ILang.html","title":"interface - ILang","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILang\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/core/interfaces/ilang.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        code\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/core/interfaces/ilang.ts:3\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/core/interfaces/ilang.ts:4\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export interface ILang {\n  code: string;\n  title: string;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMultilingualActions.html":{"url":"interfaces/IMultilingualActions.html","title":"interface - IMultilingualActions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMultilingualActions\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/i18n/actions/multilingual.action.ts\n        \n\n            \n                Description\n            \n            \n                For each action type in an action group, make a simple\nenum object for all of this group's action types.\nThe 'type' utility function coerces strings into string\nliteral types and runs a simple check to guarantee all\naction types in the application are unique.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        CHANGE\n                                \n                                \n                                        LANG_CHANGED\n                                \n                                \n                                        LANG_UNSUPPORTED\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CHANGE\n                                    \n                                \n                                \n                                    \n                                        CHANGE:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/i18n/actions/multilingual.action.ts:19\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LANG_CHANGED\n                                    \n                                \n                                \n                                    \n                                        LANG_CHANGED:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/i18n/actions/multilingual.action.ts:20\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LANG_UNSUPPORTED\n                                    \n                                \n                                \n                                    \n                                        LANG_UNSUPPORTED:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/i18n/actions/multilingual.action.ts:21\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\n\nimport { type } from '../../core/utils/type';\n\n\nimport { CATEGORY } from '../common/category.common';\n\n/**\n * For each action type in an action group, make a simple\n * enum object for all of this group's action types.\n *\n * The 'type' utility function coerces strings into string\n * literal types and runs a simple check to guarantee all\n * action types in the application are unique.\n */\nexport interface IMultilingualActions {\n  CHANGE: string;\n  LANG_CHANGED: string;\n  LANG_UNSUPPORTED: string;\n}\n\nexport const ActionTypes: IMultilingualActions = {\n  CHANGE:           type(`[${CATEGORY}] Change`),\n  LANG_CHANGED:     type(`[${CATEGORY}] Lang Changed`),\n  LANG_UNSUPPORTED: type(`[${CATEGORY}] Lang Unsupported`)\n};\n\n/**\n * Every action is comprised of at least a type and an optional\n * payload. Expressing actions as classes enables powerful\n * type checking in reducer functions.\n *\n * See Discriminated Unions: https://www.typescriptlang.org/docs/handbook/advanced-types.html#discriminated-unions\n */\nexport class ChangeAction implements Action {\n  type = ActionTypes.CHANGE;\n\n  constructor(public payload: string) { }\n}\n\nexport class LangChangedAction implements Action {\n  type = ActionTypes.LANG_CHANGED;\n\n  constructor(public payload: string) { }\n}\n\nexport class LangUnsupportedAction implements Action {\n  type = ActionTypes.LANG_UNSUPPORTED;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Export a type alias of all actions in this action group\n * so that reducers can easily compose action types\n */\nexport type Actions\n  = ChangeAction\n  | LangChangedAction\n  | LangUnsupportedAction;\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMultilingualState.html":{"url":"interfaces/IMultilingualState.html","title":"interface - IMultilingualState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMultilingualState\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/i18n/states/multilingual.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        lang\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lang\n                                    \n                                \n                                \n                                    \n                                        lang:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/i18n/states/multilingual.state.ts:4\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs/Observable';\n\nexport interface IMultilingualState {\n  lang: string;\n}\n\nexport const initialState: IMultilingualState = {\n  lang: 'en'\n};\n\nexport function getLang(state$: Observable) {\n  return state$.select(state => state.lang);\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPlatforms.html":{"url":"interfaces/IPlatforms.html","title":"interface - IPlatforms","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPlatforms\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/core/utils/config.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        DESKTOP\n                                \n                                \n                                        MOBILE_HYBRID\n                                \n                                \n                                        MOBILE_NATIVE\n                                \n                                \n                                        WEB\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DESKTOP\n                                    \n                                \n                                \n                                    \n                                        DESKTOP:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/core/utils/config.ts:12\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MOBILE_HYBRID\n                                    \n                                \n                                \n                                    \n                                        MOBILE_HYBRID:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/core/utils/config.ts:11\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MOBILE_NATIVE\n                                    \n                                \n                                \n                                    \n                                        MOBILE_NATIVE:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/core/utils/config.ts:10\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        WEB\n                                    \n                                \n                                \n                                    \n                                        WEB:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/core/utils/config.ts:9\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export interface EnvConfig {\n  API?: string;\n  ENV?: string;\n}\n\nexport interface IPlatforms {\n  WEB: string;\n  MOBILE_NATIVE: string;\n  MOBILE_HYBRID: string;\n  DESKTOP: string;\n}\n\nexport class Config {\n\n  public static PageClass: any;\n\n\n  public static DEBUG = {\n    LEVEL_1: false, // .info only\n    LEVEL_2: false, // .warn only\n    LEVEL_3: false, // .error only\n    LEVEL_4: false  // .log + all the above\n  };\n\n  // supported platforms\n  public static PLATFORMS: IPlatforms = {\n    WEB: 'web',\n    MOBILE_NATIVE: 'mobile_native',\n    MOBILE_HYBRID: 'mobile_hybrid',\n    DESKTOP: 'desktop'\n  };\n\n  // current target (defaults to web)\n  public static PLATFORM_TARGET: string = Config.PLATFORMS.WEB;\n\n  // convenient platform checks\n  public static IS_WEB(): boolean {\n    return Config.PLATFORM_TARGET === Config.PLATFORMS.WEB;\n  }\n\n  public static IS_MOBILE_NATIVE(): boolean {\n    return Config.PLATFORM_TARGET === Config.PLATFORMS.MOBILE_NATIVE;\n  }\n\n  public static IS_MOBILE_HYBRID(): boolean {\n    return Config.PLATFORM_TARGET === Config.PLATFORMS.MOBILE_HYBRID;\n  }\n\n  public static IS_DESKTOP(): boolean {\n    return Config.PLATFORM_TARGET === Config.PLATFORMS.DESKTOP;\n  }\n\n  public static ENVIRONMENT(): EnvConfig {\n    try {\n      return JSON.parse('');\n    } catch (exp) {\n      return {};\n    }\n  }\n\n  // supported languages\n  public static GET_SUPPORTED_LANGUAGES() {\n    return [\n      { code: 'en', title: 'English' },\n      { code: 'es', title: 'Spanish' },\n      { code: 'fr', title: 'French' },\n      { code: 'ru', title: 'Russian' },\n      { code: 'bg', title: 'Bulgarian' }\n    ];\n  }\n\n  public static IS_DEBUG_MODE(): boolean {\n    for (let key in Config.DEBUG) {\n      if (Config.DEBUG[key]) {\n        // if any level is on, debug mode is on\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // reset debug defaults\n  public static RESET() {\n    for (let key in Config.DEBUG) {\n      Config.DEBUG[key] = false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRouterExtensions.html":{"url":"interfaces/IRouterExtensions.html","title":"interface - IRouterExtensions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRouterExtensions\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/core/services/router-extensions.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                     back\n                                \n                                \n                                     navigate\n                                \n                                \n                                     navigateByUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     back\n                                \n                            \n                            \n                                \n            back()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/router-extensions.service.ts:22\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     navigate\n                                \n                            \n                            \n                                \n            navigate(commands: Array, extras?: ExtendedNavigationExtras)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/router-extensions.service.ts:20\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              commands\n                                                              \n                                                                      Array\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              extras\n                                                              \n                                                                      ExtendedNavigationExtras\n                                                              \n                                                              \n                                                                  true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Promise\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     navigateByUrl\n                                \n                            \n                            \n                                \n            navigateByUrl(url: string | UrlTree, options?: ExtendedNavigationExtras)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/router-extensions.service.ts:21\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              url\n                                                              \n                                                                      string | UrlTree\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              options\n                                                              \n                                                                      ExtendedNavigationExtras\n                                                              \n                                                              \n                                                                  true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Promise\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { LocationStrategy } from '@angular/common';\nimport { Router, UrlTree, NavigationExtras } from '@angular/router';\n\nexport interface ExtendedNavigationExtras extends NavigationExtras {\n  // Options for nativescript\n  clearHistory?: boolean;\n  animated?: boolean;\n  transition?: { // See -> https://docs.nativescript.org/api-reference/interfaces/_ui_frame_.navigationtransition.html\n    name?: string;\n    instance?: any;\n    duration?: number;\n    curve?: any;\n  };\n  // END - Options for nativescript\n}\n\nexport interface IRouterExtensions {\n  navigate(commands: Array, extras?: ExtendedNavigationExtras): Promise;\n  navigateByUrl(url: string | UrlTree, options?: ExtendedNavigationExtras): Promise;\n  back(): void;\n}\n\n@Injectable()\nexport class RouterExtensions implements IRouterExtensions {\n\n  constructor(public router: Router, private locationStrategy: LocationStrategy) { }\n\n  public navigate(commands: Array, extras?: ExtendedNavigationExtras): Promise {\n    return this.router.navigate(commands, extras);\n  }\n\n  public navigateByUrl(url: string | UrlTree, options?: ExtendedNavigationExtras): Promise {\n    return this.router.navigateByUrl(url);\n  }\n\n  public back() {\n    this.locationStrategy.back();\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISampleState.html":{"url":"interfaces/ISampleState.html","title":"interface - ISampleState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISampleState\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/sample/states/sample.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        names\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        names\n                                    \n                                \n                                \n                                    \n                                        names:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/sample/states/sample.state.ts:4\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs/Observable';\n\nexport interface ISampleState {\n  names: Array;\n}\n\nexport const sampleInitialState: ISampleState = {\n  names: >[]\n};\n\n// selects specific slice from sample state\nexport function getNames(state$: Observable) {\n  return state$.select(state => state.names);\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IStorage.html":{"url":"interfaces/IStorage.html","title":"interface - IStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IStorage\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/core/interfaces/istorage.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                     getItem\n                                \n                                \n                                     removeItem\n                                \n                                \n                                     setItem\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getItem\n                                \n                            \n                            \n                                \n            getItem(key: StorageKey)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/interfaces/istorage.ts:4\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              key\n                                                              \n                                                                      StorageKey\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     removeItem\n                                \n                            \n                            \n                                \n            removeItem(key: StorageKey)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/interfaces/istorage.ts:5\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              key\n                                                              \n                                                                      StorageKey\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     setItem\n                                \n                            \n                            \n                                \n            setItem(key: StorageKey, value: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/interfaces/istorage.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              key\n                                                              \n                                                                      StorageKey\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              value\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface IStorage {\n  setItem(key: StorageKey, value: any): void;\n  getItem(key: StorageKey): any;\n  removeItem(key: StorageKey): void;\n}\n\n// to limit interaction with localStorage to a certain whitelist, you can list those keys here\nexport enum StorageKey {\n  USERNAME\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IWindow.html":{"url":"interfaces/IWindow.html","title":"interface - IWindow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IWindow\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/core/interfaces/iwindow.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        location\n                                \n                                \n                                        navigator\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                     alert\n                                \n                                \n                                     confirm\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     alert\n                                \n                            \n                            \n                                \n            alert(msg: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/interfaces/iwindow.ts:5\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              msg\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     confirm\n                                \n                            \n                            \n                                \n            confirm(msg: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/core/interfaces/iwindow.ts:6\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              msg\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/core/interfaces/iwindow.ts:4\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        navigator\n                                    \n                                \n                                \n                                    \n                                        navigator:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/core/interfaces/iwindow.ts:3\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export interface IWindow {\n  navigator: any;\n  location: any;\n  alert(msg: string): void;\n  confirm(msg: string): void;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogEvent.html":{"url":"interfaces/LogEvent.html","title":"interface - LogEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LogEvent\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/core/services/logging/log.target.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        level\n                                \n                                \n                                        message\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:     LogLevel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LogLevel\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/logging/log.target.ts:10\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string | Object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | Object\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/core/services/logging/log.target.ts:9\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export enum LogLevel {\n  Debug = 0,\n  Info = 1,\n  Warning = 2,\n  Error = 4\n}\n\nexport interface LogEvent {\n  message: string | Object;\n  level: LogLevel;\n}\n\nexport abstract class LogTargetOptions {\n  minLogLevel: LogLevel;\n}\n\nexport abstract class LogTarget {\n  abstract log(event: LogEvent): Promise;\n}\n\nexport abstract class LogTargetBase implements LogTarget {\n  constructor(protected options: LogTargetOptions) {\n  }\n\n  log(event: LogEvent): Promise {\n    if (event.level >= this.options.minLogLevel) {\n      return this.writeToLog(event);\n    }\n    return Promise.resolve();\n  }\n\n  protected abstract writeToLog(event: LogEvent): Promise;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModelInterface.html":{"url":"interfaces/ModelInterface.html","title":"interface - ModelInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModelInterface\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/puzzle/interfaces/model.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                     toString\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     toString\n                                \n                            \n                            \n                                \n            toString()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/interfaces/model.interface.ts:3\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     string\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface ModelInterface {\n  toString(): string;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StateServiceInterface.html":{"url":"interfaces/StateServiceInterface.html","title":"interface - StateServiceInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StateServiceInterface\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/puzzle/services/state/state-service.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        databaseService\n                                \n                                \n                                        stateEvent\n                                \n                                \n                                        stateEventChange$\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        databaseService\n                                    \n                                \n                                \n                                    \n                                        databaseService:     DatabaseServiceInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DatabaseServiceInterface\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/state/state-service.interface.ts:7\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stateEvent\n                                    \n                                \n                                \n                                    \n                                        stateEvent:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/state/state-service.interface.ts:11\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stateEventChange$\n                                    \n                                \n                                \n                                    \n                                        stateEventChange$:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/services/state/state-service.interface.ts:9\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/share';\nimport {DatabaseServiceInterface} from './../database/database-service.interface';\n\nexport interface StateServiceInterface {\n\n  databaseService: DatabaseServiceInterface;\n\n  stateEventChange$: Observable;\n\n  stateEvent: string;\n\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TestApi.html":{"url":"interfaces/TestApi.html","title":"interface - TestApi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TestApi\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/test/shorthand/ng2-jasmine.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ae\n                                \n                                \n                                        afterEach\n                                \n                                \n                                        describe\n                                \n                                \n                                        fdescribe\n                                \n                                \n                                        xdescribe\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                     async\n                                \n                                \n                                     be\n                                \n                                \n                                     beforeEach\n                                \n                                \n                                     e\n                                \n                                \n                                     expect\n                                \n                                \n                                     fail\n                                \n                                \n                                     fakeAsync\n                                \n                                \n                                     fit\n                                \n                                \n                                     inject\n                                \n                                \n                                     it\n                                \n                                \n                                     pending\n                                \n                                \n                                     spyOn\n                                \n                                \n                                     tick\n                                \n                                \n                                     xit\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     async\n                                \n                            \n                            \n                                \n            async(fn: Function)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/test/shorthand/ng2-jasmine.ts:16\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              fn\n                                                              \n                                                                      Function\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Function\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     be\n                                \n                            \n                            \n                                \n            be(fn: Function)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/test/shorthand/ng2-jasmine.ts:18\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              fn\n                                                              \n                                                                      Function\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     beforeEach\n                                \n                            \n                            \n                                \n            beforeEach(fn: Function)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/test/shorthand/ng2-jasmine.ts:19\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              fn\n                                                              \n                                                                      Function\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     e\n                                \n                            \n                            \n                                \n            e(actual: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/test/shorthand/ng2-jasmine.ts:20\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              actual\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     expect\n                                \n                            \n                            \n                                \n            expect(actual: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/test/shorthand/ng2-jasmine.ts:21\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              actual\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     fail\n                                \n                            \n                            \n                                \n            fail(e?: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/test/shorthand/ng2-jasmine.ts:22\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              e\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                                  true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     fakeAsync\n                                \n                            \n                            \n                                \n            fakeAsync(fn: Function)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/test/shorthand/ng2-jasmine.ts:17\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              fn\n                                                              \n                                                                      Function\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Function\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     fit\n                                \n                            \n                            \n                                \n            fit(name: string, fn: Function, timeOut?: number)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/test/shorthand/ng2-jasmine.ts:25\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              name\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              fn\n                                                              \n                                                                      Function\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              timeOut\n                                                              \n                                                                      number\n                                                              \n                                                              \n                                                                  true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     inject\n                                \n                            \n                            \n                                \n            inject(tokens: Array, fn: Function)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/test/shorthand/ng2-jasmine.ts:23\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              tokens\n                                                              \n                                                                      Array\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              fn\n                                                              \n                                                                      Function\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Function\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     it\n                                \n                            \n                            \n                                \n            it(name: string, fn: Function, timeOut?: number)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/test/shorthand/ng2-jasmine.ts:24\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              name\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              fn\n                                                              \n                                                                      Function\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              timeOut\n                                                              \n                                                                      number\n                                                              \n                                                              \n                                                                  true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     pending\n                                \n                            \n                            \n                                \n            pending(reason?: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/test/shorthand/ng2-jasmine.ts:27\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              reason\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                                  true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     spyOn\n                                \n                            \n                            \n                                \n            spyOn(object: any, method: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/test/shorthand/ng2-jasmine.ts:28\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              object\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              method\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     tick\n                                \n                            \n                            \n                                \n            tick(delay?: number)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/test/shorthand/ng2-jasmine.ts:29\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              delay\n                                                              \n                                                                      number\n                                                              \n                                                              \n                                                                  true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     xit\n                                \n                            \n                            \n                                \n            xit(name: string, fn: Function, timeOut?: number)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/test/shorthand/ng2-jasmine.ts:26\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              name\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              fn\n                                                              \n                                                                      Function\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              timeOut\n                                                              \n                                                                      number\n                                                              \n                                                              \n                                                                  true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ae\n                                    \n                                \n                                \n                                    \n                                        ae:     Function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Function\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/test/shorthand/ng2-jasmine.ts:11\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        afterEach\n                                    \n                                \n                                \n                                    \n                                        afterEach:     Function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Function\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/test/shorthand/ng2-jasmine.ts:12\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        describe\n                                    \n                                \n                                \n                                    \n                                        describe:     Function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Function\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/test/shorthand/ng2-jasmine.ts:13\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fdescribe\n                                    \n                                \n                                \n                                    \n                                        fdescribe:     Function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Function\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/test/shorthand/ng2-jasmine.ts:14\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xdescribe\n                                    \n                                \n                                \n                                    \n                                        xdescribe:     Function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Function\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/test/shorthand/ng2-jasmine.ts:15\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  async,\n  fakeAsync,\n  inject,\n  tick\n} from '@angular/core/testing';\n\n// intellisense via shorthand\nexport interface TestApi {\n  ae: Function;\n  afterEach: Function;\n  describe: Function;\n  fdescribe: Function;\n  xdescribe: Function;\n  async(fn: Function): Function;\n  fakeAsync(fn: Function): Function;\n  be(fn: Function): void;\n  beforeEach(fn: Function): void;\n  e(actual: any): jasmine.Matchers;\n  expect(actual: any): jasmine.Matchers;\n  fail(e?: any): void;\n  inject(tokens: Array, fn: Function): Function;\n  it(name: string, fn: Function, timeOut?: number): void;\n  fit(name: string, fn: Function, timeOut?: number): void;\n  xit(name: string, fn: Function, timeOut?: number): void;\n  pending(reason?: string): void;\n  spyOn(object: any, method: string): jasmine.Spy;\n  tick(delay?: number): void;\n}\n\n// shorthand - reduces boilerplate in every test\nexport const Ng2Jasmine: TestApi = {\n  ae: afterEach, // shorthand\n  afterEach: afterEach,\n  describe: describe,\n  fdescribe: fdescribe,\n  xdescribe: xdescribe,\n  async: async,\n  fakeAsync: fakeAsync,\n  be: beforeEach,  // shorthand beforeEach\n  beforeEach: beforeEach,\n  e: expect, // shorthand expect\n  expect: expect,\n  fail: fail,\n  inject: inject,\n  it: it,\n  fit: fit,\n  xit: xit,\n  pending: pending,\n  spyOn: spyOn,\n  tick: tick\n};\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToolbarInterface.html":{"url":"interfaces/ToolbarInterface.html","title":"interface - ToolbarInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ToolbarInterface\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/puzzle/components/toolbar/toolbar.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        about\n                                \n                                \n                                        database\n                                \n                                \n                                        options\n                                \n                                \n                                        toggle\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                     onAboutClick\n                                \n                                \n                                     onActionChange\n                                \n                                \n                                     onToggleClick\n                                \n                                \n                                     transform\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     onAboutClick\n                                \n                            \n                            \n                                \n            onAboutClick()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/components/toolbar/toolbar.interface.ts:12\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     onActionChange\n                                \n                            \n                            \n                                \n            onActionChange(action: ActionsEnum)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/components/toolbar/toolbar.interface.ts:13\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              action\n                                                              \n                                                                      ActionsEnum\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     onToggleClick\n                                \n                            \n                            \n                                \n            onToggleClick()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/components/toolbar/toolbar.interface.ts:11\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     transform\n                                \n                            \n                            \n                                \n            transform(options: ToolbarOptionsInterface)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/components/toolbar/toolbar.interface.ts:14\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              options\n                                                              \n                                                                      ToolbarOptionsInterface\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     ToolbarOptionsInterface\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        about\n                                    \n                                \n                                \n                                    \n                                        about:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/components/toolbar/toolbar.interface.ts:10\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                    \n                                \n                                \n                                    \n                                        database:     DatabaseServiceInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DatabaseServiceInterface\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/components/toolbar/toolbar.interface.ts:8\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     ToolbarOptionsInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ToolbarOptionsInterface\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/components/toolbar/toolbar.interface.ts:7\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toggle\n                                    \n                                \n                                \n                                    \n                                        toggle:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/components/toolbar/toolbar.interface.ts:9\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {EventEmitter} from '@angular/core';\nimport {ToolbarComponent} from './toolbar.component';\nimport {ToolbarOptionsInterface} from './toolbar-options.interface';\nimport {ActionsEnum, DatabaseServiceInterface} from '../../index';\n\nexport interface ToolbarInterface {\n  options: ToolbarOptionsInterface;\n  readonly database: DatabaseServiceInterface;\n  toggle: EventEmitter;\n  about: EventEmitter;\n  onToggleClick(): void;\n  onAboutClick(): void;\n  onActionChange(action: ActionsEnum): void;\n  transform(options: ToolbarOptionsInterface): ToolbarOptionsInterface;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToolbarOptionsInterface.html":{"url":"interfaces/ToolbarOptionsInterface.html","title":"interface - ToolbarOptionsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ToolbarOptionsInterface\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/client/app/modules/puzzle/components/toolbar/toolbar-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        actionService\n                                \n                                \n                                        backRouterLink\n                                \n                                \n                                        backText\n                                \n                                \n                                        backTitleText\n                                \n                                \n                                        id\n                                \n                                \n                                        isBack\n                                \n                                \n                                        state\n                                \n                                \n                                        stateService\n                                \n                                \n                                        toggleText\n                                \n                                \n                                        toggleTitle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionService\n                                    \n                                \n                                \n                                    \n                                        actionService:     ActionsServiceInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ActionsServiceInterface\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/components/toolbar/toolbar-options.interface.ts:9\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        backRouterLink\n                                    \n                                \n                                \n                                    \n                                        backRouterLink:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/components/toolbar/toolbar-options.interface.ts:14\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        backText\n                                    \n                                \n                                \n                                    \n                                        backText:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/components/toolbar/toolbar-options.interface.ts:16\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        backTitleText\n                                    \n                                \n                                \n                                    \n                                        backTitleText:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/components/toolbar/toolbar-options.interface.ts:15\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/components/toolbar/toolbar-options.interface.ts:7\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isBack\n                                    \n                                \n                                \n                                    \n                                        isBack:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/components/toolbar/toolbar-options.interface.ts:11\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/components/toolbar/toolbar-options.interface.ts:8\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stateService\n                                    \n                                \n                                \n                                    \n                                        stateService:     StateServiceInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StateServiceInterface\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/components/toolbar/toolbar-options.interface.ts:10\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toggleText\n                                    \n                                \n                                \n                                    \n                                        toggleText:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/components/toolbar/toolbar-options.interface.ts:12\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toggleTitle\n                                    \n                                \n                                \n                                    \n                                        toggleTitle:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/client/app/modules/puzzle/components/toolbar/toolbar-options.interface.ts:13\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ActionsServiceInterface,\n  StateServiceInterface\n} from './../../index';\n\nexport interface ToolbarOptionsInterface {\n  id: string;\n  state?: string;\n  actionService?: ActionsServiceInterface;\n  stateService?: StateServiceInterface;\n  isBack?: boolean;\n  toggleText?: string;\n  toggleTitle?: string;\n  backRouterLink?: string;\n  backTitleText?: string;\n  backText?:string;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppReducer\n                        \n                        \n                            cons\n                        \n                        \n                            consoleLogTarget\n                        \n                        \n                            createConsoleTarget\n                        \n                        \n                            GET_HTTP_PROVIDERS_INJECTOR\n                        \n                        \n                            getLang\n                        \n                        \n                            getLanguages\n                        \n                        \n                            getMultilingualState\n                        \n                        \n                            getNameListState\n                        \n                        \n                            getNames\n                        \n                        \n                            provideConsoleTarget\n                        \n                        \n                            reducer\n                        \n                        \n                            reducer\n                        \n                        \n                            selectDropdownByNumber\n                        \n                        \n                            selectDropdownByValue\n                        \n                        \n                            selectRandomDropdownReturnText\n                        \n                        \n                            storage\n                        \n                        \n                            TEST_CORE_PROVIDERS\n                        \n                        \n                            TEST_HTTP_PROVIDERS\n                        \n                        \n                            TEST_LOCATION_PROVIDERS\n                        \n                        \n                            TEST_MULTILINGUAL_PROVIDERS\n                        \n                        \n                            translateLoaderFactory\n                        \n                        \n                            type\n                        \n                        \n                            win\n                        \n                    \n                \n            \n        \n    \n\n\n    src/client/app/modules/ngrx/index.ts\n    \n                \n                \n                    \n                        \n                            \n                             AppReducer\n                        \n                    \n                    \n                        \n    AppReducer(state: undefined, action: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             getMultilingualState\n                        \n                    \n                    \n                        \n    getMultilingualState(state$: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             getNameListState\n                        \n                    \n                    \n                        \n    getNameListState(state$: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n    \n    src/client/web.module.ts\n    \n                \n                \n                    \n                        \n                            \n                             cons\n                        \n                    \n                    \n                        \n    cons()\n                        \n                    \n    \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             consoleLogTarget\n                        \n                    \n                    \n                        \n    consoleLogTarget(consoleService: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             storage\n                        \n                    \n                    \n                        \n    storage()\n                        \n                    \n    \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             win\n                        \n                    \n                    \n                        \n    win()\n                        \n                    \n    \n    \n    \n                \n            \n    \n    src/client/app/modules/core/services/logging/console.target.ts\n    \n                \n                \n                    \n                        \n                            \n                             createConsoleTarget\n                        \n                    \n                    \n                        \n    createConsoleTarget(level: undefined, consoleService: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             provideConsoleTarget\n                        \n                    \n                    \n                        \n    provideConsoleTarget(logLevel: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n    \n    src/client/app/modules/core/testing/providers/http.ts\n    \n                \n                \n                    \n                        \n                            \n                             GET_HTTP_PROVIDERS_INJECTOR\n                        \n                    \n                    \n                        \n    GET_HTTP_PROVIDERS_INJECTOR(additionalProviders: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             TEST_HTTP_PROVIDERS\n                        \n                    \n                    \n                        \n    TEST_HTTP_PROVIDERS()\n                        \n                    \n    \n    \n    \n                \n            \n    \n    src/client/app/modules/i18n/states/multilingual.state.ts\n    \n                \n                \n                    \n                        \n                            \n                             getLang\n                        \n                    \n                    \n                        \n    getLang(state$: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n    \n    src/client/app/modules/i18n/testing/index.ts\n    \n                \n                \n                    \n                        \n                            \n                             getLanguages\n                        \n                    \n                    \n                        \n    getLanguages()\n                        \n                    \n    \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             TEST_MULTILINGUAL_PROVIDERS\n                        \n                    \n                    \n                        \n    TEST_MULTILINGUAL_PROVIDERS()\n                        \n                    \n    \n    \n    \n                \n            \n    \n    src/client/app/modules/sample/states/sample.state.ts\n    \n                \n                \n                    \n                        \n                            \n                             getNames\n                        \n                    \n                    \n                        \n    getNames(state$: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n    \n    src/client/app/modules/sample/reducers/sample.reducer.ts\n    \n                \n                \n                    \n                        \n                            \n                             reducer\n                        \n                    \n                    \n                        \n    reducer(state: undefined, action: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n    \n    src/client/app/modules/i18n/reducers/multilingual.reducer.ts\n    \n                \n                \n                    \n                        \n                            \n                             reducer\n                        \n                    \n                    \n                        \n    reducer(state: undefined, action: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n    \n    src/client/app/modules/test/e2e/dropdowns.ts\n    \n                \n                \n                    \n                        \n                            \n                             selectDropdownByNumber\n                        \n                    \n                    \n                        \n    selectDropdownByNumber(selector: undefined, index: undefined, milliseconds: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             selectDropdownByValue\n                        \n                    \n                    \n                        \n    selectDropdownByValue(selector: undefined, item: undefined, milliseconds: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             selectRandomDropdownReturnText\n                        \n                    \n                    \n                        \n    selectRandomDropdownReturnText(selector: undefined, milliseconds: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n    \n    src/client/app/modules/core/testing/providers/core.ts\n    \n                \n                \n                    \n                        \n                            \n                             TEST_CORE_PROVIDERS\n                        \n                    \n                    \n                        \n    TEST_CORE_PROVIDERS(options: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n    \n    src/client/app/modules/core/testing/providers/router.ts\n    \n                \n                \n                    \n                        \n                            \n                             TEST_LOCATION_PROVIDERS\n                        \n                    \n                    \n                        \n    TEST_LOCATION_PROVIDERS()\n                        \n                    \n    \n    \n    \n                \n            \n    \n    src/client/app/modules/i18n/multilingual.module.ts\n    \n                \n                \n                    \n                        \n                            \n                             translateLoaderFactory\n                        \n                    \n                    \n                        \n    translateLoaderFactory(http: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n    \n    src/client/app/modules/core/utils/type.ts\n    \n                \n                \n                    \n                        \n                            \n                             type\n                        \n                    \n                    \n                        \n    type(label: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AboutRoutes\n                        \n                        \n                            ACTION_PROVIDERS\n                        \n                        \n                            ActionTypes\n                        \n                        \n                            ANALYTICS_PROVIDERS\n                        \n                        \n                            app\n                        \n                        \n                            APP_COMPONENTS\n                        \n                        \n                            browser\n                        \n                        \n                            BrowserWindow\n                        \n                        \n                            CATEGORY\n                        \n                        \n                            CORE_DIRECTIVES\n                        \n                        \n                            CORE_PROVIDERS\n                        \n                        \n                            DEV_IMPORTS\n                        \n                        \n                            developmentReducer\n                        \n                        \n                            electron\n                        \n                        \n                            getLang\n                        \n                        \n                            getNames\n                        \n                        \n                            HomeRoutes\n                        \n                        \n                            initialState\n                        \n                        \n                            LanguageProviders\n                        \n                        \n                            Languages\n                        \n                        \n                            LanguageViewHelper\n                        \n                        \n                            mainWindow\n                        \n                        \n                            menu\n                        \n                        \n                            Menu\n                        \n                        \n                            MULTILANG_COMPONENTS\n                        \n                        \n                            MULTILANG_PROVIDERS\n                        \n                        \n                            Ng2Jasmine\n                        \n                        \n                            productionReducer\n                        \n                        \n                            providers\n                        \n                        \n                            PUZZLE_COMPONENTS\n                        \n                        \n                            PUZZLE_PROVIDERS\n                        \n                        \n                            PuzzleRoutes\n                        \n                        \n                            reducers\n                        \n                        \n                            routerModule\n                        \n                        \n                            routes\n                        \n                        \n                            SAMPLE_PROVIDERS\n                        \n                        \n                            sampleInitialState\n                        \n                        \n                            SHARED_COMPONENTS\n                        \n                        \n                            SHARED_MODULES\n                        \n                        \n                            shell\n                        \n                        \n                            System\n                        \n                        \n                            t\n                        \n                        \n                            template\n                        \n                        \n                            typeCache\n                        \n                        \n                            window\n                        \n                        \n                            window\n                        \n                    \n                \n            \n        \n    \n\n\n    src/client/app/components/about/about.routes.ts\n    \n                \n                \n                    \n                        \n                            \n                             AboutRoutes\n                        \n                    \n                    \n                        \n                            AboutRoutes:     Array\n    \n                        \n                    \n                        \n                            \n                                Type :     Array\n    \n                            \n                        \n    \n    \n                \n            \n    \n    src/client/app/modules/puzzle/actions/index.ts\n    \n                \n                \n                    \n                        \n                            \n                             ACTION_PROVIDERS\n                        \n                    \n                    \n                        \n                            ACTION_PROVIDERS:     any[]\n    \n                        \n                    \n                        \n                            \n                                Type :     any[]\n    \n                            \n                        \n    \n    \n                \n            \n    \n    src/client/app/modules/i18n/actions/multilingual.action.ts\n    \n                \n                \n                    \n                        \n                            \n                             ActionTypes\n                        \n                    \n                    \n                        \n                            ActionTypes:     IMultilingualActions\n    \n                        \n                    \n                        \n                            \n                                Type :     IMultilingualActions\n    \n                            \n                        \n    \n    \n                \n            \n    \n    src/client/app/modules/analytics/services/index.ts\n    \n                \n                \n                    \n                        \n                            \n                             ANALYTICS_PROVIDERS\n                        \n                    \n                    \n                        \n                            ANALYTICS_PROVIDERS:     Array\n    \n                        \n                    \n                        \n                            \n                                Type :     Array\n    \n                            \n                        \n    \n    \n                \n            \n    \n    src/client/main.desktop.ts\n    \n                \n                \n                    \n                        \n                            \n                             app\n                        \n                    \n                    \n                        \n                            app:     \n    \n                        \n                    \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             BrowserWindow\n                        \n                    \n                    \n                        \n                            BrowserWindow:     \n    \n                        \n                    \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             electron\n                        \n                    \n                    \n                        \n                            electron:     \n    \n                        \n                    \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             mainWindow\n                        \n                    \n                    \n                        \n                            mainWindow:     any\n    \n                        \n                    \n                        \n                            \n                                Type :     any\n    \n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             menu\n                        \n                    \n                    \n                        \n                            menu:     any\n    \n                        \n                    \n                        \n                            \n                                Type :     any\n    \n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             Menu\n                        \n                    \n                    \n                        \n                            Menu:     any\n    \n                        \n                    \n                        \n                            \n                                Type :     any\n    \n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             shell\n                        \n                    \n                    \n                        \n                            shell:     any\n    \n                        \n                    \n                        \n                            \n                                Type :     any\n    \n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             template\n                        \n                    \n                    \n                        \n                            template:     any\n    \n                        \n                    \n                        \n                            \n                                Type :     any\n    \n                            \n                        \n    \n    \n                \n            \n    \n    src/client/app/components/index.ts\n    \n                \n                \n                    \n                        \n                            \n                             APP_COMPONENTS\n                        \n                    \n                    \n                        \n                            APP_COMPONENTS:     any[]\n    \n                        \n                    \n                        \n                            \n                                Type :     any[]\n    \n                            \n                        \n    \n    \n                \n            \n    \n    src/client/app/modules/test/e2e/dropdowns.ts\n    \n                \n                \n                    \n                        \n                            \n                             browser\n                        \n                    \n                    \n                        \n                            browser:     any\n    \n                        \n                    \n                        \n                            \n                                Type :     any\n    \n                            \n                        \n    \n    \n                \n            \n    \n    src/client/app/modules/i18n/common/category.common.ts\n    \n                \n                \n                    \n                        \n                            \n                             CATEGORY\n                        \n                    \n                    \n                        \n                            CATEGORY:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                        \n                            \n                                Default value : Multilingual\n                            \n                        \n    \n    \n                \n            \n    \n    src/client/app/modules/core/directives/index.ts\n    \n                \n                \n                    \n                        \n                            \n                             CORE_DIRECTIVES\n                        \n                    \n                    \n                        \n                            CORE_DIRECTIVES:     any[]\n    \n                        \n                    \n                        \n                            \n                                Type :     any[]\n    \n                            \n                        \n    \n    \n                \n            \n    \n    src/client/app/modules/core/services/index.ts\n    \n                \n                \n                    \n                        \n                            \n                             CORE_PROVIDERS\n                        \n                    \n                    \n                        \n                            CORE_PROVIDERS:     any[]\n    \n                        \n                    \n                        \n                            \n                                Type :     any[]\n    \n                            \n                        \n    \n    \n                \n            \n    \n    src/client/web.module.ts\n    \n                \n                \n                    \n                        \n                            \n                             DEV_IMPORTS\n                        \n                    \n                    \n                        \n                            DEV_IMPORTS:     any[]\n    \n                        \n                    \n                        \n                            \n                                Type :     any[]\n    \n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             routerModule\n                        \n                    \n                    \n                        \n                            routerModule:     \n    \n                        \n                    \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             window\n                        \n                    \n                    \n                        \n                            window:     \n    \n                        \n                    \n    \n    \n                \n            \n    \n    src/client/app/modules/ngrx/index.ts\n    \n                \n                \n                    \n                        \n                            \n                             developmentReducer\n                        \n                    \n                    \n                        \n                            developmentReducer:     ActionReducer<>\n    \n                        \n                    \n                        \n                            \n                                Type :     ActionReducer<>\n    \n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             getLang\n                        \n                    \n                    \n                        \n                            getLang:     any\n    \n                        \n                    \n                        \n                            \n                                Type :     any\n    \n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             getNames\n                        \n                    \n                    \n                        \n                            getNames:     any\n    \n                        \n                    \n                        \n                            \n                                Type :     any\n    \n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             productionReducer\n                        \n                    \n                    \n                        \n                            productionReducer:     ActionReducer<>\n    \n                        \n                    \n                        \n                            \n                                Type :     ActionReducer<>\n    \n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             reducers\n                        \n                    \n                    \n                        \n                            reducers:     object\n    \n                        \n                    \n                        \n                            \n                                Type :     object\n    \n                            \n                        \n    \n                    \n                        \n                            Because metareducers take a reducer function and return a new reducer,\n    we can use our compose helper to chain them together. Here we are\n    using combineReducers to make our top level reducer, and then\n    wrapping that in storeLogger. Remember that compose applies\n    the result from right to left.\n    \n                        \n                    \n    \n                \n            \n    \n    src/client/app/components/home/home.routes.ts\n    \n                \n                \n                    \n                        \n                            \n                             HomeRoutes\n                        \n                    \n                    \n                        \n                            HomeRoutes:     Array\n    \n                        \n                    \n                        \n                            \n                                Type :     Array\n    \n                            \n                        \n    \n    \n                \n            \n    \n    src/client/app/modules/i18n/states/multilingual.state.ts\n    \n                \n                \n                    \n                        \n                            \n                             initialState\n                        \n                    \n                    \n                        \n                            initialState:     IMultilingualState\n    \n                        \n                    \n                        \n                            \n                                Type :     IMultilingualState\n    \n                            \n                        \n    \n    \n                \n            \n    \n    src/client/app/modules/i18n/services/multilingual.service.ts\n    \n                \n                \n                    \n                        \n                            \n                             LanguageProviders\n                        \n                    \n                    \n                        \n                            LanguageProviders:     []\n    \n                        \n                    \n                        \n                            \n                                Type :     []\n    \n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             Languages\n                        \n                    \n                    \n                        \n                            Languages:     InjectionToken<>\n    \n                        \n                    \n                        \n                            \n                                Type :     InjectionToken<>\n    \n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             LanguageViewHelper\n                        \n                    \n                    \n                        \n                            LanguageViewHelper:     InjectionToken<>\n    \n                        \n                    \n                        \n                            \n                                Type :     InjectionToken<>\n    \n                            \n                        \n    \n    \n                \n            \n    \n    src/client/app/modules/i18n/components/index.ts\n    \n                \n                \n                    \n                        \n                            \n                             MULTILANG_COMPONENTS\n                        \n                    \n                    \n                        \n                            MULTILANG_COMPONENTS:     any[]\n    \n                        \n                    \n                        \n                            \n                                Type :     any[]\n    \n                            \n                        \n    \n    \n                \n            \n    \n    src/client/app/modules/i18n/services/index.ts\n    \n                \n                \n                    \n                        \n                            \n                             MULTILANG_PROVIDERS\n                        \n                    \n                    \n                        \n                            MULTILANG_PROVIDERS:     any[]\n    \n                        \n                    \n                        \n                            \n                                Type :     any[]\n    \n                            \n                        \n    \n                    \n                        \n                            This is located in the i18n folder for organization\n    However these are imported in CoreModule since\n    MultilingualService should be a singleton across entire app\n    lazy-loaded modules or not.\n    \n                        \n                    \n    \n                \n            \n    \n    src/client/app/modules/test/shorthand/ng2-jasmine.ts\n    \n                \n                \n                    \n                        \n                            \n                             Ng2Jasmine\n                        \n                    \n                    \n                        \n                            Ng2Jasmine:     TestApi\n    \n                        \n                    \n                        \n                            \n                                Type :     TestApi\n    \n                            \n                        \n    \n    \n                \n            \n    \n    src/client/app/modules/core/testing/providers/http.ts\n    \n                \n                \n                    \n                        \n                            \n                             providers\n                        \n                    \n                    \n                        \n                            providers:     Array\n    \n                        \n                    \n                        \n                            \n                                Type :     Array\n    \n                            \n                        \n    \n    \n                \n            \n    \n    src/client/app/modules/puzzle/components/index.ts\n    \n                \n                \n                    \n                        \n                            \n                             PUZZLE_COMPONENTS\n                        \n                    \n                    \n                        \n                            PUZZLE_COMPONENTS:     any[]\n    \n                        \n                    \n                        \n                            \n                                Type :     any[]\n    \n                            \n                        \n    \n    \n                \n            \n    \n    src/client/app/modules/puzzle/services/index.ts\n    \n                \n                \n                    \n                        \n                            \n                             PUZZLE_PROVIDERS\n                        \n                    \n                    \n                        \n                            PUZZLE_PROVIDERS:     any[]\n    \n                        \n                    \n                        \n                            \n                                Type :     any[]\n    \n                            \n                        \n    \n    \n                \n            \n    \n    src/client/app/components/puzzle/puzzle.routes.ts\n    \n                \n                \n                    \n                        \n                            \n                             PuzzleRoutes\n                        \n                    \n                    \n                        \n                            PuzzleRoutes:     Array\n    \n                        \n                    \n                        \n                            \n                                Type :     Array\n    \n                            \n                        \n    \n    \n                \n            \n    \n    src/client/app/components/app.routes.ts\n    \n                \n                \n                    \n                        \n                            \n                             routes\n                        \n                    \n                    \n                        \n                            routes:     Array\n    \n                        \n                    \n                        \n                            \n                                Type :     Array\n    \n                            \n                        \n    \n    \n                \n            \n    \n    src/client/app/modules/sample/services/index.ts\n    \n                \n                \n                    \n                        \n                            \n                             SAMPLE_PROVIDERS\n                        \n                    \n                    \n                        \n                            SAMPLE_PROVIDERS:     any[]\n    \n                        \n                    \n                        \n                            \n                                Type :     any[]\n    \n                            \n                        \n    \n    \n                \n            \n    \n    src/client/app/modules/sample/states/sample.state.ts\n    \n                \n                \n                    \n                        \n                            \n                             sampleInitialState\n                        \n                    \n                    \n                        \n                            sampleInitialState:     ISampleState\n    \n                        \n                    \n                        \n                            \n                                Type :     ISampleState\n    \n                            \n                        \n    \n    \n                \n            \n    \n    src/client/app/modules/shared/components/index.ts\n    \n                \n                \n                    \n                        \n                            \n                             SHARED_COMPONENTS\n                        \n                    \n                    \n                        \n                            SHARED_COMPONENTS:     any[]\n    \n                        \n                    \n                        \n                            \n                                Type :     any[]\n    \n                            \n                        \n    \n    \n                \n            \n    \n    src/client/app/modules/shared/shared.module.ts\n    \n                \n                \n                    \n                        \n                            \n                             SHARED_MODULES\n                        \n                    \n                    \n                        \n                            SHARED_MODULES:     any[]\n    \n                        \n                    \n                        \n                            \n                                Type :     any[]\n    \n                            \n                        \n    \n    \n                \n            \n    \n    src/client/system-config.ts\n    \n                \n                \n                    \n                        \n                            \n                             System\n                        \n                    \n                    \n                        \n                            System:     \n    \n                        \n                    \n    \n    \n                \n            \n    \n    src/client/app/modules/test/index.ts\n    \n                \n                \n                    \n                        \n                            \n                             t\n                        \n                    \n                    \n                        \n                            t:     TestApi\n    \n                        \n                    \n                        \n                            \n                                Type :     TestApi\n    \n                            \n                        \n                        \n                            \n                                Default value : Ng2Jasmine\n                            \n                        \n    \n    \n                \n            \n    \n    src/client/app/modules/core/utils/type.ts\n    \n                \n                \n                    \n                        \n                            \n                             typeCache\n                        \n                    \n                    \n                        \n                            typeCache:     literal type\n    \n                        \n                    \n                        \n                            \n                                Type :     literal type\n    \n                            \n                        \n    \n                    \n                        \n                            This function coerces a string into a string literal type.\n    Using tagged union types in TypeScript 2.0, this enables\n    powerful typechecking of our reducers.\n    Since every action label passes through this function it\n    is a good place to ensure all of our action labels\n    are unique.\n    \n                        \n                    \n    \n                \n            \n    \n    src/client/app/modules/electron/services/event.service.ts\n    \n                \n                \n                    \n                        \n                            \n                             window\n                        \n                    \n                    \n                        \n                            window:     any\n    \n                        \n                    \n                        \n                            \n                                Type :     any\n    \n                            \n                        \n    \n    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Actions\n                        \n                    \n                \n            \n        \n    \n\n\n    src/client/app/modules/i18n/actions/multilingual.action.ts\n    \n            \n                \n                    \n                        \n                            \n                            Actions\n                        \n                    \n                        \n                            \n                                Export a type alias of all actions in this action group\n    so that reducers can easily compose action types\n    \n                            \n                        \n                    \n                        \n                            Actions:     ChangeAction | LangChangedAction | LangUnsupportedAction\n    \n                        \n                    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionsEnum\n                        \n                        \n                            LogLevel\n                        \n                        \n                            StorageKey\n                        \n                    \n                \n            \n        \n    \n\n\n    src/client/app/modules/puzzle/actions/actions.enum.ts\n    \n            \n                \n                    \n                        \n                            \n                            ActionsEnum\n                        \n                    \n                            \n                                \n                                     LOAD\n                                \n                            \n                            \n                                \n                                     READY\n                                \n                            \n                            \n                                \n                                     PLAY\n                                \n                            \n                            \n                                \n                                     SOLVE\n                                \n                            \n                            \n                                \n                                     HELP\n                                \n                            \n                            \n                                \n                                     SAVE\n                                \n                            \n                            \n                                \n                                     START\n                                \n                            \n                \n            \n    \n    src/client/app/modules/core/services/logging/log.target.ts\n    \n            \n                \n                    \n                        \n                            \n                            LogLevel\n                        \n                    \n                            \n                                \n                                     Debug\n                                \n                            \n                            \n                                \n                                    Value: 0\n                                \n                            \n                            \n                                \n                                     Info\n                                \n                            \n                            \n                                \n                                    Value: 1\n                                \n                            \n                            \n                                \n                                     Warning\n                                \n                            \n                            \n                                \n                                    Value: 2\n                                \n                            \n                            \n                                \n                                     Error\n                                \n                            \n                            \n                                \n                                    Value: 4\n                                \n                            \n                \n            \n    \n    src/client/app/modules/core/interfaces/istorage.ts\n    \n            \n                \n                    \n                        \n                            \n                            StorageKey\n                        \n                    \n                            \n                                \n                                     USERNAME\n                                \n                            \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                src/client/app/components/about/about.component.ts\n            \n            \n                component\n            \n            \n                AboutComponent\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                src/client/app/components/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                src/client/app/components/home/home.component.ts\n            \n            \n                component\n            \n            \n                HomeComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                src/client/app/components/puzzle/puzzle-state.service.ts\n            \n            \n                injectable\n            \n            \n                PuzzleStateService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/client/app/components/puzzle/puzzle.component.ts\n            \n            \n                component\n            \n            \n                PuzzleComponent\n            \n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                src/client/app/modules/analytics/services/analytics.service.ts\n            \n            \n                class\n            \n            \n                Analytics\n            \n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                src/client/app/modules/analytics/services/analytics.service.ts\n            \n            \n                injectable\n            \n            \n                AnalyticsService\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                src/client/app/modules/analytics/services/analytics.service.ts\n            \n            \n                interface\n            \n            \n                IAnalytics\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/client/app/modules/analytics/services/analytics.service.ts\n            \n            \n                interface\n            \n            \n                IAnalyticsProperties\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/client/app/modules/core/core.module.ts\n            \n            \n                interface\n            \n            \n                ICoreModuleOptions\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/client/app/modules/core/directives/platform.directive.ts\n            \n            \n                directive\n            \n            \n                PlatformDirective\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/client/app/modules/core/interfaces/iconsole.ts\n            \n            \n                interface\n            \n            \n                IConsole\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                src/client/app/modules/core/interfaces/ilang.ts\n            \n            \n                interface\n            \n            \n                ILang\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/client/app/modules/core/interfaces/istorage.ts\n            \n            \n                interface\n            \n            \n                IStorage\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/client/app/modules/core/interfaces/iwindow.ts\n            \n            \n                interface\n            \n            \n                IWindow\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                src/client/app/modules/core/services/app.service.ts\n            \n            \n                injectable\n            \n            \n                AppService\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/client/app/modules/core/services/console.service.ts\n            \n            \n                injectable\n            \n            \n                ConsoleService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                src/client/app/modules/core/services/logging/console.target.ts\n            \n            \n                injectable\n            \n            \n                ConsoleTarget\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/client/app/modules/core/services/logging/log.service.ts\n            \n            \n                injectable\n            \n            \n                LogService\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                src/client/app/modules/core/services/logging/log.target.ts\n            \n            \n                class\n            \n            \n                LogTarget\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/client/app/modules/core/services/logging/log.target.ts\n            \n            \n                class\n            \n            \n                LogTargetBase\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/client/app/modules/core/services/logging/log.target.ts\n            \n            \n                class\n            \n            \n                LogTargetOptions\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/client/app/modules/core/services/logging/log.target.ts\n            \n            \n                interface\n            \n            \n                LogEvent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/client/app/modules/core/services/router-extensions.service.ts\n            \n            \n                injectable\n            \n            \n                RouterExtensions\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                src/client/app/modules/core/services/router-extensions.service.ts\n            \n            \n                interface\n            \n            \n                ExtendedNavigationExtras\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/client/app/modules/core/services/router-extensions.service.ts\n            \n            \n                interface\n            \n            \n                IRouterExtensions\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/client/app/modules/core/services/storage.service.ts\n            \n            \n                injectable\n            \n            \n                StorageService\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/client/app/modules/core/services/window.service.ts\n            \n            \n                injectable\n            \n            \n                WindowService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                src/client/app/modules/core/testing/mocks/mock-location-strategy.ts\n            \n            \n                class\n            \n            \n                MockPopStateEvent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                src/client/app/modules/core/testing/mocks/mock-location-strategy.ts\n            \n            \n                injectable\n            \n            \n                MockLocationStrategy\n            \n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                src/client/app/modules/core/testing/mocks/ng2-config.mock.ts\n            \n            \n                class\n            \n            \n                ConfigMock\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/client/app/modules/core/testing/mocks/router-extensions.mock.ts\n            \n            \n                injectable\n            \n            \n                RouterExtensionsMock\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/client/app/modules/core/testing/mocks/window.mock.ts\n            \n            \n                class\n            \n            \n                WindowMock\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                src/client/app/modules/core/testing/mocks/window.mock.ts\n            \n            \n                class\n            \n            \n                WindowMockFrench\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/client/app/modules/core/testing/mocks/window.mock.ts\n            \n            \n                class\n            \n            \n                WindowMockNoLanguage\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/client/app/modules/core/utils/config.ts\n            \n            \n                class\n            \n            \n                Config\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                src/client/app/modules/core/utils/config.ts\n            \n            \n                interface\n            \n            \n                EnvConfig\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/client/app/modules/core/utils/config.ts\n            \n            \n                interface\n            \n            \n                IPlatforms\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                src/client/app/modules/electron/services/event.service.ts\n            \n            \n                class\n            \n            \n                ElectronEventService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/client/app/modules/electron/utils/desktop-config.ts\n            \n            \n                class\n            \n            \n                DesktopConfig\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/client/app/modules/i18n/actions/multilingual.action.ts\n            \n            \n                class\n            \n            \n                ChangeAction\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                src/client/app/modules/i18n/actions/multilingual.action.ts\n            \n            \n                class\n            \n            \n                LangChangedAction\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/client/app/modules/i18n/actions/multilingual.action.ts\n            \n            \n                class\n            \n            \n                LangUnsupportedAction\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/client/app/modules/i18n/actions/multilingual.action.ts\n            \n            \n                interface\n            \n            \n                IMultilingualActions\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                src/client/app/modules/i18n/components/lang-switcher.component.ts\n            \n            \n                component\n            \n            \n                LangSwitcherComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                src/client/app/modules/i18n/effects/multilingual.effect.ts\n            \n            \n                injectable\n            \n            \n                MultilingualEffects\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/client/app/modules/i18n/services/multilingual.service.ts\n            \n            \n                injectable\n            \n            \n                MultilingualService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/client/app/modules/i18n/states/multilingual.state.ts\n            \n            \n                interface\n            \n            \n                IMultilingualState\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/client/app/modules/i18n/testing/mocks/ng2-config-multilang.mock.ts\n            \n            \n                class\n            \n            \n                ConfigMockMultilang\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/client/app/modules/i18n/testing/mocks/ng2-translate-loader.mock.ts\n            \n            \n                class\n            \n            \n                TranslateLoaderMock\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/client/app/modules/i18n/testing/mocks/ng2-translate.mock.ts\n            \n            \n                class\n            \n            \n                TranslateMock\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                src/client/app/modules/ngrx/index.ts\n            \n            \n                interface\n            \n            \n                IAppState\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                src/client/app/modules/puzzle/actions/actions-service.interface.ts\n            \n            \n                interface\n            \n            \n                ActionsServiceInterface\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/client/app/modules/puzzle/actions/actions.service.ts\n            \n            \n                injectable\n            \n            \n                ActionsService\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                src/client/app/modules/puzzle/common/puzzle-config.common.ts\n            \n            \n                class\n            \n            \n                PuzzleConfig\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                src/client/app/modules/puzzle/common/utils.common.ts\n            \n            \n                class\n            \n            \n                Utils\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                src/client/app/modules/puzzle/components/base.component.ts\n            \n            \n                class\n            \n            \n                BaseComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                src/client/app/modules/puzzle/components/toolbar/toolbar-options.interface.ts\n            \n            \n                interface\n            \n            \n                ToolbarOptionsInterface\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                src/client/app/modules/puzzle/components/toolbar/toolbar.component.ts\n            \n            \n                component\n            \n            \n                ToolbarComponent\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                src/client/app/modules/puzzle/components/toolbar/toolbar.interface.ts\n            \n            \n                interface\n            \n            \n                ToolbarInterface\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                src/client/app/modules/puzzle/interfaces/model.interface.ts\n            \n            \n                interface\n            \n            \n                ModelInterface\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/client/app/modules/puzzle/services/base.service.ts\n            \n            \n                class\n            \n            \n                BaseService\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                src/client/app/modules/puzzle/services/board/board.model.ts\n            \n            \n                class\n            \n            \n                Board\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                src/client/app/modules/puzzle/services/board/board.service.ts\n            \n            \n                injectable\n            \n            \n                BoardService\n            \n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                src/client/app/modules/puzzle/services/board/row.model.ts\n            \n            \n                class\n            \n            \n                Row\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                src/client/app/modules/puzzle/services/board/square.model.ts\n            \n            \n                class\n            \n            \n                Square\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                src/client/app/modules/puzzle/services/database/config-record.model.ts\n            \n            \n                class\n            \n            \n                ConfigRecord\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                src/client/app/modules/puzzle/services/database/database-service.interface.ts\n            \n            \n                interface\n            \n            \n                DatabaseServiceInterface\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                src/client/app/modules/puzzle/services/database/local-storage.service.ts\n            \n            \n                injectable\n            \n            \n                LocalStorageService\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                src/client/app/modules/puzzle/services/state/state-service.interface.ts\n            \n            \n                interface\n            \n            \n                StateServiceInterface\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/client/app/modules/puzzle/services/state/state.service.ts\n            \n            \n                injectable\n            \n            \n                StateService\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                src/client/app/modules/sample/effects/sample.effect.ts\n            \n            \n                injectable\n            \n            \n                SampleEffects\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                src/client/app/modules/sample/services/name-list.service.ts\n            \n            \n                injectable\n            \n            \n                NameListService\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/client/app/modules/sample/states/sample.state.ts\n            \n            \n                interface\n            \n            \n                ISampleState\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/client/app/modules/shared/components/navbar/navbar.component.ts\n            \n            \n                component\n            \n            \n                NavbarComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/client/app/modules/shared/components/toolbar/toolbar.component.ts\n            \n            \n                component\n            \n            \n                ToolbarComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/client/app/modules/test/shorthand/ng2-jasmine.ts\n            \n            \n                interface\n            \n            \n                TestApi\n            \n            \n                0 %\n                (0/20)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
